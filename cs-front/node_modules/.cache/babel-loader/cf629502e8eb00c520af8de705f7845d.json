{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module find-and-replace/findandreplace\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport FindAndReplaceUI from './findandreplaceui';\nimport FindAndReplaceEditing from './findandreplaceediting';\n/**\n * The find and replace plugin.\n *\n * For a detailed overview, check the {@glink features/find-and-replace Find and replace feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:find-and-replace/findandreplaceediting~FindAndReplaceEditing find and replace editing feature},\n * * The {@link module:find-and-replace/findandreplaceui~FindAndReplaceUI find and replace UI feature}\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class FindAndReplace extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [FindAndReplaceEditing, FindAndReplaceUI];\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static get pluginName() {\n    return 'FindAndReplace';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const ui = this.editor.plugins.get('FindAndReplaceUI');\n    const findAndReplaceEditing = this.editor.plugins.get('FindAndReplaceEditing');\n    const state = findAndReplaceEditing.state;\n    ui.on('findNext', (event, data) => {\n      // Data is contained only for the \"find\" button.\n      if (data) {\n        state.searchText = data.searchText;\n        this.editor.execute('find', data.searchText, data);\n      } else {\n        // Find next arrow button press.\n        this.editor.execute('findNext');\n      }\n    });\n    ui.on('findPrevious', (event, data) => {\n      if (data && state.searchText !== data.searchText) {\n        this.editor.execute('find', data.searchText);\n      } else {\n        // Subsequent calls.\n        this.editor.execute('findPrevious');\n      }\n    });\n    ui.on('replace', (event, data) => {\n      if (state.searchText !== data.searchText) {\n        this.editor.execute('find', data.searchText);\n      }\n\n      const highlightedResult = state.highlightedResult;\n\n      if (highlightedResult) {\n        this.editor.execute('replace', data.replaceText, highlightedResult);\n      }\n    });\n    ui.on('replaceAll', (event, data) => {\n      // The state hadn't been yet built for this search text.\n      if (state.searchText !== data.searchText) {\n        this.editor.execute('find', data.searchText);\n      }\n\n      this.editor.execute('replaceAll', data.replaceText, state.results);\n    }); // Reset the state when the user invalidated last search results, for instance,\n    // by starting typing another search query or changing options.\n\n    ui.on('searchReseted', () => {\n      state.clear(this.editor.model);\n      findAndReplaceEditing.stop();\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-find-and-replace/src/findandreplace.js"],"names":["Plugin","FindAndReplaceUI","FindAndReplaceEditing","FindAndReplace","requires","pluginName","init","ui","editor","plugins","get","findAndReplaceEditing","state","on","event","data","searchText","execute","highlightedResult","replaceText","results","clear","model","stop"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module find-and-replace/findandreplace\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport FindAndReplaceUI from './findandreplaceui';\nimport FindAndReplaceEditing from './findandreplaceediting';\n\n/**\n * The find and replace plugin.\n *\n * For a detailed overview, check the {@glink features/find-and-replace Find and replace feature documentation}.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * The {@link module:find-and-replace/findandreplaceediting~FindAndReplaceEditing find and replace editing feature},\n * * The {@link module:find-and-replace/findandreplaceui~FindAndReplaceUI find and replace UI feature}\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FindAndReplace extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ FindAndReplaceEditing, FindAndReplaceUI ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'FindAndReplace';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst ui = this.editor.plugins.get( 'FindAndReplaceUI' );\n\t\tconst findAndReplaceEditing = this.editor.plugins.get( 'FindAndReplaceEditing' );\n\t\tconst state = findAndReplaceEditing.state;\n\n\t\tui.on( 'findNext', ( event, data ) => {\n\t\t\t// Data is contained only for the \"find\" button.\n\t\t\tif ( data ) {\n\t\t\t\tstate.searchText = data.searchText;\n\t\t\t\tthis.editor.execute( 'find', data.searchText, data );\n\t\t\t} else {\n\t\t\t\t// Find next arrow button press.\n\t\t\t\tthis.editor.execute( 'findNext' );\n\t\t\t}\n\t\t} );\n\n\t\tui.on( 'findPrevious', ( event, data ) => {\n\t\t\tif ( data && state.searchText !== data.searchText ) {\n\t\t\t\tthis.editor.execute( 'find', data.searchText );\n\t\t\t} else {\n\t\t\t\t// Subsequent calls.\n\t\t\t\tthis.editor.execute( 'findPrevious' );\n\t\t\t}\n\t\t} );\n\n\t\tui.on( 'replace', ( event, data ) => {\n\t\t\tif ( state.searchText !== data.searchText ) {\n\t\t\t\tthis.editor.execute( 'find', data.searchText );\n\t\t\t}\n\n\t\t\tconst highlightedResult = state.highlightedResult;\n\n\t\t\tif ( highlightedResult ) {\n\t\t\t\tthis.editor.execute( 'replace', data.replaceText, highlightedResult );\n\t\t\t}\n\t\t} );\n\n\t\tui.on( 'replaceAll', ( event, data ) => {\n\t\t\t// The state hadn't been yet built for this search text.\n\t\t\tif ( state.searchText !== data.searchText ) {\n\t\t\t\tthis.editor.execute( 'find', data.searchText );\n\t\t\t}\n\n\t\t\tthis.editor.execute( 'replaceAll', data.replaceText, state.results );\n\t\t} );\n\n\t\t// Reset the state when the user invalidated last search results, for instance,\n\t\t// by starting typing another search query or changing options.\n\t\tui.on( 'searchReseted', () => {\n\t\t\tstate.clear( this.editor.model );\n\t\t\tfindAndReplaceEditing.stop();\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}