{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport { BaseUrl } from './BaseUrl';\nimport { user } from './BaseUrl';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport ReactQuill from 'react-quill';\nimport Button from '@mui/material/Button';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [questions, setquestions] = React.useState([]);\n  const [questionD, setquestionD] = React.useState({\n    question: \"\"\n  });\n  const [questiond, setquestiond] = useState(\"\");\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    fetch(`${BaseUrl}questions`).then(data => data.json()).then(response => setquestions(response));\n  }, [setquestions]);\n\n  const submitQ = () => {\n    axiosInstance.post(`create-question`, {\n      question: questionD.question,\n      question_data: questiond,\n      user: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n    }).then(res => console.log(res));\n  };\n\n  const handleChange = event => {\n    console.log(typeof event);\n    setquestiond(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-md\",\n      style: {\n        \"marginTop\": \"3rem\",\n        width: \"75%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Recently asked questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), clicked === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          \"marginTop\": \"3%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              style: {\n                \"fontSize\": \"12px\"\n              },\n              children: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: questionD.question,\n              onChange: e => {\n                console.log(e.target.value);\n                setquestionD({\n                  question: e.target.value\n                });\n              },\n              className: \"form-control form-control-lg\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              id: \"emailHelp\",\n              style: {\n                \"fontSize\": \"10px\"\n              },\n              className: \"form-text text-muted\",\n              children: \"Write your Main Question here & additional info below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n            toolbarId: 't1'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            placeholder: \"Write additional information of here (Can left it blank too)\",\n            modules: modules('t1'),\n            formats: formats,\n            value: questiond,\n            onChange: handleChange,\n            style: {\n              \"width\": \"100%\",\n              \"height\": \"40%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: {\n            \"width\": \"50%\"\n          },\n          className: \"btn btn-outline-success\",\n          onClick: submitQ,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            \"width\": \"50%\"\n          },\n          className: \"btn btn-outline-danger\",\n          onClick: () => setClicked(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          style: {\n            \"margin\": \"auto 0\",\n            \"fontSize\": \"15px\",\n            position: \"absolute\"\n          },\n          className: \"btn btn-link\",\n          onClick: () => {\n            user !== false ? setClicked(true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: alert(\"Please Login/Signup to Access this\")\n            }, void 0, false);\n          },\n          children: \"Ask Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          \"height\": \"2px\",\n          \"width\": \"90%\",\n          \"borderWidth\": \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-md\",\n        style: {\n          width: \"100%\"\n        },\n        children: questions.length !== 0 ? questions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              style: {\n                \"width\": \"75%\",\n                \"margin\": \"auto\",\n                \"marginBottom\": \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/question/${item.slug}/${item.id}`,\n                    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [\" \", item.question]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 80\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Asked On : \", Date(item.question_date).substr(0, 16)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 20\n            }, this)\n          }, void 0, false);\n        }) : /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"bGqd6xrlYGTUyy/GkOE2H+0Bf+g=\");\n\n_c = Questions;\nexport default Questions;\n{\n  /* <div className='col-sm-3'>\n                <div className='container-md' style={{\"marginRight\" : \"0px\", \"background\" : \"#f5f0f0\", \"height\" : \"50%\", \"width\" : \"100%\" }}>\n                    \n                        <h3>Hello world</h3>\n                        <h4></h4>\n                    \n                </div>\n            </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js"],"names":["React","Navbar","BaseUrl","user","useEffect","useState","Link","axiosInstance","ReactQuill","Button","EditorToolbar","modules","formats","Error","Questions","questions","setquestions","questionD","setquestionD","question","questiond","setquestiond","clicked","setClicked","fetch","then","data","json","response","submitQ","post","question_data","JSON","parse","atob","localStorage","getItem","split","user_id","res","console","log","handleChange","event","width","textAlign","e","preventDefault","target","value","position","alert","length","map","item","index","slug","id","Date","question_date","substr"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport {BaseUrl} from './BaseUrl'\nimport {user} from './BaseUrl'\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../AuthComp/AxiosInstance'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport ReactQuill from 'react-quill';\nimport Button from '@mui/material/Button';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport Error from './Error';\nconst Questions = () => {\n    const [questions, setquestions]  = React.useState([])\n    const [questionD, setquestionD] = React.useState({\n        question : \"\"\n    });\n    const [questiond, setquestiond] = useState(\"\")\n    \n    const [clicked, setClicked] = useState(false);\n    useEffect(()=>{\n        fetch(`${BaseUrl}questions`)\n        .then((data) => data.json()).then((response)=> setquestions(response))}, [setquestions])\n    \n    \n    \n\n    const submitQ = () => {\n        \n        axiosInstance.post(`create-question`, {\n            question : questionD.question,\n            question_data : questiond,\n            user : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id) \n        }).then((res) => console.log(res));\n        }\nconst handleChange = (event) => {console.log(typeof event); setquestiond(event)}\n\n    return (\n        <>\n        <Navbar/>\n        <div className='container-md' style={{\"marginTop\" : \"3rem\", width : \"75%\"}} >\n            <h1 style={{textAlign:\"center\"}}>Recently asked questions</h1>\n            \n            \n            {clicked === true ? \n                <div className='container' style={{\"marginTop\" : \"3%\"}} >\n                \n                <form onSubmit={(e) => e.preventDefault()}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\" style={{\"fontSize\" : \"12px\"}}>Question</label>\n                    <br/>\n                    <input type=\"text\" value={questionD.question} onChange={(e) => {console.log(e.target.value); setquestionD({question : e.target.value})}} className=\"form-control form-control-lg\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n                    <br/>\n                    <small id=\"emailHelp\" style={{\"fontSize\" : \"10px\"}} className=\"form-text text-muted\">Write your Main Question here & additional info below</small>\n                </div>\n                </form>\n                <>\n                <EditorToolbar toolbarId={'t1'}/>\n                    <ReactQuill\n                        theme=\"snow\"\n                        placeholder={\"Write additional information of here (Can left it blank too)\"}\n                        modules={modules('t1')}\n                        formats={formats}\n                        value={questiond}\n                        onChange={handleChange}\n                        style={{\"width\" : \"100%\", \"height\" : \"40%\"}}\n                        />\n\n                </>\n                <br/>\n                <button type='button' style={{\"width\" : \"50%\"}} className='btn btn-outline-success' onClick={submitQ}>Submit</button>\n                <button type='submit' style={{\"width\" : \"50%\"}} className='btn btn-outline-danger' onClick={() => setClicked(false)}>Cancel</button>\n                \n\n            </div>:\n            <><button type='button' style={{\"margin\" : \"auto 0\", \"fontSize\" : \"15px\", position: \"absolute\"}} className='btn btn-link' onClick={() => \n            {user !== false ? setClicked(true) :<>{alert(\"Please Login/Signup to Access this\")}</>}    \n            }>Ask Question</button></>\n         }\n            <hr style={{\"height\":\"2px\", \"width\":\"90%\", \"borderWidth\":\"0\"}} />\n\n            {/*style={{display: 'inline-block', width: \"calc((100% - 0.1em)/2), \"}}*/}\n            \n            <div className='container-md' style={{width:\"100%\"}}>\n            \n                                \n           {((questions.length) !== 0) ? questions.map((item, index)=> \n           {\n               return(\n                   <> \n                   <div className=\"card\" style={{\"width\" : \"75%\", \"margin\" : \"auto\", \"marginBottom\" : \"10px\"}}>\n                        <div className=\"card-body\">\n                            <div key={index}>\n                                <Link to={`/question/${item.slug}/${item.id}`}><h4> {item.question}</h4></Link>\n                                <br/>\n                                <p>Asked On : {Date(item.question_date).substr(0,16)}</p>\n                            </div>\n                        </div>\n                    </div>\n                    </>\n                    )\n            })\n           : <Error/>}\n           </div>\n           \n           </div>\n           \n         \n           \n           \n\n        \n        \n        </>\n        \n    )\n}\n\nexport default Questions\n{/* <div className='col-sm-3'>\n               <div className='container-md' style={{\"marginRight\" : \"0px\", \"background\" : \"#f5f0f0\", \"height\" : \"50%\", \"width\" : \"100%\" }}>\n                   \n                       <h3>Hello world</h3>\n                       <h4></h4>\n                   \n               </div>\n           </div> */}"]},"metadata":{},"sourceType":"module"}