{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Chatroom/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useTheme } from '@material-ui/core/styles';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const theme = useTheme();\n  const [chatState, setChatstate] = useState({\n    messages: [],\n    value: '',\n    name: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id,\n    room: ''\n  });\n  const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + chatState.room);\n  const [clicked, setclicked] = useState(false);\n\n  const getData = () => {\n    client.onmessage = message => {\n      const datafromserver = JSON.parse(message.data);\n      console.log(datafromserver); // if(datafromserver){\n      //     setChatstate({\n      //         messages : \n      //         [...chatState.messages,\n      //         {\n      //             msg : datafromserver.message,\n      //             name : datafromserver.name\n      //         }\n      //     ]})\n      // }\n    };\n  };\n\n  useEffect(() => {\n    getData();\n  }, [clicked]);\n\n  const onButtonClicked = e => {\n    client.send(JSON.stringify({\n      type: \"message\",\n      message: chatState.messages,\n      name: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1]).user_id)\n    }));\n    chatState.value = '';\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: clicked === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 50\n        },\n        children: [\"Room name : \", chatState.room, /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: 500,\n            maxHeight: 500,\n            overflow: 'auto',\n            boxShadow: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            width: '100%',\n            // Fix IE 11 issue.\n            marginTop: theme.spacing(1)\n          },\n          noValidate: true,\n          onSubmit: onButtonClicked,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-helperText\",\n            label: \"Make a comment\",\n            defaultValue: \"Default Value\",\n            variant: \"outlined\",\n            value: chatState.value,\n            fullWidth: true,\n            onChange: e => {\n              setChatstate({\n                value: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: \"Button\",\n            children: \"Start Chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: theme.spacing(8),\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"CollegeSpace Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: () => setclicked(true),\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Chatroom Name\",\n              name: \"Chatroom Name\",\n              autoFocus: true,\n              value: chatState.room,\n              onChange: e => {\n                setChatstate({\n                  room: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: \"Button\",\n              children: \"Start Chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Chat, \"yJe8Q89UOrmzpZ8CoKIohv7snEo=\", false, function () {\n  return [useTheme];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Chatroom/Chat.js"],"names":["React","useEffect","useState","client","w3cwebsocket","W3CWebSocket","Button","CssBaseline","TextField","Link","Grid","Typography","Container","Card","CardHeader","Paper","Avatar","useTheme","withStyles","Chat","theme","chatState","setChatstate","messages","value","name","JSON","parse","atob","localStorage","getItem","split","user_id","room","clicked","setclicked","getData","onmessage","message","datafromserver","data","console","log","onButtonClicked","e","send","stringify","type","preventDefault","marginTop","height","maxHeight","overflow","boxShadow","width","spacing","target","display","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\n\nconst Chat = () => {\n  const theme = useTheme();\n    \n    const [chatState, setChatstate] = useState({\n        messages : [],\n        value : '',\n        name : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id),\n        room : ''\n    })\n    const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + chatState.room);\n    const [clicked, setclicked] = useState(false)\n    \n\n    const getData = () => {\n        client.onmessage = (message) => {\n            const datafromserver = JSON.parse(message.data);\n            console.log(datafromserver);\n            // if(datafromserver){\n            //     setChatstate({\n            //         messages : \n            //         [...chatState.messages,\n            //         {\n            //             msg : datafromserver.message,\n            //             name : datafromserver.name\n            //         }\n            //     ]})\n            // }\n        }\n    }\n    useEffect(() => {\n        getData();\n    }, [clicked])\n    const onButtonClicked = (e) => {\n        client.send(JSON.stringify({\n            type : \"message\",\n            message : chatState.messages,\n            name : JSON.parse(atob(localStorage.getItem('access_token').split('.')[1]).user_id)\n        }));\n        chatState.value = ''\n        e.preventDefault();\n    }\n    return (\n        <>\n          <Container component=\"main\" maxWidth=\"xs\">\n              {clicked === true ?\n              <div style={{ marginTop : 50}}>\n                  Room name : {chatState.room}\n                  <Paper style={{ height: 500, maxHeight: 500, overflow: 'auto', boxShadow: 'none', }}>\n                  {/* {chatState.messages.map((item, index) => {\n                    <Card style={{boxShadow: 'none'}}>\n                  <CardHeader\n                    avatar={\n                      <Avatar style={{margin: theme.spacing(1), backgroundColor: theme.palette.secondary.main}}>\n                        R\n                  </Avatar>\n                    }\n                    title={chatState.messages.name}\n                    subheader={chatState.messages.msg}\n                  />\n                </Card>\n                  } )} */}\n                  </Paper> \n                  <form style={{width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1)}} noValidate onSubmit={onButtonClicked}>\n              <TextField\n                id=\"outlined-helperText\"\n                label=\"Make a comment\"\n                defaultValue=\"Default Value\"\n                variant=\"outlined\"\n                value={chatState.value}\n                fullWidth\n                onChange={e => {\n                  setChatstate({ value : e.target.value})\n                 }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className='Button'\n              >\n                Start Chatting\n                </Button>\n            </form>  \n              </div> \n              :<>\n              <CssBaseline />\n              <div style={{ marginTop: theme.spacing(8),display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n              <Typography component=\"h1\" variant=\"h5\">\n                CollegeSpace Chatroom\n                </Typography>\n                <form noValidate onSubmit={() => setclicked(true)}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Chatroom Name\"\n                  name=\"Chatroom Name\"\n                  autoFocus\n                  value={chatState.room}\n                  onChange={e => {\n                    setChatstate({ room: e.target.value });\n                    \n                  }}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className=\"Button\"\n                >\n                  Start Chatting\n                  </Button>\n                </form>\n\n              </div>\n              </>}\n          </Container>  \n        </>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}