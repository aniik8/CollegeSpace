{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/inserttableview\n */\nimport { View } from 'ckeditor5/src/ui';\nimport './../../theme/inserttable.css';\n/**\n * The table size view.\n *\n * It renders a 10x10 grid to choose the inserted table size.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nexport default class InsertTableView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n    /**\n     * A collection of table size box items.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this.items = this._createGridCollection();\n    /**\n     * The currently selected number of rows of the new table.\n     *\n     * @observable\n     * @member {Number} #rows\n     */\n\n    this.set('rows', 0);\n    /**\n     * The currently selected number of columns of the new table.\n     *\n     * @observable\n     * @member {Number} #columns\n     */\n\n    this.set('columns', 0);\n    /**\n     * The label text displayed under the boxes.\n     *\n     * @observable\n     * @member {String} #label\n     */\n\n    this.bind('label').to(this, 'columns', this, 'rows', (columns, rows) => `${rows} Ã— ${columns}`);\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck']\n      },\n      children: [{\n        tag: 'div',\n        attributes: {\n          class: ['ck-insert-table-dropdown__grid']\n        },\n        on: {\n          'mouseover@.ck-insert-table-dropdown-grid-box': bind.to('boxover')\n        },\n        children: this.items\n      }, {\n        tag: 'div',\n        attributes: {\n          class: ['ck-insert-table-dropdown__label']\n        },\n        children: [{\n          text: bind.to('label')\n        }]\n      }],\n      on: {\n        mousedown: bind.to(evt => {\n          evt.preventDefault();\n        }),\n        click: bind.to(() => {\n          this.fire('execute');\n        })\n      }\n    });\n    this.on('boxover', (evt, domEvt) => {\n      const {\n        row,\n        column\n      } = domEvt.target.dataset; // As row & column indexes are zero-based transform it to number of selected rows & columns.\n\n      this.set({\n        rows: parseInt(row),\n        columns: parseInt(column)\n      });\n    });\n    this.on('change:columns', () => {\n      this._highlightGridBoxes();\n    });\n    this.on('change:rows', () => {\n      this._highlightGridBoxes();\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  focus() {// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n    // The method should be implemented while working on keyboard support for this view. See #22.\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  focusLast() {// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n    // The method should be implemented while working on keyboard support for this view. See #22.\n  }\n  /**\n   * Highlights grid boxes depending on rows and columns selected.\n   *\n   * @private\n   */\n\n\n  _highlightGridBoxes() {\n    const rows = this.rows;\n    const columns = this.columns;\n    this.items.map((boxView, index) => {\n      // Translate box index to the row & column index.\n      const itemRow = Math.floor(index / 10);\n      const itemColumn = index % 10; // Grid box is highlighted when its row & column index belongs to selected number of rows & columns.\n\n      const isOn = itemRow < rows && itemColumn < columns;\n      boxView.set('isOn', isOn);\n    });\n  }\n  /**\n   * @private\n   * @returns {module:ui/viewcollection~ViewCollection} A view collection containing boxes to be placed in a table grid.\n   */\n\n\n  _createGridCollection() {\n    const boxes = []; // Add grid boxes to table selection view.\n\n    for (let index = 0; index < 100; index++) {\n      const row = Math.floor(index / 10);\n      const column = index % 10;\n      boxes.push(new TableSizeGridBoxView(this.locale, row + 1, column + 1));\n    }\n\n    return this.createCollection(boxes);\n  }\n  /**\n   * Fired when the mouse hover over one of the {@link #items child grid boxes}.\n   *\n   * @event boxover\n   */\n\n\n}\n/**\n * A single grid box view element.\n *\n * This class is used to render the table size selection grid in {@link module:table/ui/inserttableview~InsertTableView}.\n *\n * @private\n */\n\nclass TableSizeGridBoxView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale, row, column) {\n    super(locale);\n    const bind = this.bindTemplate;\n    /**\n     * Controls whether the grid box view is \"on\".\n     *\n     * @observable\n     * @member {Boolean} #isOn\n     */\n\n    this.set('isOn', false);\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck-insert-table-dropdown-grid-box', bind.if('isOn', 'ck-on')],\n        'data-row': row,\n        'data-column': column\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-table/src/ui/inserttableview.js"],"names":["View","InsertTableView","constructor","locale","bind","bindTemplate","items","_createGridCollection","set","to","columns","rows","setTemplate","tag","attributes","class","children","on","text","mousedown","evt","preventDefault","click","fire","domEvt","row","column","target","dataset","parseInt","_highlightGridBoxes","focus","focusLast","map","boxView","index","itemRow","Math","floor","itemColumn","isOn","boxes","push","TableSizeGridBoxView","createCollection","if"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/inserttableview\n */\n\nimport { View } from 'ckeditor5/src/ui';\n\nimport './../../theme/inserttable.css';\n\n/**\n * The table size view.\n *\n * It renders a 10x10 grid to choose the inserted table size.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class InsertTableView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * A collection of table size box items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this._createGridCollection();\n\n\t\t/**\n\t\t * The currently selected number of rows of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #rows\n\t\t */\n\t\tthis.set( 'rows', 0 );\n\n\t\t/**\n\t\t * The currently selected number of columns of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #columns\n\t\t */\n\t\tthis.set( 'columns', 0 );\n\n\t\t/**\n\t\t * The label text displayed under the boxes.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.bind( 'label' )\n\t\t\t.to( this, 'columns', this, 'rows', ( columns, rows ) => `${ rows } Ã— ${ columns }` );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck' ]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__grid' ]\n\t\t\t\t\t},\n\t\t\t\t\ton: {\n\t\t\t\t\t\t'mouseover@.ck-insert-table-dropdown-grid-box': bind.to( 'boxover' )\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.items\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__label' ]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'label' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( () => {\n\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\n\t\tthis.on( 'boxover', ( evt, domEvt ) => {\n\t\t\tconst { row, column } = domEvt.target.dataset;\n\n\t\t\t// As row & column indexes are zero-based transform it to number of selected rows & columns.\n\t\t\tthis.set( {\n\t\t\t\trows: parseInt( row ),\n\t\t\t\tcolumns: parseInt( column )\n\t\t\t} );\n\t\t} );\n\n\t\tthis.on( 'change:columns', () => {\n\t\t\tthis._highlightGridBoxes();\n\t\t} );\n\n\t\tthis.on( 'change:rows', () => {\n\t\t\tthis._highlightGridBoxes();\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocus() {\n\t\t// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n\t\t// The method should be implemented while working on keyboard support for this view. See #22.\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocusLast() {\n\t\t// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n\t\t// The method should be implemented while working on keyboard support for this view. See #22.\n\t}\n\n\t/**\n\t * Highlights grid boxes depending on rows and columns selected.\n\t *\n\t * @private\n\t */\n\t_highlightGridBoxes() {\n\t\tconst rows = this.rows;\n\t\tconst columns = this.columns;\n\n\t\tthis.items.map( ( boxView, index ) => {\n\t\t\t// Translate box index to the row & column index.\n\t\t\tconst itemRow = Math.floor( index / 10 );\n\t\t\tconst itemColumn = index % 10;\n\n\t\t\t// Grid box is highlighted when its row & column index belongs to selected number of rows & columns.\n\t\t\tconst isOn = itemRow < rows && itemColumn < columns;\n\n\t\t\tboxView.set( 'isOn', isOn );\n\t\t} );\n\t}\n\n\t/**\n\t * @private\n\t * @returns {module:ui/viewcollection~ViewCollection} A view collection containing boxes to be placed in a table grid.\n\t */\n\t_createGridCollection() {\n\t\tconst boxes = [];\n\n\t\t// Add grid boxes to table selection view.\n\t\tfor ( let index = 0; index < 100; index++ ) {\n\t\t\tconst row = Math.floor( index / 10 );\n\t\t\tconst column = index % 10;\n\n\t\t\tboxes.push( new TableSizeGridBoxView( this.locale, row + 1, column + 1 ) );\n\t\t}\n\n\t\treturn this.createCollection( boxes );\n\t}\n\n\t/**\n\t * Fired when the mouse hover over one of the {@link #items child grid boxes}.\n\t *\n\t * @event boxover\n\t */\n}\n\n/**\n * A single grid box view element.\n *\n * This class is used to render the table size selection grid in {@link module:table/ui/inserttableview~InsertTableView}.\n *\n * @private\n */\nclass TableSizeGridBoxView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale, row, column ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the grid box view is \"on\".\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOn\n\t\t */\n\t\tthis.set( 'isOn', false );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-insert-table-dropdown-grid-box',\n\t\t\t\t\tbind.if( 'isOn', 'ck-on' )\n\t\t\t\t],\n\t\t\t\t'data-row': row,\n\t\t\t\t'data-column': column\n\t\t\t}\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}