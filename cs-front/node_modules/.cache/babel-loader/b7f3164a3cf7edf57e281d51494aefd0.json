{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module special-characters/ui/charactergridview\n */\nimport { View, ButtonView } from 'ckeditor5/src/ui';\nimport '../../theme/charactergrid.css';\n/**\n * A grid of character tiles. It allows browsing special characters and selecting the character to\n * be inserted into the content.\n *\n * @extends module:ui/view~View\n */\n\nexport default class CharacterGridView extends View {\n  /**\n   * Creates an instance of a character grid containing tiles representing special characters.\n   *\n   * @param {module:utils/locale~Locale} locale The localization services instance.\n   */\n  constructor(locale) {\n    super(locale);\n    /**\n     * A collection of the child tile views. Each tile represents a particular character.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this.tiles = this.createCollection();\n    this.setTemplate({\n      tag: 'div',\n      children: [{\n        tag: 'div',\n        attributes: {\n          class: ['ck', 'ck-character-grid__tiles']\n        },\n        children: this.tiles\n      }],\n      attributes: {\n        class: ['ck', 'ck-character-grid']\n      }\n    });\n    /**\n     * Fired when any of {@link #tiles grid tiles} is clicked.\n     *\n     * @event execute\n     * @param {Object} data Additional information about the event.\n     * @param {String} data.name The name of the tile that caused the event (e.g. \"greek small letter epsilon\").\n     * @param {String} data.character A human-readable character displayed as the label (e.g. \"ε\").\n     */\n\n    /**\n     * Fired when a mouse or another pointing device caused the cursor to move onto any {@link #tiles grid tile}\n     * (similar to the native `mouseover` DOM event).\n     *\n     * @event tileHover\n     * @param {Object} data Additional information about the event.\n     * @param {String} data.name The name of the tile that caused the event (e.g. \"greek small letter epsilon\").\n     * @param {String} data.character A human-readable character displayed as the label (e.g. \"ε\").\n     */\n  }\n  /**\n   * Creates a new tile for the grid.\n   *\n   * @param {String} character A human-readable character displayed as the label (e.g. \"ε\").\n   * @param {String} name The name of the character (e.g. \"greek small letter epsilon\").\n   * @returns {module:ui/button/buttonview~ButtonView}\n   */\n\n\n  createTile(character, name) {\n    const tile = new ButtonView(this.locale);\n    tile.set({\n      label: character,\n      withText: true,\n      class: 'ck-character-grid__tile'\n    }); // Labels are vital for the users to understand what character they're looking at.\n    // For now we're using native title attribute for that, see #5817.\n\n    tile.extendTemplate({\n      attributes: {\n        title: name\n      },\n      on: {\n        mouseover: tile.bindTemplate.to('mouseover')\n      }\n    });\n    tile.on('mouseover', () => {\n      this.fire('tileHover', {\n        name,\n        character\n      });\n    });\n    tile.on('execute', () => {\n      this.fire('execute', {\n        name,\n        character\n      });\n    });\n    return tile;\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-special-characters/src/ui/charactergridview.js"],"names":["View","ButtonView","CharacterGridView","constructor","locale","tiles","createCollection","setTemplate","tag","children","attributes","class","createTile","character","name","tile","set","label","withText","extendTemplate","title","on","mouseover","bindTemplate","to","fire"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAEA,OAAO,+BAAP;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,iBAAN,SAAgCF,IAAhC,CAAqC;AACnD;AACD;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,KAAL,GAAa,KAAKC,gBAAL,EAAb;AAEA,SAAKC,WAAL,CAAkB;AACjBC,MAAAA,GAAG,EAAE,KADY;AAEjBC,MAAAA,QAAQ,EAAE,CACT;AACCD,QAAAA,GAAG,EAAE,KADN;AAECE,QAAAA,UAAU,EAAE;AACXC,UAAAA,KAAK,EAAE,CACN,IADM,EAEN,0BAFM;AADI,SAFb;AAQCF,QAAAA,QAAQ,EAAE,KAAKJ;AARhB,OADS,CAFO;AAcjBK,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,IADM,EAEN,mBAFM;AADI;AAdK,KAAlB;AAsBA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,UAAU,CAAEC,SAAF,EAAaC,IAAb,EAAoB;AAC7B,UAAMC,IAAI,GAAG,IAAId,UAAJ,CAAgB,KAAKG,MAArB,CAAb;AAEAW,IAAAA,IAAI,CAACC,GAAL,CAAU;AACTC,MAAAA,KAAK,EAAEJ,SADE;AAETK,MAAAA,QAAQ,EAAE,IAFD;AAGTP,MAAAA,KAAK,EAAE;AAHE,KAAV,EAH6B,CAS7B;AACA;;AACAI,IAAAA,IAAI,CAACI,cAAL,CAAqB;AACpBT,MAAAA,UAAU,EAAE;AACXU,QAAAA,KAAK,EAAEN;AADI,OADQ;AAIpBO,MAAAA,EAAE,EAAE;AACHC,QAAAA,SAAS,EAAEP,IAAI,CAACQ,YAAL,CAAkBC,EAAlB,CAAsB,WAAtB;AADR;AAJgB,KAArB;AASAT,IAAAA,IAAI,CAACM,EAAL,CAAS,WAAT,EAAsB,MAAM;AAC3B,WAAKI,IAAL,CAAW,WAAX,EAAwB;AAAEX,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAxB;AACA,KAFD;AAIAE,IAAAA,IAAI,CAACM,EAAL,CAAS,SAAT,EAAoB,MAAM;AACzB,WAAKI,IAAL,CAAW,SAAX,EAAsB;AAAEX,QAAAA,IAAF;AAAQD,QAAAA;AAAR,OAAtB;AACA,KAFD;AAIA,WAAOE,IAAP;AACA;;AA/FkD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module special-characters/ui/charactergridview\n */\n\nimport { View, ButtonView } from 'ckeditor5/src/ui';\n\nimport '../../theme/charactergrid.css';\n\n/**\n * A grid of character tiles. It allows browsing special characters and selecting the character to\n * be inserted into the content.\n *\n * @extends module:ui/view~View\n */\nexport default class CharacterGridView extends View {\n\t/**\n\t * Creates an instance of a character grid containing tiles representing special characters.\n\t *\n\t * @param {module:utils/locale~Locale} locale The localization services instance.\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * A collection of the child tile views. Each tile represents a particular character.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.tiles = this.createCollection();\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-character-grid__tiles'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.tiles\n\t\t\t\t}\n\t\t\t],\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-character-grid'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Fired when any of {@link #tiles grid tiles} is clicked.\n\t\t *\n\t\t * @event execute\n\t\t * @param {Object} data Additional information about the event.\n\t\t * @param {String} data.name The name of the tile that caused the event (e.g. \"greek small letter epsilon\").\n\t\t * @param {String} data.character A human-readable character displayed as the label (e.g. \"ε\").\n\t\t */\n\n\t\t/**\n\t\t * Fired when a mouse or another pointing device caused the cursor to move onto any {@link #tiles grid tile}\n\t\t * (similar to the native `mouseover` DOM event).\n\t\t *\n\t\t * @event tileHover\n\t\t * @param {Object} data Additional information about the event.\n\t\t * @param {String} data.name The name of the tile that caused the event (e.g. \"greek small letter epsilon\").\n\t\t * @param {String} data.character A human-readable character displayed as the label (e.g. \"ε\").\n\t\t */\n\t}\n\n\t/**\n\t * Creates a new tile for the grid.\n\t *\n\t * @param {String} character A human-readable character displayed as the label (e.g. \"ε\").\n\t * @param {String} name The name of the character (e.g. \"greek small letter epsilon\").\n\t * @returns {module:ui/button/buttonview~ButtonView}\n\t */\n\tcreateTile( character, name ) {\n\t\tconst tile = new ButtonView( this.locale );\n\n\t\ttile.set( {\n\t\t\tlabel: character,\n\t\t\twithText: true,\n\t\t\tclass: 'ck-character-grid__tile'\n\t\t} );\n\n\t\t// Labels are vital for the users to understand what character they're looking at.\n\t\t// For now we're using native title attribute for that, see #5817.\n\t\ttile.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\ttitle: name\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tmouseover: tile.bindTemplate.to( 'mouseover' )\n\t\t\t}\n\t\t} );\n\n\t\ttile.on( 'mouseover', () => {\n\t\t\tthis.fire( 'tileHover', { name, character } );\n\t\t} );\n\n\t\ttile.on( 'execute', () => {\n\t\t\tthis.fire( 'execute', { name, character } );\n\t\t} );\n\n\t\treturn tile;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}