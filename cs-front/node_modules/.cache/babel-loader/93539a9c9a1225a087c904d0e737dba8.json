{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/UserDet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BaseUrl } from '../BaseUrl';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserDet = () => {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n  const history = useHistory();\n  const [praise, setPraise] = useState(\"Praise 👏\");\n  const [color, setColor] = useState(\"primary\");\n  useEffect(() => {\n    fetch(`${BaseUrl}view-notes${history.location.pathname}`).then(res => res.json()).then(data => {\n      const uid = data.user;\n      return fetch(`${BaseUrl}get_user/${uid}`);\n    }).then(response => response.json()).then(udata => setUser(udata));\n  }, [setUser]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: typeof user === undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          \"width\": \"60%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img-top\",\n          src: \"https://random.imagecdn.app/500/150\",\n          alt: \"Oops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"card-title\",\n            style: {\n              \"textAlign\": \"center\"\n            },\n            children: \"About the author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              \"width\": \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-text\",\n            children: [\"Name : \", user.first_name, \" \", \" \", \" \", user.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"cart-text\",\n            children: [\"Username : \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"cart-text\",\n            children: [\"Email : \", user.email_address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `btn btn-${color}`,\n            style: {\n              \"textColor\": \"white\",\n              \"width\": \"100%\",\n              \"borderRadius\": \"50px\"\n            },\n            onClick: () => {\n              setPraise(\"Praised 😃\");\n              setColor(\"success\");\n            },\n            children: praise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n}; // https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n\n\n_s(UserDet, \"Pj1uuTHT83EV4YMVPvqYhJVGDPQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserDet;\nexport default UserDet; //1. fOooter \n//2. Pdf\n//3. Chat room things, like helping others\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDet\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/UserDet.js"],"names":["React","useEffect","useState","BaseUrl","Avatar","useHistory","UserDet","user","setUser","history","praise","setPraise","color","setColor","fetch","location","pathname","then","res","json","data","uid","response","udata","undefined","first_name","last_name","username","email_address"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { BaseUrl } from '../BaseUrl';\nimport Avatar from '@material-ui/core/Avatar';\nimport {useHistory} from 'react-router-dom'\nconst UserDet = () => {\n    const [user, setUser] = useState(\"\")\n    const history = useHistory()\n    const [praise, setPraise] = useState(\"Praise 👏\")\n    const [color, setColor] = useState(\"primary\")\n    useEffect(() => {\n        fetch(`${BaseUrl}view-notes${history.location.pathname}`)\n        .then((res) => res.json())\n        .then((data)=> {\n            const uid = data.user;\n            return fetch(`${BaseUrl}get_user/${uid}`);\n        }).then((response) => response.json()).then((udata) => setUser(udata))\n}, [setUser])\n\n    return (\n        <>\n        \n        {typeof user === undefined ? <>\n            <h1>No data</h1>\n        </> : <>\n        \n        {/* <h2 style={{\"fontWeight\" : \"lighter\"}}>About the Author</h2>\n        <hr style={{\"width\" : \"80%\", \"margin\" : \"auto\"}}/>\n        \n        {console.log(typeof user.first_name)}\n        <Avatar style={{ height: '70px', width: '70px' }}>{user.first_name}</Avatar>        \n        <h3>Name : {user.first_name} {\" \"} {user.last_name}</h3>\n        <h4>Username : {user.username}</h4> */}\n        <div className=\"card\" style={{\"width\" : \"60%\"}}>\n            <img className=\"card-img-top\" src=\"https://random.imagecdn.app/500/150\" alt=\"Oops\"/>\n             <div className=\"card-body\">\n            <h3 className=\"card-title\" style={{\"textAlign\" : \"center\"}}>About the author</h3>\n            <hr style={{\"width\" : \"100%\"}}/>\n            <h5 className=\"card-text\">Name : {user.first_name} {\" \"} {user.last_name}</h5>\n            <br/>\n            <h5 className='cart-text'>Username : {user.username}</h5>\n            <br/>\n            <h5 className='cart-text'>Email : {user.email_address}</h5>\n            <br/>\n            <button className={`btn btn-${color}`} style={{\"textColor\" : \"white\", \"width\" : \"100%\", \"borderRadius\" : \"50px\"}}\n             onClick={() => {setPraise(\"Praised 😃\"); setColor(\"success\")}}>{praise}</button>\n\n            </div>\n            </div>\n\n        \n        \n        </>}\n        </>\n    )\n}\n// https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\n\nexport default UserDet\n\n//1. fOooter \n//2. Pdf\n//3. Chat room things, like helping others"]},"metadata":{},"sourceType":"module"}