{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaembedediting\n */\nimport { Plugin } from 'ckeditor5/src/core';\nimport { first } from 'ckeditor5/src/utils';\nimport { modelToViewUrlAttributeConverter } from './converters';\nimport MediaEmbedCommand from './mediaembedcommand';\nimport MediaRegistry from './mediaregistry';\nimport { toMediaWidget, createMediaFigureElement } from './utils';\nimport '../theme/mediaembedediting.css';\n/**\n * The media embed editing feature.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class MediaEmbedEditing extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'MediaEmbedEditing';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  constructor(editor) {\n    super(editor);\n    editor.config.define('mediaEmbed', {\n      elementName: 'oembed',\n      providers: [{\n        name: 'dailymotion',\n        url: /^dailymotion\\.com\\/video\\/(\\w+)/,\n        html: match => {\n          const id = match[1];\n          return '<div style=\"position: relative; padding-bottom: 100%; height: 0; \">' + `<iframe src=\"https://www.dailymotion.com/embed/video/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" width=\"480\" height=\"270\" allowfullscreen allow=\"autoplay\">' + '</iframe>' + '</div>';\n        }\n      }, {\n        name: 'spotify',\n        url: [/^open\\.spotify\\.com\\/(artist\\/\\w+)/, /^open\\.spotify\\.com\\/(album\\/\\w+)/, /^open\\.spotify\\.com\\/(track\\/\\w+)/],\n        html: match => {\n          const id = match[1];\n          return '<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 126%;\">' + `<iframe src=\"https://open.spotify.com/embed/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">' + '</iframe>' + '</div>';\n        }\n      }, {\n        name: 'youtube',\n        url: [/^(?:m\\.)?youtube\\.com\\/watch\\?v=([\\w-]+)/, /^(?:m\\.)?youtube\\.com\\/v\\/([\\w-]+)/, /^youtube\\.com\\/embed\\/([\\w-]+)/, /^youtu\\.be\\/([\\w-]+)/],\n        html: match => {\n          const id = match[1];\n          return '<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' + `<iframe src=\"https://www.youtube.com/embed/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>' + '</iframe>' + '</div>';\n        }\n      }, {\n        name: 'vimeo',\n        url: [/^vimeo\\.com\\/(\\d+)/, /^vimeo\\.com\\/[^/]+\\/[^/]+\\/video\\/(\\d+)/, /^vimeo\\.com\\/album\\/[^/]+\\/video\\/(\\d+)/, /^vimeo\\.com\\/channels\\/[^/]+\\/(\\d+)/, /^vimeo\\.com\\/groups\\/[^/]+\\/videos\\/(\\d+)/, /^vimeo\\.com\\/ondemand\\/[^/]+\\/(\\d+)/, /^player\\.vimeo\\.com\\/video\\/(\\d+)/],\n        html: match => {\n          const id = match[1];\n          return '<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' + `<iframe src=\"https://player.vimeo.com/video/${id}\" ` + 'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' + 'frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>' + '</iframe>' + '</div>';\n        }\n      }, {\n        name: 'instagram',\n        url: /^instagram\\.com\\/p\\/(\\w+)/\n      }, {\n        name: 'twitter',\n        url: /^twitter\\.com/\n      }, {\n        name: 'googleMaps',\n        url: [/^google\\.com\\/maps/, /^goo\\.gl\\/maps/, /^maps\\.google\\.com/, /^maps\\.app\\.goo\\.gl/]\n      }, {\n        name: 'flickr',\n        url: /^flickr\\.com/\n      }, {\n        name: 'facebook',\n        url: /^facebook\\.com/\n      }]\n    });\n    /**\n     * The media registry managing the media providers in the editor.\n     *\n     * @member {module:media-embed/mediaregistry~MediaRegistry} #registry\n     */\n\n    this.registry = new MediaRegistry(editor.locale, editor.config.get('mediaEmbed'));\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const schema = editor.model.schema;\n    const t = editor.t;\n    const conversion = editor.conversion;\n    const renderMediaPreview = editor.config.get('mediaEmbed.previewsInData');\n    const elementName = editor.config.get('mediaEmbed.elementName');\n    const registry = this.registry;\n    editor.commands.add('mediaEmbed', new MediaEmbedCommand(editor)); // Configure the schema.\n\n    schema.register('media', {\n      isObject: true,\n      isBlock: true,\n      allowWhere: '$block',\n      allowAttributes: ['url']\n    }); // Model -> Data\n\n    conversion.for('dataDowncast').elementToElement({\n      model: 'media',\n      view: (modelElement, _ref) => {\n        let {\n          writer\n        } = _ref;\n        const url = modelElement.getAttribute('url');\n        return createMediaFigureElement(writer, registry, url, {\n          elementName,\n          renderMediaPreview: url && renderMediaPreview\n        });\n      }\n    }); // Model -> Data (url -> data-oembed-url)\n\n    conversion.for('dataDowncast').add(modelToViewUrlAttributeConverter(registry, {\n      elementName,\n      renderMediaPreview\n    })); // Model -> View (element)\n\n    conversion.for('editingDowncast').elementToElement({\n      model: 'media',\n      view: (modelElement, _ref2) => {\n        let {\n          writer\n        } = _ref2;\n        const url = modelElement.getAttribute('url');\n        const figure = createMediaFigureElement(writer, registry, url, {\n          elementName,\n          renderForEditingView: true\n        });\n        return toMediaWidget(figure, writer, t('media widget'));\n      }\n    }); // Model -> View (url -> data-oembed-url)\n\n    conversion.for('editingDowncast').add(modelToViewUrlAttributeConverter(registry, {\n      elementName,\n      renderForEditingView: true\n    })); // View -> Model (data-oembed-url -> url)\n\n    conversion.for('upcast') // Upcast semantic media.\n    .elementToElement({\n      view: element => ['oembed', elementName].includes(element.name) && element.getAttribute('url') ? {\n        name: true\n      } : null,\n      model: (viewMedia, _ref3) => {\n        let {\n          writer\n        } = _ref3;\n        const url = viewMedia.getAttribute('url');\n\n        if (registry.hasMedia(url)) {\n          return writer.createElement('media', {\n            url\n          });\n        }\n      }\n    }) // Upcast non-semantic media.\n    .elementToElement({\n      view: {\n        name: 'div',\n        attributes: {\n          'data-oembed-url': true\n        }\n      },\n      model: (viewMedia, _ref4) => {\n        let {\n          writer\n        } = _ref4;\n        const url = viewMedia.getAttribute('data-oembed-url');\n\n        if (registry.hasMedia(url)) {\n          return writer.createElement('media', {\n            url\n          });\n        }\n      }\n    }) // Consume `<figure class=\"media\">` elements, that were left after upcast.\n    .add(dispatcher => {\n      dispatcher.on('element:figure', converter);\n\n      function converter(evt, data, conversionApi) {\n        if (!conversionApi.consumable.consume(data.viewItem, {\n          name: true,\n          classes: 'media'\n        })) {\n          return;\n        }\n\n        const {\n          modelRange,\n          modelCursor\n        } = conversionApi.convertChildren(data.viewItem, data.modelCursor);\n        data.modelRange = modelRange;\n        data.modelCursor = modelCursor;\n        const modelElement = first(modelRange.getItems());\n\n        if (!modelElement) {\n          // Revert consumed figure so other features can convert it.\n          conversionApi.consumable.revert(data.viewItem, {\n            name: true,\n            classes: 'media'\n          });\n        }\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-media-embed/src/mediaembedediting.js"],"names":["Plugin","first","modelToViewUrlAttributeConverter","MediaEmbedCommand","MediaRegistry","toMediaWidget","createMediaFigureElement","MediaEmbedEditing","pluginName","constructor","editor","config","define","elementName","providers","name","url","html","match","id","registry","locale","get","init","schema","model","t","conversion","renderMediaPreview","commands","add","register","isObject","isBlock","allowWhere","allowAttributes","for","elementToElement","view","modelElement","writer","getAttribute","figure","renderForEditingView","element","includes","viewMedia","hasMedia","createElement","attributes","dispatcher","on","converter","evt","data","conversionApi","consumable","consume","viewItem","classes","modelRange","modelCursor","convertChildren","getItems","revert"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module media-embed/mediaembedediting\n */\n\nimport { Plugin } from 'ckeditor5/src/core';\nimport { first } from 'ckeditor5/src/utils';\n\nimport { modelToViewUrlAttributeConverter } from './converters';\nimport MediaEmbedCommand from './mediaembedcommand';\nimport MediaRegistry from './mediaregistry';\nimport { toMediaWidget, createMediaFigureElement } from './utils';\n\nimport '../theme/mediaembedediting.css';\n\n/**\n * The media embed editing feature.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class MediaEmbedEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'MediaEmbedEditing';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'mediaEmbed', {\n\t\t\telementName: 'oembed',\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tname: 'dailymotion',\n\t\t\t\t\turl: /^dailymotion\\.com\\/video\\/(\\w+)/,\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; \">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://www.dailymotion.com/embed/video/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" width=\"480\" height=\"270\" allowfullscreen allow=\"autoplay\">' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'spotify',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(artist\\/\\w+)/,\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(album\\/\\w+)/,\n\t\t\t\t\t\t/^open\\.spotify\\.com\\/(track\\/\\w+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 126%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://open.spotify.com/embed/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\">' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'youtube',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/watch\\?v=([\\w-]+)/,\n\t\t\t\t\t\t/^(?:m\\.)?youtube\\.com\\/v\\/([\\w-]+)/,\n\t\t\t\t\t\t/^youtube\\.com\\/embed\\/([\\w-]+)/,\n\t\t\t\t\t\t/^youtu\\.be\\/([\\w-]+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://www.youtube.com/embed/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen>' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'vimeo',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^vimeo\\.com\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/[^/]+\\/[^/]+\\/video\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/album\\/[^/]+\\/video\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/channels\\/[^/]+\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/groups\\/[^/]+\\/videos\\/(\\d+)/,\n\t\t\t\t\t\t/^vimeo\\.com\\/ondemand\\/[^/]+\\/(\\d+)/,\n\t\t\t\t\t\t/^player\\.vimeo\\.com\\/video\\/(\\d+)/\n\t\t\t\t\t],\n\t\t\t\t\thtml: match => {\n\t\t\t\t\t\tconst id = match[ 1 ];\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'<div style=\"position: relative; padding-bottom: 100%; height: 0; padding-bottom: 56.2493%;\">' +\n\t\t\t\t\t\t\t\t`<iframe src=\"https://player.vimeo.com/video/${ id }\" ` +\n\t\t\t\t\t\t\t\t\t'style=\"position: absolute; width: 100%; height: 100%; top: 0; left: 0;\" ' +\n\t\t\t\t\t\t\t\t\t'frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen>' +\n\t\t\t\t\t\t\t\t'</iframe>' +\n\t\t\t\t\t\t\t'</div>'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t{\n\t\t\t\t\tname: 'instagram',\n\t\t\t\t\turl: /^instagram\\.com\\/p\\/(\\w+)/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'twitter',\n\t\t\t\t\turl: /^twitter\\.com/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'googleMaps',\n\t\t\t\t\turl: [\n\t\t\t\t\t\t/^google\\.com\\/maps/,\n\t\t\t\t\t\t/^goo\\.gl\\/maps/,\n\t\t\t\t\t\t/^maps\\.google\\.com/,\n\t\t\t\t\t\t/^maps\\.app\\.goo\\.gl/\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'flickr',\n\t\t\t\t\turl: /^flickr\\.com/\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'facebook',\n\t\t\t\t\turl: /^facebook\\.com/\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\n\t\t/**\n\t\t * The media registry managing the media providers in the editor.\n\t\t *\n\t\t * @member {module:media-embed/mediaregistry~MediaRegistry} #registry\n\t\t */\n\t\tthis.registry = new MediaRegistry( editor.locale, editor.config.get( 'mediaEmbed' ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst schema = editor.model.schema;\n\t\tconst t = editor.t;\n\t\tconst conversion = editor.conversion;\n\t\tconst renderMediaPreview = editor.config.get( 'mediaEmbed.previewsInData' );\n\t\tconst elementName = editor.config.get( 'mediaEmbed.elementName' );\n\n\t\tconst registry = this.registry;\n\n\t\teditor.commands.add( 'mediaEmbed', new MediaEmbedCommand( editor ) );\n\n\t\t// Configure the schema.\n\t\tschema.register( 'media', {\n\t\t\tisObject: true,\n\t\t\tisBlock: true,\n\t\t\tallowWhere: '$block',\n\t\t\tallowAttributes: [ 'url' ]\n\t\t} );\n\n\t\t// Model -> Data\n\t\tconversion.for( 'dataDowncast' ).elementToElement( {\n\t\t\tmodel: 'media',\n\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\tconst url = modelElement.getAttribute( 'url' );\n\n\t\t\t\treturn createMediaFigureElement( writer, registry, url, {\n\t\t\t\t\telementName,\n\t\t\t\t\trenderMediaPreview: url && renderMediaPreview\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> Data (url -> data-oembed-url)\n\t\tconversion.for( 'dataDowncast' ).add(\n\t\t\tmodelToViewUrlAttributeConverter( registry, {\n\t\t\t\telementName,\n\t\t\t\trenderMediaPreview\n\t\t\t} ) );\n\n\t\t// Model -> View (element)\n\t\tconversion.for( 'editingDowncast' ).elementToElement( {\n\t\t\tmodel: 'media',\n\t\t\tview: ( modelElement, { writer } ) => {\n\t\t\t\tconst url = modelElement.getAttribute( 'url' );\n\t\t\t\tconst figure = createMediaFigureElement( writer, registry, url, {\n\t\t\t\t\telementName,\n\t\t\t\t\trenderForEditingView: true\n\t\t\t\t} );\n\n\t\t\t\treturn toMediaWidget( figure, writer, t( 'media widget' ) );\n\t\t\t}\n\t\t} );\n\n\t\t// Model -> View (url -> data-oembed-url)\n\t\tconversion.for( 'editingDowncast' ).add(\n\t\t\tmodelToViewUrlAttributeConverter( registry, {\n\t\t\t\telementName,\n\t\t\t\trenderForEditingView: true\n\t\t\t} ) );\n\n\t\t// View -> Model (data-oembed-url -> url)\n\t\tconversion.for( 'upcast' )\n\t\t\t// Upcast semantic media.\n\t\t\t.elementToElement( {\n\t\t\t\tview: element => [ 'oembed', elementName ].includes( element.name ) && element.getAttribute( 'url' ) ?\n\t\t\t\t\t{ name: true } :\n\t\t\t\t\tnull,\n\t\t\t\tmodel: ( viewMedia, { writer } ) => {\n\t\t\t\t\tconst url = viewMedia.getAttribute( 'url' );\n\n\t\t\t\t\tif ( registry.hasMedia( url ) ) {\n\t\t\t\t\t\treturn writer.createElement( 'media', { url } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t\t// Upcast non-semantic media.\n\t\t\t.elementToElement( {\n\t\t\t\tview: {\n\t\t\t\t\tname: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\t'data-oembed-url': true\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmodel: ( viewMedia, { writer } ) => {\n\t\t\t\t\tconst url = viewMedia.getAttribute( 'data-oembed-url' );\n\n\t\t\t\t\tif ( registry.hasMedia( url ) ) {\n\t\t\t\t\t\treturn writer.createElement( 'media', { url } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t\t// Consume `<figure class=\"media\">` elements, that were left after upcast.\n\t\t\t.add( dispatcher => {\n\t\t\t\tdispatcher.on( 'element:figure', converter );\n\n\t\t\t\tfunction converter( evt, data, conversionApi ) {\n\t\t\t\t\tif ( !conversionApi.consumable.consume( data.viewItem, { name: true, classes: 'media' } ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst { modelRange, modelCursor } = conversionApi.convertChildren( data.viewItem, data.modelCursor );\n\n\t\t\t\t\tdata.modelRange = modelRange;\n\t\t\t\t\tdata.modelCursor = modelCursor;\n\n\t\t\t\t\tconst modelElement = first( modelRange.getItems() );\n\n\t\t\t\t\tif ( !modelElement ) {\n\t\t\t\t\t\t// Revert consumed figure so other features can convert it.\n\t\t\t\t\t\tconversionApi.consumable.revert( data.viewItem, { name: true, classes: 'media' } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}