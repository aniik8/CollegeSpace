{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewUNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { BaseUrl } from '../BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewUNotes = () => {\n  _s();\n\n  const [notes, setusernotes] = useState([]);\n  const u_id = JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id;\n\n  const getUserData = async () => {\n    const data = await fetch(`${BaseUrl}view-user-notes/${u_id}`);\n    const note = await data.json();\n    console.log(note);\n    setusernotes(note);\n  };\n\n  {\n    console.log(notes.length);\n  }\n  useEffect(() => {\n    getUserData();\n  }, [setusernotes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: notes.length === 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Oops. No notes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"View particular notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), notes.map((item, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: item.notes_title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n            toolbarId: 't2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"bubble\",\n            readOnly: true,\n            modules: modules('t2'),\n            formats: formats,\n            value: item.notes_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this);\n      })]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewUNotes, \"imPzlN8w7+3uCaz4wYPkvMOF+i8=\");\n\n_c = ViewUNotes;\nexport default ViewUNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewUNotes\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewUNotes.js"],"names":["React","useState","useEffect","BaseUrl","ReactQuill","EditorToolbar","modules","formats","ViewUNotes","notes","setusernotes","u_id","JSON","parse","atob","localStorage","getItem","split","user_id","getUserData","data","fetch","note","json","console","log","length","map","item","index","notes_title","notes_content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,qBAAhD;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,KAAD,EAAQC,YAAR,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMU,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAD,CAAf,EAAqEC,OAAlF;;AACA,QAAMC,WAAW,GAAG,YAAW;AAC3B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAElB,OAAQ,mBAAkBQ,IAAK,EAAnC,CAAxB;AACA,UAAMW,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAZ,IAAAA,YAAY,CAACY,IAAD,CAAZ;AACH,GALD;;AAMA;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAK,CAACiB,MAAlB;AAA0B;AAC3BxB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACT,YAAD,CAFM,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACCD,KAAK,CAACiB,MAAN,KAAiB,CAAjB,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,gBACG;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECjB,KAAK,CAACkB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB;AAAA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA,sBAAiBD,IAAI,CAACE;AAAtB,aAASD,KAAT;AAAA;AAAA;AAAA;AAAA,kBAFA,eAGA,QAAC,aAAD;AAAe,YAAA,SAAS,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAHA,eAII,QAAC,UAAD;AACI,YAAA,KAAK,EAAC,QADV;AAEI,YAAA,QAAQ,EAAE,IAFd;AAGI,YAAA,OAAO,EAAEvB,OAAO,CAAC,IAAD,CAHpB;AAII,YAAA,OAAO,EAAEC,OAJb;AAKI,YAAA,KAAK,EAAEqB,IAAI,CAACG;AALhB;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAaH,OAdA,CAFD;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CAvCD;;GAAMvB,U;;KAAAA,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useEffect } from 'react'\nimport { BaseUrl } from '../BaseUrl'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nconst ViewUNotes = () => {\n\n    const [notes, setusernotes] = useState([]);\n    const u_id = JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n    const getUserData = async() => {\n        const data = await fetch(`${BaseUrl}view-user-notes/${u_id}`)\n        const note = await data.json()\n        console.log(note)\n        setusernotes(note)\n    }\n    {console.log(notes.length)}\n    useEffect(() => {\n        getUserData();    \n    }, [setusernotes])\n    return (\n        <div className='container'>\n        {notes.length === 0 ? <h4>Oops. No notes here</h4> : \n            <>\n            <h2>View particular notes</h2>\n            {notes.map((item, index) => {\n                <div className='container'>\n                <h4>Hello</h4>\n                <h4 key={index}>{item.notes_title}</h4>\n                <EditorToolbar toolbarId={'t2'}/>\n                    <ReactQuill\n                        theme=\"bubble\"\n                        readOnly={true}\n                        modules={modules('t2')}\n                        formats={formats}\n                        value={item.notes_content}\n                        \n                        />\n                </div>\n            })}\n            </>    \n            }\n\n        </div>\n    )\n}\n\nexport default ViewUNotes\n"]},"metadata":{},"sourceType":"module"}