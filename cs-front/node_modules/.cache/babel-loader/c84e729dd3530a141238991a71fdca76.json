{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport { BaseUrl } from './BaseUrl';\nimport { user } from './BaseUrl';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-quill/dist/quill.snow.css';\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport { Editor, EditorState } from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [questions, setquestions] = React.useState([]);\n  const [q, sq] = React.useState(\"\");\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    fetch(`${BaseUrl}questions`).then(data => data.json()).then(response => setquestions(response));\n  }, [setquestions]);\n\n  const submitQ = () => {\n    axiosInstance.post(`create-question`, {\n      question: q,\n      user: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n    }).then(res => console.log(res));\n  };\n\n  const [editorState, setEditorState] = useState(() => EditorState.createEmpty());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        \"width\": \"50%\",\n        \"height\": \"50%\",\n        \"margin\": \"auto\",\n        \"position\": \"absolute\",\n        \"top\": '0',\n        \"left\": '0',\n        \"bottom\": '0',\n        \"right\": '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Recently asked questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success\",\n        onClick: () => {\n          user !== false ? setClicked(true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: alert(\"Please Login/Signup to Access this\")\n          }, void 0, false);\n        } //Finally got a html to draft. will send the slug using the way of veryacademy and then\n        // Q in data base is stored as Html but while displaying we can have it in our\n        //Original form :-)\n        ,\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), clicked === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"green\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            editorState: editorState,\n            onChange: setEditorState,\n            toolbar: {\n              inline: {\n                inDropdown: true\n              },\n              list: {\n                inDropdown: true\n              },\n              textAlign: {\n                inDropdown: true\n              },\n              link: {\n                inDropdown: true\n              },\n              history: {\n                inDropdown: true\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-success\",\n          onClick: submitQ,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          onClick: () => setClicked(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          \"height\": \"2px\",\n          \"width\": \"100%\",\n          \"borderWidth\": \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-md\",\n        style: {\n          width: \"50$\"\n        },\n        children: questions.length !== 0 ? questions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/question/${item.slug}/${item.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: item.question\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 76\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.question_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data not available right now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"nnUZrzSklSPsbnigoixS9IeYYt8=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js"],"names":["React","Navbar","BaseUrl","user","useEffect","useState","Link","axiosInstance","Editor","EditorState","Questions","questions","setquestions","q","sq","clicked","setClicked","fetch","then","data","json","response","submitQ","post","question","JSON","parse","atob","localStorage","getItem","split","user_id","res","console","log","editorState","setEditorState","createEmpty","textAlign","alert","backgroundColor","inline","inDropdown","list","link","history","width","length","map","item","index","slug","id","__html","question_date"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport {BaseUrl} from './BaseUrl'\nimport {user} from './BaseUrl'\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'react-quill/dist/quill.snow.css';\nimport axiosInstance from '../AuthComp/AxiosInstance'\nimport {Editor, EditorState} from 'draft-js';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nconst Questions = () => {\n    const [questions, setquestions]  = React.useState([])\n    const [q, sq] = React.useState(\"\")\n    const [clicked, setClicked] = useState(false);\n    useEffect(()=>{\n        fetch(`${BaseUrl}questions`)\n        .then((data) => data.json()).then((response)=> setquestions(response))}, [setquestions])\n    \n    \n \n    const submitQ = () => {\n        \n        axiosInstance.post(`create-question`, {\n            question : q,\n            user : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id) \n        }).then((res) => console.log(res));\n        }\n        const [editorState, setEditorState] = useState(\n            () => EditorState.createEmpty(),\n          );\n    return (\n        <>\n        <Navbar/>\n        <div className='container' style={{\"width\": \"50%\",\n            \"height\": \"50%\",\n            \"margin\": \"auto\",\n            \"position\": \"absolute\",\n            \"top\": '0',\"left\": '0', \"bottom\": '0', \"right\": '0'}}>\n            <h1 style={{textAlign:\"center\"}}>Recently asked questions</h1>\n            \n            <button type='button' className='btn btn-outline-success' onClick={() => \n            {user !== false ? setClicked(true) :<>{alert(\"Please Login/Signup to Access this\")}</>}    \n                //Finally got a html to draft. will send the slug using the way of veryacademy and then\n                // Q in data base is stored as Html but while displaying we can have it in our\n                //Original form :-)\n                \n            }>Ask Question</button>\n            {clicked === true ? \n                <>\n                {/* <EditorToolbar toolbarId={'t1'}/>\n                    <ReactQuill theme=\"snow\"\n                        modules={modules('t1')}\n                        formats={formats}\n                        defaultValue={\"\"}\n                        value={q}\n                        \n                        onChange={sq}\n                        /> */}\n                        <div style={{backgroundColor:\"green\"}}>\n                        <Editor\n                         editorState={editorState}\n                         onChange={setEditorState}    \n                        toolbar={{\n                        inline: { inDropdown: true },\n                        list: { inDropdown: true },\n                        textAlign: { inDropdown: true },\n                        link: { inDropdown: true },\n                        history: { inDropdown: true }}}/>\n                       </div>\n                    <button type='button' className='btn btn-outline-success' onClick={submitQ}>Submit</button>\n                    <button type='submit' className='btn btn-outline-danger' onClick={() => setClicked(false)}>Cancel</button>\n                \n\n            </>:\n            <></>\n         }\n            <hr style={{\"height\":\"2px\", \"width\":\"100%\", \"borderWidth\":\"0\"}} />\n\n            {/*style={{display: 'inline-block', width: \"calc((100% - 0.1em)/2), \"}}*/}\n            <div className='container-md' style={{width:\"50$\"}}>\n           {((questions.length) !== 0) ? questions.map((item, index)=> \n           {\n               return(\n                   <> \n                    <div key={index}>\n                        <Link to={`/question/${item.slug}/${item.id}`}><h3><div dangerouslySetInnerHTML={{__html : item.question}}></div></h3></Link>\n                        \n                        <p>{item.question_date}</p>\n                    </div>\n                    </>\n                    )\n            })\n           : <h4>Data not available right now</h4>}\n           </div>\n           \n           \n\n        \n        </div>\n        </>\n        \n    )\n}\n\nexport default Questions\n"]},"metadata":{},"sourceType":"module"}