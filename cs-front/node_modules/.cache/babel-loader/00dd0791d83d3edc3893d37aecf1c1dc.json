{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateQ = props => {\n  _s();\n\n  const history = useHistory();\n  const [ques, setques] = useState(props.q);\n  const [ques_dta, setques_dta] = useState(props.qd);\n  console.log(props.qd);\n\n  const sendData = () => {\n    axiosInstance.post(`update-question/${history.location.pathname}`, {\n      question: ques,\n      question_data: ques_dta\n    }).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.ques !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ques,\n            onChange: e => {\n              setques(e.target.value);\n            },\n            className: \"form-control\",\n            id: \"exampleInputEmail1\",\n            \"aria-describedby\": \"emailHelp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n        toolbarId: 't1'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n        theme: \"snow\",\n        value: ques_dta,\n        modules: modules('t1'),\n        formats: formats,\n        onChange: event => setques_dta(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn success\",\n        onClick: sendData,\n        children: \"Update?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(UpdateQ, \"uzAF13713i+XFamaPWUP3rK4xRs=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateQ;\nexport default UpdateQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateQ\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js"],"names":["React","useState","ReactQuill","EditorToolbar","modules","formats","useHistory","axiosInstance","UpdateQ","props","history","ques","setques","q","ques_dta","setques_dta","qd","console","log","sendData","post","location","pathname","question","question_data","then","res","undefined","e","preventDefault","target","value","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,kBAAhD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACQ,KAAK,CAACI,CAAP,CAAhC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACQ,KAAK,CAACO,EAAP,CAAxC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACO,EAAlB;;AACA,QAAMG,QAAQ,GAAG,MAAM;AACnBZ,IAAAA,aAAa,CAACa,IAAd,CAAoB,mBAAkBV,OAAO,CAACW,QAAR,CAAiBC,QAAS,EAAhE,EAAmE;AAC/DC,MAAAA,QAAQ,EAAGZ,IADoD;AAE/Da,MAAAA,aAAa,EAAGV;AAF+C,KAAnE,EAGGW,IAHH,CAGSC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CAHjB;AAIH,GALD;;AAMA,sBACA;AAAA,cACEjB,KAAK,CAACE,IAAN,KAAegB,SAAf,gBACF;AAAA,8BACA;AAAM,QAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAvB;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACA;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAElB,IAA1B;AAAgC,YAAA,QAAQ,EAAGiB,CAAD,IAAO;AAAChB,cAAAA,OAAO,CAACgB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AAAwB,aAA1E;AAA4E,YAAA,SAAS,EAAC,cAAtF;AAAqG,YAAA,EAAE,EAAC,oBAAxG;AAA6H,gCAAiB;AAA9I;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA;AAAA;AAAA;AAAA;AAAA,kBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAOA,QAAC,aAAD;AAAe,QAAA,SAAS,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,cAPA,eAQA,QAAC,UAAD;AACA,QAAA,KAAK,EAAC,MADN;AAEA,QAAA,KAAK,EAAEjB,QAFP;AAGA,QAAA,OAAO,EAAEV,OAAO,CAAC,IAAD,CAHhB;AAIA,QAAA,OAAO,EAAEC,OAJT;AAKA,QAAA,QAAQ,EAAG2B,KAAD,IAAWjB,WAAW,CAACiB,KAAD;AALhC;AAAA;AAAA;AAAA;AAAA,cARA,eAeA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAEb,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfA;AAAA,oBADE,gBAmBA;AApBF,mBADA;AAwBH,CApCD;;GAAMX,O;UAEcF,U;;;KAFdE,O;AAsCN,eAAeA,OAAf","sourcesContent":["import React, {useState } from 'react'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport {useHistory} from 'react-router-dom'\nimport axiosInstance from '../AuthComp/AxiosInstance';\n\nconst UpdateQ = (props) => {\n    \n    const history = useHistory();\n    const [ques, setques] = useState(props.q)\n    const [ques_dta, setques_dta] = useState(props.qd)\n    console.log(props.qd);\n    const sendData = () => {\n        axiosInstance.post(`update-question/${history.location.pathname}`, {\n            question : ques,\n            question_data : ques_dta \n        }).then((res) => console.log(res))\n    }\n    return(\n    <>\n    { props.ques !== undefined ? \n    <>\n    <form onSubmit={(e) => e.preventDefault()}>\n        <div className=\"form-group\">\n        <input type=\"text\" value={ques} onChange={(e) => {setques(e.target.value)}} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n        <br/>\n        </div>\n        </form>    \n    <EditorToolbar toolbarId={'t1'}/>\n    <ReactQuill\n    theme=\"snow\"\n    value={ques_dta}\n    modules={modules('t1')}\n    formats={formats}\n    onChange={(event) => setques_dta(event)}\n    />\n    <button type='submit' className='btn btn success' onClick={sendData} >Update?</button>\n    </>\n        \n    : <></>}\n    </>\n    )\n}\n\nexport default UpdateQ\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}