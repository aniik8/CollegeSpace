{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/indentcodeblockcommand\n */\nimport { Command } from 'ckeditor5/src/core';\nimport { getIndentOutdentPositions, isModelSelectionInCodeBlock } from './utils';\n/**\n * The code block indentation increase command plugin.\n *\n * @extends module:core/command~Command\n */\n\nexport default class IndentCodeBlockCommand extends Command {\n  constructor(editor) {\n    super(editor);\n    /**\n     * A sequence of characters added to the line when the command is executed.\n     *\n     * @readonly\n     * @private\n     * @member {String}\n     */\n\n    this._indentSequence = editor.config.get('codeBlock.indentSequence');\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  refresh() {\n    this.isEnabled = this._checkEnabled();\n  }\n  /**\n   * Executes the command. When the command {@link #isEnabled is enabled}, the indentation of the\n   * code lines in the selection will be increased.\n   *\n   * @fires execute\n   */\n\n\n  execute() {\n    const editor = this.editor;\n    const model = editor.model;\n    model.change(writer => {\n      const positions = getIndentOutdentPositions(model); // Indent all positions, for instance assuming the indent sequence is 4x space (\"    \"):\n      //\n      //\t\t<codeBlock>^foo</codeBlock>        ->       <codeBlock>    foo</codeBlock>\n      //\n      //\t\t<codeBlock>foo^bar</codeBlock>     ->       <codeBlock>foo    bar</codeBlock>\n      //\n      // Also, when there is more than one position:\n      //\n      //\t\t<codeBlock>\n      //\t\t\t^foobar\n      //\t\t\t<softBreak></softBreak>\n      //\t\t\t^bazqux\n      //\t\t</codeBlock>\n      //\n      //\t\t->\n      //\n      //\t\t<codeBlock>\n      //\t\t\t    foobar\n      //\t\t\t<softBreak></softBreak>\n      //\t\t\t    bazqux\n      //\t\t</codeBlock>\n      //\n\n      for (const position of positions) {\n        writer.insertText(this._indentSequence, position);\n      }\n    });\n  }\n  /**\n   * Checks whether the command can be enabled in the current context.\n   *\n   * @private\n   * @returns {Boolean} Whether the command should be enabled.\n   */\n\n\n  _checkEnabled() {\n    if (!this._indentSequence) {\n      return false;\n    } // Indent (forward) command is always enabled when there's any code block in the selection\n    // because you can always indent code lines.\n\n\n    return isModelSelectionInCodeBlock(this.editor.model.document.selection);\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-code-block/src/indentcodeblockcommand.js"],"names":["Command","getIndentOutdentPositions","isModelSelectionInCodeBlock","IndentCodeBlockCommand","constructor","editor","_indentSequence","config","get","refresh","isEnabled","_checkEnabled","execute","model","change","writer","positions","position","insertText","document","selection"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,oBAAxB;AAEA,SACCC,yBADD,EAECC,2BAFD,QAGO,SAHP;AAKA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,sBAAN,SAAqCH,OAArC,CAA6C;AAC3DI,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,SAAKC,eAAL,GAAuBD,MAAM,CAACE,MAAP,CAAcC,GAAd,CAAmB,0BAAnB,CAAvB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,SAAKC,SAAL,GAAiB,KAAKC,aAAL,EAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,UAAMP,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMQ,KAAK,GAAGR,MAAM,CAACQ,KAArB;AAEAA,IAAAA,KAAK,CAACC,MAAN,CAAcC,MAAM,IAAI;AACvB,YAAMC,SAAS,GAAGf,yBAAyB,CAAEY,KAAF,CAA3C,CADuB,CAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAAM,MAAMI,QAAZ,IAAwBD,SAAxB,EAAoC;AACnCD,QAAAA,MAAM,CAACG,UAAP,CAAmB,KAAKZ,eAAxB,EAAyCW,QAAzC;AACA;AACD,KA5BD;AA6BA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCN,EAAAA,aAAa,GAAG;AACf,QAAK,CAAC,KAAKL,eAAX,EAA6B;AAC5B,aAAO,KAAP;AACA,KAHc,CAKf;AACA;;;AACA,WAAOJ,2BAA2B,CAAE,KAAKG,MAAL,CAAYQ,KAAZ,CAAkBM,QAAlB,CAA2BC,SAA7B,CAAlC;AACA;;AA5E0D","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module code-block/indentcodeblockcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\n\nimport {\n\tgetIndentOutdentPositions,\n\tisModelSelectionInCodeBlock\n} from './utils';\n\n/**\n * The code block indentation increase command plugin.\n *\n * @extends module:core/command~Command\n */\nexport default class IndentCodeBlockCommand extends Command {\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * A sequence of characters added to the line when the command is executed.\n\t\t *\n\t\t * @readonly\n\t\t * @private\n\t\t * @member {String}\n\t\t */\n\t\tthis._indentSequence = editor.config.get( 'codeBlock.indentSequence' );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._checkEnabled();\n\t}\n\n\t/**\n\t * Executes the command. When the command {@link #isEnabled is enabled}, the indentation of the\n\t * code lines in the selection will be increased.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst positions = getIndentOutdentPositions( model );\n\n\t\t\t// Indent all positions, for instance assuming the indent sequence is 4x space (\"    \"):\n\t\t\t//\n\t\t\t//\t\t<codeBlock>^foo</codeBlock>        ->       <codeBlock>    foo</codeBlock>\n\t\t\t//\n\t\t\t//\t\t<codeBlock>foo^bar</codeBlock>     ->       <codeBlock>foo    bar</codeBlock>\n\t\t\t//\n\t\t\t// Also, when there is more than one position:\n\t\t\t//\n\t\t\t//\t\t<codeBlock>\n\t\t\t//\t\t\t^foobar\n\t\t\t//\t\t\t<softBreak></softBreak>\n\t\t\t//\t\t\t^bazqux\n\t\t\t//\t\t</codeBlock>\n\t\t\t//\n\t\t\t//\t\t->\n\t\t\t//\n\t\t\t//\t\t<codeBlock>\n\t\t\t//\t\t\t    foobar\n\t\t\t//\t\t\t<softBreak></softBreak>\n\t\t\t//\t\t\t    bazqux\n\t\t\t//\t\t</codeBlock>\n\t\t\t//\n\t\t\tfor ( const position of positions ) {\n\t\t\t\twriter.insertText( this._indentSequence, position );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Checks whether the command can be enabled in the current context.\n\t *\n\t * @private\n\t * @returns {Boolean} Whether the command should be enabled.\n\t */\n\t_checkEnabled() {\n\t\tif ( !this._indentSequence ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Indent (forward) command is always enabled when there's any code block in the selection\n\t\t// because you can always indent code lines.\n\t\treturn isModelSelectionInCodeBlock( this.editor.model.document.selection );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}