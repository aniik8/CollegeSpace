{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BaseUrl from './BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateQ = props => {\n  _s();\n\n  const [prevData, setprevData] = useState({\n    question: \"\"\n  });\n  const [newData, setNewData] = useState({\n    question: \"\"\n  });\n  console.log(props.data[0]);\n\n  const setData = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        id: \"Editor\",\n        style: {\n          width: \"75%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n          toolbarId: 't1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          value: prevData.question,\n          onChange: setData,\n          placeholder: \"Write something awesome...\",\n          modules: modules('t1'),\n          formats: formats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          onClick: () => setNewData(\"Aniket\"),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateQ, \"1TM2MMN2AvZaq0N1hfgGVgGeKaU=\");\n\n_c = UpdateQ;\nexport default UpdateQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateQ\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js"],"names":["React","useEffect","useState","BaseUrl","ReactQuill","EditorToolbar","modules","formats","UpdateQ","props","prevData","setprevData","question","newData","setNewData","console","log","data","setData","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,kBAAhD;;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAE;AAAX,GAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC;AAACU,IAAAA,QAAQ,EAAE;AAAX,GAAD,CAAtC;AACJG,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,IAAN,CAAW,CAAX,CAAZ;;AACI,QAAMC,OAAO,GAAG,MAAM,CAErB,CAFD;;AAGA,sBACI;AAAA,2BACE;AAAA,6BAEN;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,EAAE,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAG;AAAT,SAA9C;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,KAAK,EAAET,QAAQ,CAACE,QAFpB;AAGI,UAAA,QAAQ,EAAEM,OAHd;AAII,UAAA,WAAW,EAAE,4BAJjB;AAKI,UAAA,OAAO,EAAEZ,OAAO,CAAC,IAAD,CALpB;AAMI,UAAA,OAAO,EAAEC;AANb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eASQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATR,eAUQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,wBAAhC;AAAyD,UAAA,OAAO,EAAE,MAAKO,UAAU,CAAC,QAAD,CAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA3BD;;GAAMN,O;;KAAAA,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport BaseUrl from './BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\n\n\nconst UpdateQ = (props) => {\n    const [prevData, setprevData] = useState({question: \"\"});\n    const [newData, setNewData] = useState({question: \"\"});\nconsole.log(props.data[0]);\n    const setData = () => {\n        \n    }\n    return (\n        <div>\n          <>\n    \n    <div className='container' id=\"Editor\" style={{width : \"75%\"}}> \n        <EditorToolbar toolbarId={'t1'}/>\n        <ReactQuill\n            theme=\"snow\"\n            value={prevData.question}\n            onChange={setData}\n            placeholder={\"Write something awesome...\"}\n            modules={modules('t1')}\n            formats={formats}/>\n            <button type='button' className='btn btn-outline-success'>Submit</button>\n            <button type='submit' className='btn btn-outline-danger' onClick={()=> setNewData(\"Aniket\")}>Cancel</button>\n            </div>\n\n        </>  \n        </div>\n    )\n}\n\nexport default UpdateQ\n\n"]},"metadata":{},"sourceType":"module"}