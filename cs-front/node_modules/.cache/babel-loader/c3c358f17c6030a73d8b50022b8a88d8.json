{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport { BaseUrl } from './BaseUrl';\nimport { user } from './BaseUrl';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [questions, setquestions] = React.useState([]);\n  const [questionD, setquestionD] = React.useState({\n    question: \"\",\n    addQuesData: \" \"\n  });\n  const [clicked, setClicked] = useState(false);\n  useEffect(() => {\n    fetch(`${BaseUrl}questions`).then(data => data.json()).then(response => setquestions(response));\n  }, [setquestions]);\n\n  const submitQ = () => {\n    axiosInstance.post(`create-question`, {\n      question: questionD.question,\n      question_data: questionD.addQuesData,\n      user: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n    }).then(res => console.log(res));\n  };\n\n  const handleChange = event => {\n    console.log(typeof event);\n    setquestionD({\n      addQuesData: event\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        \"width\": \"50%\",\n        \"height\": \"50%\",\n        \"margin\": \"auto\",\n        \"position\": \"absolute\",\n        \"top\": '0',\n        \"left\": '0',\n        \"bottom\": '0',\n        \"right\": '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Recently asked questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success\",\n        onClick: () => {\n          user !== false ? setClicked(true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: alert(\"Please Login/Signup to Access this\")\n          }, void 0, false);\n        },\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), clicked === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"exampleInputEmail1\",\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: questionD.question,\n              onChange: e => {\n                console.log(e.target.value);\n                setquestionD({\n                  question: e.target.value\n                });\n              },\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\",\n              placeholder: \"Enter email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              id: \"emailHelp\",\n              className: \"form-text text-muted\",\n              children: \"Write your Main Question here & additional info below\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            id: \"Editor\",\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n              toolbarId: 't1'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n              theme: \"snow\",\n              placeholder: \"Write additional information of question here (Can be blank too)...\",\n              modules: modules('t1'),\n              formats: formats,\n              value: questionD.addQuesData,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-success\",\n          onClick: submitQ,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          onClick: () => setClicked(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          \"height\": \"2px\",\n          \"width\": \"100%\",\n          \"borderWidth\": \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-md\",\n        style: {\n          width: \"50$\"\n        },\n        children: questions.length !== 0 ? questions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/question/${item.slug}/${item.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.question_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data not available right now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"uOYbS4EGNvC4ICBES6N6zTZ2MMg=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js"],"names":["React","Navbar","BaseUrl","user","useEffect","useState","Link","axiosInstance","ReactQuill","EditorToolbar","modules","formats","Questions","questions","setquestions","questionD","setquestionD","question","addQuesData","clicked","setClicked","fetch","then","data","json","response","submitQ","post","question_data","JSON","parse","atob","localStorage","getItem","split","user_id","res","console","log","handleChange","event","textAlign","alert","e","preventDefault","target","value","width","length","map","item","index","slug","id","question_date"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport {BaseUrl} from './BaseUrl'\nimport {user} from './BaseUrl'\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../AuthComp/AxiosInstance'\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nconst Questions = () => {\n    const [questions, setquestions]  = React.useState([])\n    const [questionD, setquestionD] = React.useState({\n        question : \"\",\n        addQuesData : \" \"\n    });\n    \n    const [clicked, setClicked] = useState(false);\n    useEffect(()=>{\n        fetch(`${BaseUrl}questions`)\n        .then((data) => data.json()).then((response)=> setquestions(response))}, [setquestions])\n    \n    \n    \n\n    const submitQ = () => {\n        \n        axiosInstance.post(`create-question`, {\n            question : questionD.question,\n            question_data : questionD.addQuesData,\n            user : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id) \n        }).then((res) => console.log(res));\n        }\nconst handleChange = (event) => {console.log(typeof event); setquestionD({addQuesData : event})}\n\n    return (\n        <>\n        <Navbar/>\n        <div className='container' style={{\"width\": \"50%\",\n            \"height\": \"50%\",\n            \"margin\": \"auto\",\n            \"position\": \"absolute\",\n            \"top\": '0',\"left\": '0', \"bottom\": '0', \"right\": '0'}}>\n            <h1 style={{textAlign:\"center\"}}>Recently asked questions</h1>\n            \n            <button type='button' className='btn btn-outline-success' onClick={() => \n            {user !== false ? setClicked(true) :<>{alert(\"Please Login/Signup to Access this\")}</>}    \n            }>Ask Question</button>\n            {clicked === true ? \n                <>\n                <form onSubmit={(e) => e.preventDefault()}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                    <input type=\"email\" value={questionD.question} onChange={(e) => {console.log(e.target.value); setquestionD({question : e.target.value})}} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"/>\n                    <br/>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Write your Main Question here & additional info below</small>\n                    </div>\n                </form>\n                <>\n                <div className='container' id=\"Editor\" style={{width : \"100%\"}}> \n                    \n                    <EditorToolbar toolbarId={'t1'}/>\n                    <ReactQuill\n                        theme=\"snow\"\n                        placeholder={\"Write additional information of question here (Can be blank too)...\"}\n                        modules={modules('t1')}\n                        formats={formats}\n                        value={questionD.addQuesData}\n                        onChange={handleChange}\n                        />\n                    \n                </div>\n\n                </>\n                \n                <button type='button' className='btn btn-outline-success' onClick={submitQ}>Submit</button>\n                <button type='submit' className='btn btn-outline-danger' onClick={() => setClicked(false)}>Cancel</button>\n                \n\n            </>:\n            <></>\n         }\n            <hr style={{\"height\":\"2px\", \"width\":\"100%\", \"borderWidth\":\"0\"}} />\n\n            {/*style={{display: 'inline-block', width: \"calc((100% - 0.1em)/2), \"}}*/}\n            <div className='container-md' style={{width:\"50$\"}}>\n           {((questions.length) !== 0) ? questions.map((item, index)=> \n           {\n               return(\n                   <> \n                    <div key={index}>\n                        <Link to={`/question/${item.slug}/${item.id}`}><h4>{item.question}</h4></Link>\n                        <p>{item.question_date}</p>\n                    </div>\n                    </>\n                    )\n            })\n           : <h4>Data not available right now</h4>}\n           </div>\n           \n           \n\n        \n        </div>\n        </>\n        \n    )\n}\n\nexport default Questions\n"]},"metadata":{},"sourceType":"module"}