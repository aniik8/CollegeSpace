{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module find-and-replace/findnextcommand\n*/\nimport { Command } from 'ckeditor5/src/core';\n/**\n * The find next command. Moves the highlight to the next search result.\n *\n * It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n *\n * @extends module:core/command~Command\n */\n\nexport default class FindNextCommand extends Command {\n  /**\n   * Creates a new `FindNextCommand` instance.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n   * @param {module:find-and-replace/findandreplacestate~FindAndReplaceState} state An object to hold plugin state.\n   */\n  constructor(editor, state) {\n    super(editor); // It does not affect data so should be enabled in read-only mode.\n\n    this.affectsData = false;\n    /**\n     * The find and replace state object used for command operations.\n     *\n     * @protected\n     * @member {module:find-and-replace/findandreplacestate~FindAndReplaceState} #_state\n     */\n\n    this._state = state;\n    this.isEnabled = false;\n    this.listenTo(this._state.results, 'change', () => {\n      this.isEnabled = this._state.results.length > 1;\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  refresh() {\n    this.isEnabled = this._state.results.length > 1;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  execute() {\n    const results = this._state.results;\n    const currentIndex = results.getIndex(this._state.highlightedResult);\n    const nextIndex = currentIndex + 1 >= results.length ? 0 : currentIndex + 1;\n    this._state.highlightedResult = this._state.results.get(nextIndex);\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-find-and-replace/src/findnextcommand.js"],"names":["Command","FindNextCommand","constructor","editor","state","affectsData","_state","isEnabled","listenTo","results","length","refresh","execute","currentIndex","getIndex","highlightedResult","nextIndex","get"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,oBAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,eAAN,SAA8BD,OAA9B,CAAsC;AACpD;AACD;AACA;AACA;AACA;AACA;AACCE,EAAAA,WAAW,CAAEC,MAAF,EAAUC,KAAV,EAAkB;AAC5B,UAAOD,MAAP,EAD4B,CAG5B;;AACA,SAAKE,WAAL,GAAmB,KAAnB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,MAAL,GAAcF,KAAd;AAEA,SAAKG,SAAL,GAAiB,KAAjB;AAEA,SAAKC,QAAL,CAAe,KAAKF,MAAL,CAAYG,OAA3B,EAAoC,QAApC,EAA8C,MAAM;AACnD,WAAKF,SAAL,GAAiB,KAAKD,MAAL,CAAYG,OAAZ,CAAoBC,MAApB,GAA6B,CAA9C;AACA,KAFD;AAGA;AAED;AACD;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,SAAKJ,SAAL,GAAiB,KAAKD,MAAL,CAAYG,OAAZ,CAAoBC,MAApB,GAA6B,CAA9C;AACA;AAED;AACD;AACA;;;AACCE,EAAAA,OAAO,GAAG;AACT,UAAMH,OAAO,GAAG,KAAKH,MAAL,CAAYG,OAA5B;AACA,UAAMI,YAAY,GAAGJ,OAAO,CAACK,QAAR,CAAkB,KAAKR,MAAL,CAAYS,iBAA9B,CAArB;AACA,UAAMC,SAAS,GAAGH,YAAY,GAAG,CAAf,IAAoBJ,OAAO,CAACC,MAA5B,GACjB,CADiB,GACbG,YAAY,GAAG,CADpB;AAGA,SAAKP,MAAL,CAAYS,iBAAZ,GAAgC,KAAKT,MAAL,CAAYG,OAAZ,CAAoBQ,GAApB,CAAyBD,SAAzB,CAAhC;AACA;;AA7CmD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module find-and-replace/findnextcommand\n*/\n\nimport { Command } from 'ckeditor5/src/core';\n\n/**\n * The find next command. Moves the highlight to the next search result.\n *\n * It is used by the {@link module:find-and-replace/findandreplace~FindAndReplace find and replace feature}.\n *\n * @extends module:core/command~Command\n */\nexport default class FindNextCommand extends Command {\n\t/**\n\t * Creates a new `FindNextCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {module:find-and-replace/findandreplacestate~FindAndReplaceState} state An object to hold plugin state.\n\t */\n\tconstructor( editor, state ) {\n\t\tsuper( editor );\n\n\t\t// It does not affect data so should be enabled in read-only mode.\n\t\tthis.affectsData = false;\n\n\t\t/**\n\t\t * The find and replace state object used for command operations.\n\t\t *\n\t\t * @protected\n\t\t * @member {module:find-and-replace/findandreplacestate~FindAndReplaceState} #_state\n\t\t */\n\t\tthis._state = state;\n\n\t\tthis.isEnabled = false;\n\n\t\tthis.listenTo( this._state.results, 'change', () => {\n\t\t\tthis.isEnabled = this._state.results.length > 1;\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this._state.results.length > 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst results = this._state.results;\n\t\tconst currentIndex = results.getIndex( this._state.highlightedResult );\n\t\tconst nextIndex = currentIndex + 1 >= results.length ?\n\t\t\t0 : currentIndex + 1;\n\n\t\tthis._state.highlightedResult = this._state.results.get( nextIndex );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}