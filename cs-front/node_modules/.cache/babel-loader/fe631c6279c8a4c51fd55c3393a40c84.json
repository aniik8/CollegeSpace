{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption/imagecaptionui\n */\nimport { Plugin, icons } from 'ckeditor5/src/core';\nimport { ButtonView } from 'ckeditor5/src/ui';\nimport ImageUtils from '../imageutils';\nimport { getCaptionFromModelSelection } from './utils';\n/**\n * The image caption UI plugin. It introduces the `'toggleImageCaption'` UI button.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class ImageCaptionUI extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get requires() {\n    return [ImageUtils];\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  static get pluginName() {\n    return 'ImageCaptionUI';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const editingView = editor.editing.view;\n    const imageUtils = editor.plugins.get('ImageUtils');\n    const t = editor.t;\n    editor.ui.componentFactory.add('toggleImageCaption', locale => {\n      const command = editor.commands.get('toggleImageCaption');\n      const view = new ButtonView(locale);\n      view.set({\n        icon: icons.caption,\n        tooltip: true,\n        isToggleable: true\n      });\n      view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n      view.bind('label').to(command, 'value', value => value ? t('Toggle caption off') : t('Toggle caption on'));\n      this.listenTo(view, 'execute', () => {\n        editor.execute('toggleImageCaption', {\n          focusCaptionOnShow: true\n        }); // Scroll to the selection and highlight the caption if the caption showed up.\n\n        const modelCaptionElement = getCaptionFromModelSelection(imageUtils, editor.model.document.selection);\n\n        if (modelCaptionElement) {\n          const figcaptionElement = editor.editing.mapper.toViewElement(modelCaptionElement);\n          editingView.scrollToTheSelection();\n          editingView.change(writer => {\n            writer.addClass('image__caption_highlighted', figcaptionElement);\n          });\n        }\n      });\n      return view;\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-image/src/imagecaption/imagecaptionui.js"],"names":["Plugin","icons","ButtonView","ImageUtils","getCaptionFromModelSelection","ImageCaptionUI","requires","pluginName","init","editor","editingView","editing","view","imageUtils","plugins","get","t","ui","componentFactory","add","locale","command","commands","set","icon","caption","tooltip","isToggleable","bind","to","value","listenTo","execute","focusCaptionOnShow","modelCaptionElement","model","document","selection","figcaptionElement","mapper","toViewElement","scrollToTheSelection","change","writer","addClass"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,MAAT,EAAiBC,KAAjB,QAA8B,oBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,SAASC,4BAAT,QAA6C,SAA7C;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,cAAN,SAA6BL,MAA7B,CAAoC;AAClD;AACD;AACA;AACoB,aAARM,QAAQ,GAAG;AACrB,WAAO,CAAEH,UAAF,CAAP;AACA;AAED;AACD;AACA;;;AACsB,aAAVI,UAAU,GAAG;AACvB,WAAO,gBAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,WAAW,GAAGD,MAAM,CAACE,OAAP,CAAeC,IAAnC;AACA,UAAMC,UAAU,GAAGJ,MAAM,CAACK,OAAP,CAAeC,GAAf,CAAoB,YAApB,CAAnB;AACA,UAAMC,CAAC,GAAGP,MAAM,CAACO,CAAjB;AAEAP,IAAAA,MAAM,CAACQ,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgC,oBAAhC,EAAsDC,MAAM,IAAI;AAC/D,YAAMC,OAAO,GAAGZ,MAAM,CAACa,QAAP,CAAgBP,GAAhB,CAAqB,oBAArB,CAAhB;AACA,YAAMH,IAAI,GAAG,IAAIV,UAAJ,CAAgBkB,MAAhB,CAAb;AAEAR,MAAAA,IAAI,CAACW,GAAL,CAAU;AACTC,QAAAA,IAAI,EAAEvB,KAAK,CAACwB,OADH;AAETC,QAAAA,OAAO,EAAE,IAFA;AAGTC,QAAAA,YAAY,EAAE;AAHL,OAAV;AAMAf,MAAAA,IAAI,CAACgB,IAAL,CAAW,MAAX,EAAmB,WAAnB,EAAiCC,EAAjC,CAAqCR,OAArC,EAA8C,OAA9C,EAAuD,WAAvD;AACAT,MAAAA,IAAI,CAACgB,IAAL,CAAW,OAAX,EAAqBC,EAArB,CAAyBR,OAAzB,EAAkC,OAAlC,EAA2CS,KAAK,IAAIA,KAAK,GAAGd,CAAC,CAAE,oBAAF,CAAJ,GAA+BA,CAAC,CAAE,mBAAF,CAAzF;AAEA,WAAKe,QAAL,CAAenB,IAAf,EAAqB,SAArB,EAAgC,MAAM;AACrCH,QAAAA,MAAM,CAACuB,OAAP,CAAgB,oBAAhB,EAAsC;AAAEC,UAAAA,kBAAkB,EAAE;AAAtB,SAAtC,EADqC,CAGrC;;AACA,cAAMC,mBAAmB,GAAG9B,4BAA4B,CAAES,UAAF,EAAcJ,MAAM,CAAC0B,KAAP,CAAaC,QAAb,CAAsBC,SAApC,CAAxD;;AAEA,YAAKH,mBAAL,EAA2B;AAC1B,gBAAMI,iBAAiB,GAAG7B,MAAM,CAACE,OAAP,CAAe4B,MAAf,CAAsBC,aAAtB,CAAqCN,mBAArC,CAA1B;AAEAxB,UAAAA,WAAW,CAAC+B,oBAAZ;AAEA/B,UAAAA,WAAW,CAACgC,MAAZ,CAAoBC,MAAM,IAAI;AAC7BA,YAAAA,MAAM,CAACC,QAAP,CAAiB,4BAAjB,EAA+CN,iBAA/C;AACA,WAFD;AAGA;AACD,OAfD;AAiBA,aAAO1B,IAAP;AACA,KA/BD;AAgCA;;AAxDiD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagecaption/imagecaptionui\n */\n\nimport { Plugin, icons } from 'ckeditor5/src/core';\nimport { ButtonView } from 'ckeditor5/src/ui';\nimport ImageUtils from '../imageutils';\n\nimport { getCaptionFromModelSelection } from './utils';\n\n/**\n * The image caption UI plugin. It introduces the `'toggleImageCaption'` UI button.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class ImageCaptionUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get requires() {\n\t\treturn [ ImageUtils ];\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'ImageCaptionUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst editingView = editor.editing.view;\n\t\tconst imageUtils = editor.plugins.get( 'ImageUtils' );\n\t\tconst t = editor.t;\n\n\t\teditor.ui.componentFactory.add( 'toggleImageCaption', locale => {\n\t\t\tconst command = editor.commands.get( 'toggleImageCaption' );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\ticon: icons.caption,\n\t\t\t\ttooltip: true,\n\t\t\t\tisToggleable: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\t\t\tview.bind( 'label' ).to( command, 'value', value => value ? t( 'Toggle caption off' ) : t( 'Toggle caption on' ) );\n\n\t\t\tthis.listenTo( view, 'execute', () => {\n\t\t\t\teditor.execute( 'toggleImageCaption', { focusCaptionOnShow: true } );\n\n\t\t\t\t// Scroll to the selection and highlight the caption if the caption showed up.\n\t\t\t\tconst modelCaptionElement = getCaptionFromModelSelection( imageUtils, editor.model.document.selection );\n\n\t\t\t\tif ( modelCaptionElement ) {\n\t\t\t\t\tconst figcaptionElement = editor.editing.mapper.toViewElement( modelCaptionElement );\n\n\t\t\t\t\teditingView.scrollToTheSelection();\n\n\t\t\t\t\teditingView.change( writer => {\n\t\t\t\t\t\twriter.addClass( 'image__caption_highlighted', figcaptionElement );\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}