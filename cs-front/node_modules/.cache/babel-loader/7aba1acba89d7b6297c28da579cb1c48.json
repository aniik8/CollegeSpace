{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-decoupled/decouplededitoruiview\n */\nimport { EditorUIView, InlineEditableUIView, ToolbarView } from 'ckeditor5/src/ui';\n/**\n * The decoupled editor UI view. It is a virtual view providing an inline\n * {@link module:editor-decoupled/decouplededitoruiview~DecoupledEditorUIView#editable} and a\n * {@link module:editor-decoupled/decouplededitoruiview~DecoupledEditorUIView#toolbar}, but without any\n * specific arrangement of the components in the DOM.\n *\n * See {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n * to learn more about this view.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\n\nexport default class DecoupledEditorUIView extends EditorUIView {\n  /**\n   * Creates an instance of the decoupled editor UI view.\n   *\n   * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n   * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n   * @param {Object} [options={}] Configuration options for the view instance.\n   * @param {HTMLElement} [options.editableElement] The editable element. If not specified, it will be automatically created by\n   * {@link module:ui/editableui/editableuiview~EditableUIView}. Otherwise, the given element will be used.\n   * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n   * in the main {@link module:editor-decoupled/decouplededitoruiview~DecoupledEditorUIView#toolbar toolbar}.\n   * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n   */\n  constructor(locale, editingView) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    super(locale);\n    /**\n     * The main toolbar of the decoupled editor UI.\n     *\n     * @readonly\n     * @member {module:ui/toolbar/toolbarview~ToolbarView}\n     */\n\n    this.toolbar = new ToolbarView(locale, {\n      shouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n    });\n    /**\n     * The editable of the decoupled editor UI.\n     *\n     * @readonly\n     * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n     */\n\n    this.editable = new InlineEditableUIView(locale, editingView, options.editableElement); // This toolbar may be placed anywhere in the page so things like font size need to be reset in it.\n    // Because of the above, make sure the toolbar supports rounded corners.\n    // Also, make sure the toolbar has the proper dir attribute because its ancestor may not have one\n    // and some toolbar item styles depend on this attribute.\n\n    this.toolbar.extendTemplate({\n      attributes: {\n        class: ['ck-reset_all', 'ck-rounded-corners'],\n        dir: locale.uiLanguageDirection\n      }\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  render() {\n    super.render();\n    this.registerChild([this.toolbar, this.editable]);\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-editor-decoupled/src/decouplededitoruiview.js"],"names":["EditorUIView","InlineEditableUIView","ToolbarView","DecoupledEditorUIView","constructor","locale","editingView","options","toolbar","shouldGroupWhenFull","shouldToolbarGroupWhenFull","editable","editableElement","extendTemplate","attributes","class","dir","uiLanguageDirection","render","registerChild"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,YAAT,EAAuBC,oBAAvB,EAA6CC,WAA7C,QAAgE,kBAAhE;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,qBAAN,SAAoCH,YAApC,CAAiD;AAC/D;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCI,EAAAA,WAAW,CAAEC,MAAF,EAAUC,WAAV,EAAsC;AAAA,QAAfC,OAAe,uEAAL,EAAK;AAChD,UAAOF,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKG,OAAL,GAAe,IAAIN,WAAJ,CAAiBG,MAAjB,EAAyB;AACvCI,MAAAA,mBAAmB,EAAEF,OAAO,CAACG;AADU,KAAzB,CAAf;AAIA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKC,QAAL,GAAgB,IAAIV,oBAAJ,CAA0BI,MAA1B,EAAkCC,WAAlC,EAA+CC,OAAO,CAACK,eAAvD,CAAhB,CAnBgD,CAqBhD;AACA;AACA;AACA;;AACA,SAAKJ,OAAL,CAAaK,cAAb,CAA6B;AAC5BC,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,CACN,cADM,EAEN,oBAFM,CADI;AAKXC,QAAAA,GAAG,EAAEX,MAAM,CAACY;AALD;AADgB,KAA7B;AASA;AAED;AACD;AACA;;;AACCC,EAAAA,MAAM,GAAG;AACR,UAAMA,MAAN;AAEA,SAAKC,aAAL,CAAoB,CAAE,KAAKX,OAAP,EAAgB,KAAKG,QAArB,CAApB;AACA;;AAxD8D","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module editor-decoupled/decouplededitoruiview\n */\n\nimport { EditorUIView, InlineEditableUIView, ToolbarView } from 'ckeditor5/src/ui';\n\n/**\n * The decoupled editor UI view. It is a virtual view providing an inline\n * {@link module:editor-decoupled/decouplededitoruiview~DecoupledEditorUIView#editable} and a\n * {@link module:editor-decoupled/decouplededitoruiview~DecoupledEditorUIView#toolbar}, but without any\n * specific arrangement of the components in the DOM.\n *\n * See {@link module:editor-decoupled/decouplededitor~DecoupledEditor.create `DecoupledEditor.create()`}\n * to learn more about this view.\n *\n * @extends module:ui/editorui/editoruiview~EditorUIView\n */\nexport default class DecoupledEditorUIView extends EditorUIView {\n\t/**\n\t * Creates an instance of the decoupled editor UI view.\n\t *\n\t * @param {module:utils/locale~Locale} locale The {@link module:core/editor/editor~Editor#locale} instance.\n\t * @param {module:engine/view/view~View} editingView The editing view instance this view is related to.\n\t * @param {Object} [options={}] Configuration options for the view instance.\n\t * @param {HTMLElement} [options.editableElement] The editable element. If not specified, it will be automatically created by\n\t * {@link module:ui/editableui/editableuiview~EditableUIView}. Otherwise, the given element will be used.\n\t * @param {Boolean} [options.shouldToolbarGroupWhenFull] When set `true` enables automatic items grouping\n\t * in the main {@link module:editor-decoupled/decouplededitoruiview~DecoupledEditorUIView#toolbar toolbar}.\n\t * See {@link module:ui/toolbar/toolbarview~ToolbarOptions#shouldGroupWhenFull} to learn more.\n\t */\n\tconstructor( locale, editingView, options = {} ) {\n\t\tsuper( locale );\n\n\t\t/**\n\t\t * The main toolbar of the decoupled editor UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/toolbar/toolbarview~ToolbarView}\n\t\t */\n\t\tthis.toolbar = new ToolbarView( locale, {\n\t\t\tshouldGroupWhenFull: options.shouldToolbarGroupWhenFull\n\t\t} );\n\n\t\t/**\n\t\t * The editable of the decoupled editor UI.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/editableui/inline/inlineeditableuiview~InlineEditableUIView}\n\t\t */\n\t\tthis.editable = new InlineEditableUIView( locale, editingView, options.editableElement );\n\n\t\t// This toolbar may be placed anywhere in the page so things like font size need to be reset in it.\n\t\t// Because of the above, make sure the toolbar supports rounded corners.\n\t\t// Also, make sure the toolbar has the proper dir attribute because its ancestor may not have one\n\t\t// and some toolbar item styles depend on this attribute.\n\t\tthis.toolbar.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-reset_all',\n\t\t\t\t\t'ck-rounded-corners'\n\t\t\t\t],\n\t\t\t\tdir: locale.uiLanguageDirection\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trender() {\n\t\tsuper.render();\n\n\t\tthis.registerChild( [ this.toolbar, this.editable ] );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}