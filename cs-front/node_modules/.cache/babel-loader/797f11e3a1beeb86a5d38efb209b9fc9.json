{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentcommandbehavior/indentusingclasses\n */\n\n/**\n * The block indentation behavior that uses classes to set indentation.\n *\n * @implements module:indent/indentblockcommand~IndentBehavior\n */\nexport default class IndentUsingClasses {\n  /**\n   * Creates an instance of the indentation behavior.\n   *\n   * @param {Object} config\n   * @param {String} config.direction The direction of indentation.\n   * @param {Array.<String>} config.classes A list of classes used for indentation.\n   */\n  constructor(config) {\n    /**\n     * The direction of indentation.\n     *\n     * @type {Boolean}\n     */\n    this.isForward = config.direction === 'forward';\n    /**\n     * A list of classes used for indentation.\n     *\n     * @type {Array.<String>}\n     */\n\n    this.classes = config.classes;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  checkEnabled(indentAttributeValue) {\n    const currentIndex = this.classes.indexOf(indentAttributeValue);\n\n    if (this.isForward) {\n      return currentIndex < this.classes.length - 1;\n    } else {\n      return currentIndex >= 0;\n    }\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  getNextIndent(indentAttributeValue) {\n    const currentIndex = this.classes.indexOf(indentAttributeValue);\n    const indexStep = this.isForward ? 1 : -1;\n    return this.classes[currentIndex + indexStep];\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-indent/src/indentcommandbehavior/indentusingclasses.js"],"names":["IndentUsingClasses","constructor","config","isForward","direction","classes","checkEnabled","indentAttributeValue","currentIndex","indexOf","length","getNextIndent","indexStep"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMA,kBAAN,CAAyB;AACvC;AACD;AACA;AACA;AACA;AACA;AACA;AACCC,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB;AACF;AACA;AACA;AACA;AACE,SAAKC,SAAL,GAAiBD,MAAM,CAACE,SAAP,KAAqB,SAAtC;AAEA;AACF;AACA;AACA;AACA;;AACE,SAAKC,OAAL,GAAeH,MAAM,CAACG,OAAtB;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,YAAY,CAAEC,oBAAF,EAAyB;AACpC,UAAMC,YAAY,GAAG,KAAKH,OAAL,CAAaI,OAAb,CAAsBF,oBAAtB,CAArB;;AAEA,QAAK,KAAKJ,SAAV,EAAsB;AACrB,aAAOK,YAAY,GAAG,KAAKH,OAAL,CAAaK,MAAb,GAAsB,CAA5C;AACA,KAFD,MAEO;AACN,aAAOF,YAAY,IAAI,CAAvB;AACA;AACD;AAED;AACD;AACA;;;AACCG,EAAAA,aAAa,CAAEJ,oBAAF,EAAyB;AACrC,UAAMC,YAAY,GAAG,KAAKH,OAAL,CAAaI,OAAb,CAAsBF,oBAAtB,CAArB;AACA,UAAMK,SAAS,GAAG,KAAKT,SAAL,GAAiB,CAAjB,GAAqB,CAAC,CAAxC;AAEA,WAAO,KAAKE,OAAL,CAAcG,YAAY,GAAGI,SAA7B,CAAP;AACA;;AA7CsC","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentcommandbehavior/indentusingclasses\n */\n\n/**\n * The block indentation behavior that uses classes to set indentation.\n *\n * @implements module:indent/indentblockcommand~IndentBehavior\n */\nexport default class IndentUsingClasses {\n\t/**\n\t * Creates an instance of the indentation behavior.\n\t *\n\t * @param {Object} config\n\t * @param {String} config.direction The direction of indentation.\n\t * @param {Array.<String>} config.classes A list of classes used for indentation.\n\t */\n\tconstructor( config ) {\n\t\t/**\n\t\t * The direction of indentation.\n\t\t *\n\t\t * @type {Boolean}\n\t\t */\n\t\tthis.isForward = config.direction === 'forward';\n\n\t\t/**\n\t\t * A list of classes used for indentation.\n\t\t *\n\t\t * @type {Array.<String>}\n\t\t */\n\t\tthis.classes = config.classes;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tcheckEnabled( indentAttributeValue ) {\n\t\tconst currentIndex = this.classes.indexOf( indentAttributeValue );\n\n\t\tif ( this.isForward ) {\n\t\t\treturn currentIndex < this.classes.length - 1;\n\t\t} else {\n\t\t\treturn currentIndex >= 0;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tgetNextIndent( indentAttributeValue ) {\n\t\tconst currentIndex = this.classes.indexOf( indentAttributeValue );\n\t\tconst indexStep = this.isForward ? 1 : -1;\n\n\t\treturn this.classes[ currentIndex + indexStep ];\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}