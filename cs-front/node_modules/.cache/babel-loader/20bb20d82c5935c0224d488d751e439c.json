{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/ui/contextualballoon\n */\nimport { Rect } from 'ckeditor5/src/utils';\nimport { BalloonPanelView } from 'ckeditor5/src/ui';\nimport { getTableWidgetAncestor } from './widget';\nconst DEFAULT_BALLOON_POSITIONS = BalloonPanelView.defaultPositions;\nconst BALLOON_POSITIONS = [DEFAULT_BALLOON_POSITIONS.northArrowSouth, DEFAULT_BALLOON_POSITIONS.northArrowSouthWest, DEFAULT_BALLOON_POSITIONS.northArrowSouthEast, DEFAULT_BALLOON_POSITIONS.southArrowNorth, DEFAULT_BALLOON_POSITIONS.southArrowNorthWest, DEFAULT_BALLOON_POSITIONS.southArrowNorthEast, DEFAULT_BALLOON_POSITIONS.viewportStickyNorth];\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the table in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {String} target Either \"cell\" or \"table\". Determines the target the balloon will\n * be attached to.\n */\n\nexport function repositionContextualBalloon(editor, target) {\n  const balloon = editor.plugins.get('ContextualBalloon');\n\n  if (getTableWidgetAncestor(editor.editing.view.document.selection)) {\n    let position;\n\n    if (target === 'cell') {\n      position = getBalloonCellPositionData(editor);\n    } else {\n      position = getBalloonTablePositionData(editor);\n    }\n\n    balloon.updatePosition(position);\n  }\n}\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected table in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\n\nexport function getBalloonTablePositionData(editor) {\n  const firstPosition = editor.model.document.selection.getFirstPosition();\n  const modelTable = firstPosition.findAncestor('table');\n  const viewTable = editor.editing.mapper.toViewElement(modelTable);\n  return {\n    target: editor.editing.view.domConverter.viewToDom(viewTable),\n    positions: BALLOON_POSITIONS\n  };\n}\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected table cell in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\n\nexport function getBalloonCellPositionData(editor) {\n  const mapper = editor.editing.mapper;\n  const domConverter = editor.editing.view.domConverter;\n  const selection = editor.model.document.selection;\n\n  if (selection.rangeCount > 1) {\n    return {\n      target: () => createBoundingRect(selection.getRanges(), editor),\n      positions: BALLOON_POSITIONS\n    };\n  }\n\n  const modelTableCell = getTableCellAtPosition(selection.getFirstPosition());\n  const viewTableCell = mapper.toViewElement(modelTableCell);\n  return {\n    target: domConverter.viewToDom(viewTableCell),\n    positions: BALLOON_POSITIONS\n  };\n} // Returns the first selected table cell from a multi-cell or in-cell selection.\n//\n// @param {module:engine/model/position~Position} position Document position.\n// @returns {module:engine/model/element~Element}\n\nfunction getTableCellAtPosition(position) {\n  const isTableCellSelected = position.nodeAfter && position.nodeAfter.is('element', 'tableCell');\n  return isTableCellSelected ? position.nodeAfter : position.findAncestor('tableCell');\n} // Returns bounding rectangle for given model ranges.\n//\n// @param {Iterable.<module:engine/model/range~Range>} ranges Model ranges that the bounding rect should be returned for.\n// @param {module:core/editor/editor~Editor} editor The editor instance.\n// @returns {module:utils/dom/rect~Rect}\n\n\nfunction createBoundingRect(ranges, editor) {\n  const mapper = editor.editing.mapper;\n  const domConverter = editor.editing.view.domConverter;\n  const rects = Array.from(ranges).map(range => {\n    const modelTableCell = getTableCellAtPosition(range.start);\n    const viewTableCell = mapper.toViewElement(modelTableCell);\n    return new Rect(domConverter.viewToDom(viewTableCell));\n  });\n  return Rect.getBoundingRect(rects);\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-table/src/utils/ui/contextualballoon.js"],"names":["Rect","BalloonPanelView","getTableWidgetAncestor","DEFAULT_BALLOON_POSITIONS","defaultPositions","BALLOON_POSITIONS","northArrowSouth","northArrowSouthWest","northArrowSouthEast","southArrowNorth","southArrowNorthWest","southArrowNorthEast","viewportStickyNorth","repositionContextualBalloon","editor","target","balloon","plugins","get","editing","view","document","selection","position","getBalloonCellPositionData","getBalloonTablePositionData","updatePosition","firstPosition","model","getFirstPosition","modelTable","findAncestor","viewTable","mapper","toViewElement","domConverter","viewToDom","positions","rangeCount","createBoundingRect","getRanges","modelTableCell","getTableCellAtPosition","viewTableCell","isTableCellSelected","nodeAfter","is","ranges","rects","Array","from","map","range","start","getBoundingRect"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/utils/ui/contextualballoon\n */\n\nimport { Rect } from 'ckeditor5/src/utils';\nimport { BalloonPanelView } from 'ckeditor5/src/ui';\n\nimport { getTableWidgetAncestor } from './widget';\n\nconst DEFAULT_BALLOON_POSITIONS = BalloonPanelView.defaultPositions;\n\nconst BALLOON_POSITIONS = [\n\tDEFAULT_BALLOON_POSITIONS.northArrowSouth,\n\tDEFAULT_BALLOON_POSITIONS.northArrowSouthWest,\n\tDEFAULT_BALLOON_POSITIONS.northArrowSouthEast,\n\tDEFAULT_BALLOON_POSITIONS.southArrowNorth,\n\tDEFAULT_BALLOON_POSITIONS.southArrowNorthWest,\n\tDEFAULT_BALLOON_POSITIONS.southArrowNorthEast,\n\tDEFAULT_BALLOON_POSITIONS.viewportStickyNorth\n];\n\n/**\n * A helper utility that positions the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} instance\n * with respect to the table in the editor content, if one is selected.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @param {String} target Either \"cell\" or \"table\". Determines the target the balloon will\n * be attached to.\n */\nexport function repositionContextualBalloon( editor, target ) {\n\tconst balloon = editor.plugins.get( 'ContextualBalloon' );\n\n\tif ( getTableWidgetAncestor( editor.editing.view.document.selection ) ) {\n\t\tlet position;\n\n\t\tif ( target === 'cell' ) {\n\t\t\tposition = getBalloonCellPositionData( editor );\n\t\t} else {\n\t\t\tposition = getBalloonTablePositionData( editor );\n\t\t}\n\n\t\tballoon.updatePosition( position );\n\t}\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected table in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonTablePositionData( editor ) {\n\tconst firstPosition = editor.model.document.selection.getFirstPosition();\n\tconst modelTable = firstPosition.findAncestor( 'table' );\n\tconst viewTable = editor.editing.mapper.toViewElement( modelTable );\n\n\treturn {\n\t\ttarget: editor.editing.view.domConverter.viewToDom( viewTable ),\n\t\tpositions: BALLOON_POSITIONS\n\t};\n}\n\n/**\n * Returns the positioning options that control the geometry of the\n * {@link module:ui/panel/balloon/contextualballoon~ContextualBalloon contextual balloon} with respect\n * to the selected table cell in the editor content.\n *\n * @param {module:core/editor/editor~Editor} editor The editor instance.\n * @returns {module:utils/dom/position~Options}\n */\nexport function getBalloonCellPositionData( editor ) {\n\tconst mapper = editor.editing.mapper;\n\tconst domConverter = editor.editing.view.domConverter;\n\tconst selection = editor.model.document.selection;\n\n\tif ( selection.rangeCount > 1 ) {\n\t\treturn {\n\t\t\ttarget: () => createBoundingRect( selection.getRanges(), editor ),\n\t\t\tpositions: BALLOON_POSITIONS\n\t\t};\n\t}\n\n\tconst modelTableCell = getTableCellAtPosition( selection.getFirstPosition() );\n\tconst viewTableCell = mapper.toViewElement( modelTableCell );\n\n\treturn {\n\t\ttarget: domConverter.viewToDom( viewTableCell ),\n\t\tpositions: BALLOON_POSITIONS\n\t};\n}\n\n// Returns the first selected table cell from a multi-cell or in-cell selection.\n//\n// @param {module:engine/model/position~Position} position Document position.\n// @returns {module:engine/model/element~Element}\nfunction getTableCellAtPosition( position ) {\n\tconst isTableCellSelected = position.nodeAfter && position.nodeAfter.is( 'element', 'tableCell' );\n\n\treturn isTableCellSelected ? position.nodeAfter : position.findAncestor( 'tableCell' );\n}\n\n// Returns bounding rectangle for given model ranges.\n//\n// @param {Iterable.<module:engine/model/range~Range>} ranges Model ranges that the bounding rect should be returned for.\n// @param {module:core/editor/editor~Editor} editor The editor instance.\n// @returns {module:utils/dom/rect~Rect}\nfunction createBoundingRect( ranges, editor ) {\n\tconst mapper = editor.editing.mapper;\n\tconst domConverter = editor.editing.view.domConverter;\n\tconst rects = Array.from( ranges ).map( range => {\n\t\tconst modelTableCell = getTableCellAtPosition( range.start );\n\t\tconst viewTableCell = mapper.toViewElement( modelTableCell );\n\t\treturn new Rect( domConverter.viewToDom( viewTableCell ) );\n\t} );\n\n\treturn Rect.getBoundingRect( rects );\n}\n"]},"metadata":{},"sourceType":"module"}