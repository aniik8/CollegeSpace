{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/splitcellcommand\n */\nimport { Command } from 'ckeditor5/src/core';\nimport { getSelectionAffectedTableCells } from '../utils/selection';\n/**\n * The split cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'splitTableCellVertically'`\n * and `'splitTableCellHorizontally'`  editor commands.\n *\n * You can split any cell vertically or horizontally by executing this command. For example, to split the selected table cell vertically:\n *\n *\t\teditor.execute( 'splitTableCellVertically' );\n *\n * @extends module:core/command~Command\n */\n\nexport default class SplitCellCommand extends Command {\n  /**\n   * Creates a new `SplitCellCommand` instance.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n   * @param {Object} options\n   * @param {String} options.direction Indicates whether the command should split cells `'horizontally'` or `'vertically'`.\n   */\n  constructor(editor) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super(editor);\n    /**\n     * The direction that indicates which cell will be split.\n     *\n     * @readonly\n     * @member {String} #direction\n     */\n\n    this.direction = options.direction || 'horizontally';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  refresh() {\n    const selectedCells = getSelectionAffectedTableCells(this.editor.model.document.selection);\n    this.isEnabled = selectedCells.length === 1;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  execute() {\n    const tableCell = getSelectionAffectedTableCells(this.editor.model.document.selection)[0];\n    const isHorizontal = this.direction === 'horizontally';\n    const tableUtils = this.editor.plugins.get('TableUtils');\n\n    if (isHorizontal) {\n      tableUtils.splitCellHorizontally(tableCell, 2);\n    } else {\n      tableUtils.splitCellVertically(tableCell, 2);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-table/src/commands/splitcellcommand.js"],"names":["Command","getSelectionAffectedTableCells","SplitCellCommand","constructor","editor","options","direction","refresh","selectedCells","model","document","selection","isEnabled","length","execute","tableCell","isHorizontal","tableUtils","plugins","get","splitCellHorizontally","splitCellVertically"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,8BAAT,QAA+C,oBAA/C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,gBAAN,SAA+BF,OAA/B,CAAuC;AACrD;AACD;AACA;AACA;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAAEC,MAAF,EAAyB;AAAA,QAAfC,OAAe,uEAAL,EAAK;AACnC,UAAOD,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKE,SAAL,GAAiBD,OAAO,CAACC,SAAR,IAAqB,cAAtC;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,UAAMC,aAAa,GAAGP,8BAA8B,CAAE,KAAKG,MAAL,CAAYK,KAAZ,CAAkBC,QAAlB,CAA2BC,SAA7B,CAApD;AAEA,SAAKC,SAAL,GAAiBJ,aAAa,CAACK,MAAd,KAAyB,CAA1C;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,UAAMC,SAAS,GAAGd,8BAA8B,CAAE,KAAKG,MAAL,CAAYK,KAAZ,CAAkBC,QAAlB,CAA2BC,SAA7B,CAA9B,CAAwE,CAAxE,CAAlB;AACA,UAAMK,YAAY,GAAG,KAAKV,SAAL,KAAmB,cAAxC;AACA,UAAMW,UAAU,GAAG,KAAKb,MAAL,CAAYc,OAAZ,CAAoBC,GAApB,CAAyB,YAAzB,CAAnB;;AAEA,QAAKH,YAAL,EAAoB;AACnBC,MAAAA,UAAU,CAACG,qBAAX,CAAkCL,SAAlC,EAA6C,CAA7C;AACA,KAFD,MAEO;AACNE,MAAAA,UAAU,CAACI,mBAAX,CAAgCN,SAAhC,EAA2C,CAA3C;AACA;AACD;;AA1CoD","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/splitcellcommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\nimport { getSelectionAffectedTableCells } from '../utils/selection';\n\n/**\n * The split cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'splitTableCellVertically'`\n * and `'splitTableCellHorizontally'`  editor commands.\n *\n * You can split any cell vertically or horizontally by executing this command. For example, to split the selected table cell vertically:\n *\n *\t\teditor.execute( 'splitTableCellVertically' );\n *\n * @extends module:core/command~Command\n */\nexport default class SplitCellCommand extends Command {\n\t/**\n\t * Creates a new `SplitCellCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} options.direction Indicates whether the command should split cells `'horizontally'` or `'vertically'`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The direction that indicates which cell will be split.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #direction\n\t\t */\n\t\tthis.direction = options.direction || 'horizontally';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst selectedCells = getSelectionAffectedTableCells( this.editor.model.document.selection );\n\n\t\tthis.isEnabled = selectedCells.length === 1;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst tableCell = getSelectionAffectedTableCells( this.editor.model.document.selection )[ 0 ];\n\t\tconst isHorizontal = this.direction === 'horizontally';\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tif ( isHorizontal ) {\n\t\t\ttableUtils.splitCellHorizontally( tableCell, 2 );\n\t\t} else {\n\t\t\ttableUtils.splitCellVertically( tableCell, 2 );\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}