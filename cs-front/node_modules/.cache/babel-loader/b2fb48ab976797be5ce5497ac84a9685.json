{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/AuthComp/Logout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from './AxiosInstance';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Logout = () => {\n  _s();\n\n  const history = useHistory();\n  useEffect(() => {\n    const response = axiosInstance.post('logout/blacklist', {\n      refresh_token: localStorage.getItem('refresh_token')\n    });\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    axiosInstance.defaults.headers['Authorization'] = null;\n    history.push('/login');\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Logout\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Logout, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Logout;\nexport default Logout; //here we are just putting the access token in blacklist token and removing all the \n//access and refresh token from the localstorage of the browser..\n\nvar _c;\n\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/AuthComp/Logout.js"],"names":["React","useState","useEffect","axiosInstance","useHistory","Logout","history","response","post","refresh_token","localStorage","getItem","removeItem","defaults","headers","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACpB,QAAMC,OAAO,GAAGF,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMK,QAAQ,GAAGJ,aAAa,CAACK,IAAd,CAAmB,kBAAnB,EAAuC;AACvDC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,eAArB;AADwC,KAAvC,CAAjB;AAGAD,IAAAA,YAAY,CAACE,UAAb,CAAwB,cAAxB;AACAF,IAAAA,YAAY,CAACE,UAAb,CAAwB,eAAxB;AACAT,IAAAA,aAAa,CAACU,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IAAkD,IAAlD;AACAR,IAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACA,GARQ,CAAT;AASA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAbD;;GAAMV,M;UACWD,U;;;KADXC,M;AAeN,eAAeA,MAAf,C,CAGA;AACA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axiosInstance from './AxiosInstance';\nimport { useHistory } from 'react-router-dom';\n\nconst Logout = () => {\n\tconst history = useHistory();\n\n\tuseEffect(() => {\n\t\tconst response = axiosInstance.post('logout/blacklist', {\n\t\t\trefresh_token: localStorage.getItem('refresh_token'),\n\t\t});\n\t\tlocalStorage.removeItem('access_token');\n\t\tlocalStorage.removeItem('refresh_token');\n\t\taxiosInstance.defaults.headers['Authorization'] = null;\n\t\thistory.push('/login');\n\t});\n\treturn <div>Logout</div>;\n}\n\nexport default Logout\n\n\n//here we are just putting the access token in blacklist token and removing all the \n//access and refresh token from the localstorage of the browser..\n"]},"metadata":{},"sourceType":"module"}