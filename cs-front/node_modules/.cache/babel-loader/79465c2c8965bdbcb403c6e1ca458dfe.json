{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/inserttablecommand\n */\nimport { Command } from 'ckeditor5/src/core';\nimport { findOptimalInsertionRange } from 'ckeditor5/src/widget';\n/**\n * The insert table command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTable'` editor command.\n *\n * To insert a table at the current selection, execute the command and specify the dimensions:\n *\n *\t\teditor.execute( 'insertTable', { rows: 20, columns: 5 } );\n *\n * @extends module:core/command~Command\n */\n\nexport default class InsertTableCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const schema = model.schema;\n    this.isEnabled = isAllowedInParent(selection, schema);\n  }\n  /**\n   * Executes the command.\n   *\n   * Inserts a table with the given number of rows and columns into the editor.\n   *\n   * @param {Object} options\n   * @param {Number} [options.rows=2] The number of rows to create in the inserted table.\n   * @param {Number} [options.columns=2] The number of columns to create in the inserted table.\n   * @param {Number} [options.headingRows] The number of heading rows.\n   * If not provided it will default to {@link module:table/table~TableConfig#defaultHeadings `config.table.defaultHeadings.rows`}\n   * table config.\n   * @param {Number} [options.headingColumns] The number of heading columns.\n   * If not provided it will default to {@link module:table/table~TableConfig#defaultHeadings `config.table.defaultHeadings.columns`}\n   * table config.\n   * @fires execute\n   */\n\n\n  execute() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const tableUtils = this.editor.plugins.get('TableUtils');\n    const config = this.editor.config.get('table');\n    const insertionRange = findOptimalInsertionRange(selection, model);\n    const defaultRows = config.defaultHeadings.rows;\n    const defaultColumns = config.defaultHeadings.columns;\n\n    if (options.headingRows === undefined && defaultRows) {\n      options.headingRows = defaultRows;\n    }\n\n    if (options.headingColumns === undefined && defaultColumns) {\n      options.headingColumns = defaultColumns;\n    }\n\n    model.change(writer => {\n      const table = tableUtils.createTable(writer, options);\n      model.insertContent(table, insertionRange);\n      writer.setSelection(writer.createPositionAt(table.getNodeByPath([0, 0, 0]), 0));\n    });\n  }\n\n} // Checks if the table is allowed in the parent.\n//\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\n\nfunction isAllowedInParent(selection, schema) {\n  const positionParent = selection.getFirstPosition().parent;\n  const validParent = positionParent === positionParent.root ? positionParent : positionParent.parent;\n  return schema.checkChild(validParent, 'table');\n}","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/node_modules/@ckeditor/ckeditor5-table/src/commands/inserttablecommand.js"],"names":["Command","findOptimalInsertionRange","InsertTableCommand","refresh","model","editor","selection","document","schema","isEnabled","isAllowedInParent","execute","options","tableUtils","plugins","get","config","insertionRange","defaultRows","defaultHeadings","rows","defaultColumns","columns","headingRows","undefined","headingColumns","change","writer","table","createTable","insertContent","setSelection","createPositionAt","getNodeByPath","positionParent","getFirstPosition","parent","validParent","root","checkChild"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,yBAAT,QAA0C,sBAA1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,kBAAN,SAAiCF,OAAjC,CAAyC;AACvD;AACD;AACA;AACCG,EAAAA,OAAO,GAAG;AACT,UAAMC,KAAK,GAAG,KAAKC,MAAL,CAAYD,KAA1B;AACA,UAAME,SAAS,GAAGF,KAAK,CAACG,QAAN,CAAeD,SAAjC;AACA,UAAME,MAAM,GAAGJ,KAAK,CAACI,MAArB;AAEA,SAAKC,SAAL,GAAiBC,iBAAiB,CAAEJ,SAAF,EAAaE,MAAb,CAAlC;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCG,EAAAA,OAAO,GAAiB;AAAA,QAAfC,OAAe,uEAAL,EAAK;AACvB,UAAMR,KAAK,GAAG,KAAKC,MAAL,CAAYD,KAA1B;AACA,UAAME,SAAS,GAAGF,KAAK,CAACG,QAAN,CAAeD,SAAjC;AACA,UAAMO,UAAU,GAAG,KAAKR,MAAL,CAAYS,OAAZ,CAAoBC,GAApB,CAAyB,YAAzB,CAAnB;AACA,UAAMC,MAAM,GAAG,KAAKX,MAAL,CAAYW,MAAZ,CAAmBD,GAAnB,CAAwB,OAAxB,CAAf;AAEA,UAAME,cAAc,GAAGhB,yBAAyB,CAAEK,SAAF,EAAaF,KAAb,CAAhD;AAEA,UAAMc,WAAW,GAAGF,MAAM,CAACG,eAAP,CAAuBC,IAA3C;AACA,UAAMC,cAAc,GAAGL,MAAM,CAACG,eAAP,CAAuBG,OAA9C;;AAEA,QAAKV,OAAO,CAACW,WAAR,KAAwBC,SAAxB,IAAqCN,WAA1C,EAAwD;AACvDN,MAAAA,OAAO,CAACW,WAAR,GAAsBL,WAAtB;AACA;;AAED,QAAKN,OAAO,CAACa,cAAR,KAA2BD,SAA3B,IAAwCH,cAA7C,EAA8D;AAC7DT,MAAAA,OAAO,CAACa,cAAR,GAAyBJ,cAAzB;AACA;;AAEDjB,IAAAA,KAAK,CAACsB,MAAN,CAAcC,MAAM,IAAI;AACvB,YAAMC,KAAK,GAAGf,UAAU,CAACgB,WAAX,CAAwBF,MAAxB,EAAgCf,OAAhC,CAAd;AAEAR,MAAAA,KAAK,CAAC0B,aAAN,CAAqBF,KAArB,EAA4BX,cAA5B;AAEAU,MAAAA,MAAM,CAACI,YAAP,CAAqBJ,MAAM,CAACK,gBAAP,CAAyBJ,KAAK,CAACK,aAAN,CAAqB,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,CAArB,CAAzB,EAA6D,CAA7D,CAArB;AACA,KAND;AAOA;;AAtDsD,C,CAyDxD;AACA;AACA;AACA;AACA;;AACA,SAASvB,iBAAT,CAA4BJ,SAA5B,EAAuCE,MAAvC,EAAgD;AAC/C,QAAM0B,cAAc,GAAG5B,SAAS,CAAC6B,gBAAV,GAA6BC,MAApD;AACA,QAAMC,WAAW,GAAGH,cAAc,KAAKA,cAAc,CAACI,IAAlC,GAAyCJ,cAAzC,GAA0DA,cAAc,CAACE,MAA7F;AAEA,SAAO5B,MAAM,CAAC+B,UAAP,CAAmBF,WAAnB,EAAgC,OAAhC,CAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2021, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/inserttablecommand\n */\n\nimport { Command } from 'ckeditor5/src/core';\nimport { findOptimalInsertionRange } from 'ckeditor5/src/widget';\n\n/**\n * The insert table command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as the `'insertTable'` editor command.\n *\n * To insert a table at the current selection, execute the command and specify the dimensions:\n *\n *\t\teditor.execute( 'insertTable', { rows: 20, columns: 5 } );\n *\n * @extends module:core/command~Command\n */\nexport default class InsertTableCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst schema = model.schema;\n\n\t\tthis.isEnabled = isAllowedInParent( selection, schema );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * Inserts a table with the given number of rows and columns into the editor.\n\t *\n\t * @param {Object} options\n\t * @param {Number} [options.rows=2] The number of rows to create in the inserted table.\n\t * @param {Number} [options.columns=2] The number of columns to create in the inserted table.\n\t * @param {Number} [options.headingRows] The number of heading rows.\n\t * If not provided it will default to {@link module:table/table~TableConfig#defaultHeadings `config.table.defaultHeadings.rows`}\n\t * table config.\n\t * @param {Number} [options.headingColumns] The number of heading columns.\n\t * If not provided it will default to {@link module:table/table~TableConfig#defaultHeadings `config.table.defaultHeadings.columns`}\n\t * table config.\n\t * @fires execute\n\t */\n\texecute( options = {} ) {\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\t\tconst config = this.editor.config.get( 'table' );\n\n\t\tconst insertionRange = findOptimalInsertionRange( selection, model );\n\n\t\tconst defaultRows = config.defaultHeadings.rows;\n\t\tconst defaultColumns = config.defaultHeadings.columns;\n\n\t\tif ( options.headingRows === undefined && defaultRows ) {\n\t\t\toptions.headingRows = defaultRows;\n\t\t}\n\n\t\tif ( options.headingColumns === undefined && defaultColumns ) {\n\t\t\toptions.headingColumns = defaultColumns;\n\t\t}\n\n\t\tmodel.change( writer => {\n\t\t\tconst table = tableUtils.createTable( writer, options );\n\n\t\t\tmodel.insertContent( table, insertionRange );\n\n\t\t\twriter.setSelection( writer.createPositionAt( table.getNodeByPath( [ 0, 0, 0 ] ), 0 ) );\n\t\t} );\n\t}\n}\n\n// Checks if the table is allowed in the parent.\n//\n// @param {module:engine/model/selection~Selection|module:engine/model/documentselection~DocumentSelection} selection\n// @param {module:engine/model/schema~Schema} schema\n// @returns {Boolean}\nfunction isAllowedInParent( selection, schema ) {\n\tconst positionParent = selection.getFirstPosition().parent;\n\tconst validParent = positionParent === positionParent.root ? positionParent : positionParent.parent;\n\n\treturn schema.checkChild( validParent, 'table' );\n}\n"]},"metadata":{},"sourceType":"module"}