{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/QnA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Error from './Error';\nimport 'quill/dist/quill.bubble.css';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QnA = () => {\n  _s();\n\n  const BaseUrl = `http://127.0.0.1:8000`;\n  const history = useHistory();\n  const [question, setQuestion] = useState([]);\n  const [clicked, setclicked] = useState({\n    clicked4ans: false,\n    clicked4update: false\n  });\n  useEffect(() => {\n    fetch(`${BaseUrl}${history.location.pathname}`).then(data => data.json()).then(response => {\n      console.log(response);\n      setQuestion(response);\n    });\n  }, [setQuestion]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), typeof question[0] === \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : question[1].length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"#808080\"\n                  },\n                  children: item.question_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n                  toolbarId: 't1'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                  theme: \"bubble\",\n                  readOnly: true,\n                  value: item.question_data,\n                  modules: modules('t1'),\n                  formats: formats\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  onClick: () => setclicked({\n                    clicked4update: true\n                  }),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), question[1].map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.answer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Answered on : \", item.answered_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          width: \"75%\",\n          marginTop: '5%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: question.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: \"center\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 29\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n                toolbarId: 't1'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                theme: \"bubble\",\n                readOnly: true,\n                value: item.question_data,\n                modules: modules('t1'),\n                formats: formats\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No answer :-( .You haven't answered it yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Can you answer it?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: () => setclicked(true),\n          children: \"Answer it here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), clicked === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            id: \"Editor\",\n            style: {\n              width: \"75%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n              toolbarId: 't1'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n              theme: \"snow\",\n              placeholder: \"Write something awesome...\",\n              modules: modules('t1'),\n              formats: formats\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-success\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-outline-danger\",\n              onClick: () => setclicked(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n\n_s(QnA, \"HT3Dg0SCZLrsRn3aWWyFZ0eYdEY=\", false, function () {\n  return [useHistory];\n});\n\n_c = QnA;\nexport default QnA;\n/* */\n\nvar _c;\n\n$RefreshReg$(_c, \"QnA\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/QnA.js"],"names":["React","useEffect","useState","useHistory","Navbar","Error","ReactQuill","EditorToolbar","modules","formats","QnA","BaseUrl","history","question","setQuestion","clicked","setclicked","clicked4ans","clicked4update","fetch","location","pathname","then","data","json","response","console","log","length","map","item","index","color","question_date","question_data","answer","answered_date","width","marginTop","textAlign","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Navbar from './Navbar';\nimport Error from './Error';\nimport 'quill/dist/quill.bubble.css'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\n\n\nconst QnA = () => {\n    const BaseUrl = `http://127.0.0.1:8000`\n    const history = useHistory();\n    const [question, setQuestion] = useState([])\n    const [clicked, setclicked] = useState({clicked4ans : false, clicked4update : false});\n    useEffect(() => {\n        fetch(`${BaseUrl}${history.location.pathname}`)\n        .then((data)=> data.json())\n        .then((response)=> { console.log(response); setQuestion(response)}); \n    }, [setQuestion])\n\n\n    \n            \n    return (\n        <>\n        <Navbar/>\n        {typeof question[0] === \"undefined\" ? <>\n            <Error/>\n        </> : question[1].length !== 0 ? <div>\n            <h4>\n                {question.map((item, index)=> {\n                    return(<>\n                        <div key={index}>\n                        {/* {clicked.clicked4update === true ? <UpdateQ/>:<></>} */}\n                        <>\n                        \n                        <h4>{item.question}</h4>\n                        <p style={{color : \"#808080\"}}>{item.question_date}</p>\n                        <EditorToolbar toolbarId={'t1'}/>\n                        <ReactQuill\n                            theme=\"bubble\"\n                            readOnly={true}\n                            value={item.question_data}\n                            modules={modules('t1')}\n                            formats={formats}/>\n                        <button type='button' className='btn btn-success' onClick={()=> setclicked({clicked4update:true})}>Update</button>\n                        </> \n                            \n                        </div>\n                    </>)\n                })}\n            </h4>\n            <hr/>\n            {question[1].map((item, index) => {\n                return(<>\n                <div className='container'>\n                    <p>{item.answer}</p>\n                    <p>Answered on : {item.answered_date}</p>\n                </div>\n                </>\n                )\n            })}\n        </div> : <>\n        <div className='container' style={{width : \"75%\", marginTop:'5%'}}>\n        <h4>\n                {question.map((item, index)=> {\n                    return(<>\n                   \n                        <div key={index} style={{textAlign:\"center\"}}>\n                            <h2>{item.question}</h2>\n                            \n                            {/* <p >Asked on {item.question_date}</p> */}\n                        </div>\n                        <EditorToolbar toolbarId={'t1'}/>\n                        <ReactQuill\n                            theme=\"bubble\"\n                            readOnly={true}\n                            value={item.question_data}\n                            modules={modules('t1')}\n                            formats={formats}/>\n                            \n                        <p>{item.user}</p>\n                    </>)\n                })}\n            </h4>\n            \n            <hr/>\n            \n            <h5>No answer :-( .You haven't answered it yet</h5>\n            <p>Can you answer it?</p>\n            <button className='btn btn-success' onClick={() => setclicked(true)}>Answer it here</button>\n            {clicked === true ? \n            <>\n    \n            <div className='container' id=\"Editor\" style={{width : \"75%\"}}> \n                <EditorToolbar toolbarId={'t1'}/>\n                <ReactQuill\n                    theme=\"snow\"\n                    \n                    placeholder={\"Write something awesome...\"}\n                    modules={modules('t1')}\n                    formats={formats}/>\n                    <button type='button' className='btn btn-outline-success'>Submit</button>\n                    <button type='submit' className='btn btn-outline-danger' onClick={() => setclicked(false)}>Cancel</button>\n                    </div>\n\n            </>: <></>}\n            </div>\n            \n         {/*Wanna make this form inside the button so that each time button is clicked, the form will appear there and will close down if \n         cancelled button is clicked :-)nmm */}   \n        </>}\n        </>\n    )\n}\n\nexport default QnA\n\n\n/* */"]},"metadata":{},"sourceType":"module"}