{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewSNote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar';\nimport { useHistory } from 'react-router-dom';\nimport { BaseUrl } from '../BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nimport UpdateN from './UpdateN';\nimport DeleteN from './DeleteN';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewSNote = () => {\n  _s();\n\n  const history = useHistory();\n  const [notes, setnotes] = useState([]);\n  const [showupdate, setupdate] = useState({\n    update: false,\n    delete: false,\n    s: false\n  });\n\n  const getNotes = async () => {\n    const data = await fetch(`${BaseUrl}view-notes${history.location.pathname}`);\n    const note = await data.json();\n    setnotes(note);\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, [setnotes]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-md\",\n      style: {\n        \"marginTop\": \"3rem\",\n        \"width\": \"80%\"\n      },\n      children: typeof notes !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            \"textAlign\": \"center\"\n          },\n          children: notes.notes_title\n        }, notes.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            \"textAlign\": \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-primary\",\n            style: {\n              \"width\": \"20%\",\n              \"marginRight\": \"10%\"\n            },\n            onClick: () => setupdate({\n              update: true\n            }),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-danger\",\n            style: {\n              \"width\": \"20%\",\n              \"margin\": \"auto\"\n            },\n            onClick: () => setupdate({\n              delete: true\n            }),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            \"textAlign\": \"right\"\n          },\n          children: [\"Posted On : \", Date(notes.created).substr(0, 16)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            \"width\": \"70%\",\n            \"margin\": \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n          toolbarId: 't2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"bubble\",\n          readOnly: true,\n          modules: modules('t2'),\n          formats: formats,\n          value: notes.notes_content,\n          style: {\n            \"marginLeft\": \"auto\",\n            \"marginRight\": \"auto\",\n            \"marginTop\": \"2rem\",\n            \"width\": \"70%\",\n            \"fontFamily\": \"serif\",\n            \"fontSize\": \"16px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Can't fetch notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), showupdate.update === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(UpdateN, {\n        note_t: notes.notes_title,\n        note_con: notes.notes_content,\n        show: true,\n        user_id: notes.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), showupdate.delete === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(DeleteN, {\n        del: true,\n        id: notes.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true);\n}; //not getting data in notes in valid form :-()\n\n\n_s(ViewSNote, \"e7mWOTcoCnEqRqLGrhM2DXZVQFA=\", false, function () {\n  return [useHistory];\n});\n\n_c = ViewSNote;\nexport default ViewSNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewSNote\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewSNote.js"],"names":["React","useEffect","useState","Navbar","useHistory","BaseUrl","ReactQuill","EditorToolbar","modules","formats","UpdateN","DeleteN","ViewSNote","history","notes","setnotes","showupdate","setupdate","update","delete","s","getNotes","data","fetch","location","pathname","note","json","undefined","notes_title","id","Date","created","substr","notes_content","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Navbar from '../Navbar'\nimport {useHistory} from 'react-router-dom'\nimport { BaseUrl } from '../BaseUrl'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nimport UpdateN from './UpdateN';\nimport DeleteN from './DeleteN';\nconst ViewSNote = () => {\n   const  history = useHistory()\n    const [notes, setnotes] = useState([])\n    const [showupdate, setupdate] = useState({update : false, delete : false, s : false})\n    const getNotes = async () => {\n        const data = await fetch(`${BaseUrl}view-notes${history.location.pathname}`)\n        const note = await data.json()\n        setnotes(note)\n        }\n    useEffect(() => {\n        getNotes();\n    }, [setnotes])\n\n    return (\n        <>\n        <Navbar/>\n        <div className='container-md' style={{\"marginTop\" : \"3rem\", \"width\" : \"80%\"}}>\n        \n        {typeof notes !== undefined ?\n            <>\n                <h2 key={notes.id} style={{\"textAlign\" : \"center\"}}>{notes.notes_title}</h2>\n                <br/>\n                <p style={{\"textAlign\" : \"center\"}}>\n                <button className='btn btn-outline-primary' style={{\"width\": \"20%\", \"marginRight\" : \"10%\"}} onClick={() => setupdate({update:true})}>Update</button>\n                <button className='btn btn-outline-danger' style={{\"width\": \"20%\", \"margin\" : \"auto\"}} onClick={() => setupdate({ delete : true})}>Delete</button>\n                </p>\n                <p style={{\"textAlign\":\"right\"}}>Posted On : {Date(notes.created).substr(0,16)}</p>\n                <hr style={{\"width\" : \"70%\", \"margin\" : \"auto\"}}/>\n                \n                <EditorToolbar toolbarId={'t2'}/>\n                    <ReactQuill\n                        theme=\"bubble\"\n                        readOnly={true}\n                        modules={modules('t2')}\n                        formats={formats}\n                        value={notes.notes_content}\n                        style={{\"marginLeft\" : \"auto\", \"marginRight\" : \"auto\", \"marginTop\" : \"2rem\", \"width\" : \"70%\", \"fontFamily\" : \"serif\", \"fontSize\" : \"16px\"}}\n                    />\n            </>\n         : <h5>Can't fetch notes</h5>}\n        </div>\n        {showupdate.update === true ?<>\n            <UpdateN note_t = {notes.notes_title} note_con={notes.notes_content} show={true} user_id={notes.user}/>\n        </> :<></> }\n        {showupdate.delete === true ?<>\n            <DeleteN del={true} id={notes.id}/>\n        </> :<></> }\n        </>\n    )\n}\n//not getting data in notes in valid form :-()\nexport default ViewSNote\n"]},"metadata":{},"sourceType":"module"}