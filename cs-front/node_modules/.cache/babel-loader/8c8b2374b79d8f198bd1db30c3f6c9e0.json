{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewAll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BaseUrl } from '../BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewAll = () => {\n  _s();\n\n  const [notes, setAllnotes] = useState([]);\n\n  const getAllNotes = async () => {\n    const data = await fetch(`${BaseUrl}view-notes`);\n    const note = await data.json();\n    setAllnotes(note);\n  };\n\n  useEffect(() => {\n    getAllNotes();\n  }, [setAllnotes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: notes.length === 0 ? /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Oops. No notes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: notes.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container shadow p-3 mb-5 bg-white rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              \"textAlign\": \"center\"\n            },\n            children: item.notes_title\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              \"width\": \"70%\",\n              \"margin\": \"auto\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n            toolbarId: 't2'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"bubble\",\n            readOnly: true,\n            modules: modules('t2'),\n            formats: formats,\n            value: item.notes_content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewAll, \"SSds43BUNVFag+dodJb+nouEv2c=\");\n\n_c = ViewAll;\nexport default ViewAll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewAll\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewAll.js"],"names":["React","useEffect","useState","BaseUrl","ReactQuill","EditorToolbar","modules","formats","ViewAll","notes","setAllnotes","getAllNotes","data","fetch","note","json","length","map","item","index","notes_title","notes_content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,qBAAhD;;;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBR,QAAQ,CAAC,EAAD,CAArC;;AAEA,QAAMS,WAAW,GAAG,YAAY;AAC5B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEV,OAAQ,YAAZ,CAAxB;AACA,UAAMW,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAL,IAAAA,WAAW,CAACI,IAAD,CAAX;AAEH,GALD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACD,WAAD,CAFM,CAAT;AAGA,sBAEI;AAAA,cACKD,KAAK,CAACO,MAAN,KAAiB,CAAjB,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArB,gBACD;AAAA,gBACCP,KAAK,CAACQ,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,4BACI;AAAK,UAAA,SAAS,EAAC,4CAAf;AAAA,kCACJ;AAAgB,YAAA,KAAK,EAAE;AAAC,2BAAc;AAAf,aAAvB;AAAA,sBAAkDD,IAAI,CAACE;AAAvD,aAASD,KAAT;AAAA;AAAA;AAAA;AAAA,kBADI,eAEJ;AAAI,YAAA,KAAK,EAAE;AAAC,uBAAU,KAAX;AAAkB,wBAAW;AAA7B;AAAX;AAAA;AAAA;AAAA;AAAA,kBAFI,eAGJ,QAAC,aAAD;AAAe,YAAA,SAAS,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAHI,eAIA,QAAC,UAAD;AACI,YAAA,KAAK,EAAC,QADV;AAEI,YAAA,QAAQ,EAAE,IAFd;AAGI,YAAA,OAAO,EAAEb,OAAO,CAAC,IAAD,CAHpB;AAII,YAAA,OAAO,EAAEC,OAJb;AAKI,YAAA,KAAK,EAAEW,IAAI,CAACG;AALhB;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAeH,OAhBA;AADD;AAFJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AA0BH,CAtCD;;GAAMb,O;;KAAAA,O;AAwCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { BaseUrl } from '../BaseUrl'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\n\n\nconst ViewAll = () => {\n    const [notes, setAllnotes] = useState([])\n\n    const getAllNotes = async () => {\n        const data = await fetch(`${BaseUrl}view-notes`)\n        const note = await data.json()\n        setAllnotes(note)\n       \n    }\n    useEffect(() => {\n        getAllNotes();\n    }, [setAllnotes])\n    return (\n        \n        <div>\n            {notes.length === 0 ? <h4>Oops. No notes here</h4> : \n            <>\n            {notes.map((item, index) => {\n                return(\n                    <div className='container shadow p-3 mb-5 bg-white rounded'>\n                <h2 key={index} style={{\"textAlign\" : \"center\"}}>{item.notes_title}</h2>\n                <hr style={{\"width\" : \"70%\", \"margin\" : \"auto\"}}/>\n                <EditorToolbar toolbarId={'t2'}/>\n                    <ReactQuill\n                        theme=\"bubble\"\n                        readOnly={true}\n                        modules={modules('t2')}\n                        formats={formats}\n                        value={item.notes_content}\n                        \n                        />\n                </div>\n                )\n            })}\n            </>}\n        </div>\n       \n    )\n}\n\nexport default ViewAll\n"]},"metadata":{},"sourceType":"module"}