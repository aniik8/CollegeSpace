{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/QnA.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Error from './Error';\nimport 'quill/dist/quill.bubble.css';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport UpdateQ from './UpdateQ';\nimport CreateAns from './CreateAns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QnA = () => {\n  _s();\n\n  const BaseUrl = `http://127.0.0.1:8000`;\n  const history = useHistory();\n  const [question, setQuestion] = useState([]);\n  const [clicked, setclicked] = useState({\n    clicked4ans: false,\n    clicked4update: false,\n    answered: false\n  });\n  useEffect(() => {\n    fetch(`${BaseUrl}${history.location.pathname}`).then(data => data.json()).then(response => setQuestion(response));\n  }, [setQuestion]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), typeof question[0] === \"undefined\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : question[1].length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: question.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: item.user === JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"#808080\"\n                  },\n                  children: item.question_date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 25\n                }, this), item.question !== undefined && item.user === JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-success\",\n                  onClick: () => setclicked({\n                    clicked4update: true\n                  }),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 29\n                }, this) : \"\"]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }, this)\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), question[1].map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [item.status === true ? setclicked({\n            answered: true\n          }) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.answer\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Answered on : \", item.answered_date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          width: \"75%\",\n          marginTop: '5%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: question.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [clicked.clicked4update === true ? /*#__PURE__*/_jsxDEV(UpdateQ, {\n                q: item.question,\n                qd: item.question_data,\n                qid: item.id,\n                qslug: item.slug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    textAlign: \"center\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: item.question\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 25\n                  }, this), item.question !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n                      toolbarId: 't1'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                      theme: \"bubble\",\n                      readOnly: true,\n                      value: item.question_data,\n                      modules: modules('t1'),\n                      formats: formats\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 29\n                    }, this), \" \"]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \" \"]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false), item.question !== undefined && item.user === JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-success\",\n                onClick: () => setclicked({\n                  clicked4update: true\n                }),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this) : \"\", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 26\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"No answer :-( .You haven't answered it yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Can you answer it?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: () => setclicked({\n          clicked4ans: true\n        }),\n        children: \"Answer it here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this), clicked.clicked4ans === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CreateAns, {\n          queid: question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          onClick: () => setclicked({\n            clicked4ans: false\n          }),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(QnA, \"4CUQinDkPaSZ0rU58kpNGVpaUFE=\", false, function () {\n  return [useHistory];\n});\n\n_c = QnA;\nexport default QnA;\n/* */\n\nvar _c;\n\n$RefreshReg$(_c, \"QnA\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/QnA.js"],"names":["React","useEffect","useState","useHistory","Navbar","Error","ReactQuill","EditorToolbar","modules","formats","UpdateQ","CreateAns","QnA","BaseUrl","history","question","setQuestion","clicked","setclicked","clicked4ans","clicked4update","answered","fetch","location","pathname","then","data","json","response","length","map","item","index","user","JSON","parse","atob","localStorage","getItem","split","user_id","color","question_date","undefined","status","answer","answered_date","width","marginTop","question_data","id","slug","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Navbar from './Navbar';\nimport Error from './Error';\nimport 'quill/dist/quill.bubble.css'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport UpdateQ from './UpdateQ';\nimport CreateAns from './CreateAns';\n\n\nconst QnA = () => {\n    const BaseUrl = `http://127.0.0.1:8000`\n    const history = useHistory();\n    const [question, setQuestion] = useState([])\n    const [clicked, setclicked] = useState({clicked4ans : false, clicked4update : false, answered : false});\n    useEffect(() => {\n        fetch(`${BaseUrl}${history.location.pathname}`)\n        .then((data)=> data.json())\n        .then((response)=> setQuestion(response)); \n    }, [setQuestion])\n\n    return (\n        <>\n        <Navbar/>\n        {typeof question[0] === \"undefined\" ? <>\n            <Error/>\n        </> : question[1].length !== 0 ? <div>\n            <h4>\n                {question.map((item, index)=> {\n                    return(<>\n                        <div key={index}>\n                        <>\n                        <h2>{(item.user === (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id))}</h2>\n                        <h4>{item.question}</h4>\n                        <p style={{color : \"#808080\"}}>{item.question_date}</p>\n                        {item.question !== undefined && item.user === (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id)\n                          ? \n                            <button type='button' className='btn btn-success' onClick={()=> setclicked({clicked4update:true})}>Update</button> : \"\" }\n                        </> \n                            \n                        </div>\n                    </>\n                    )\n                })}\n            </h4>\n            <hr/>\n            {question[1].map((item, index) => {\n                return(<>\n                {item.status === true ? setclicked({answered : true}) : <></>}\n                <div className='container'>\n                    <p key={index}>{item.answer}</p>\n                    <p>Answered on : {item.answered_date}</p>\n                </div>\n                </>\n                )\n            })}\n        </div> :\n         <>\n        <div className='container' style={{width : \"75%\", marginTop:'5%'}}>\n        <h4>\n                {question.map((item, index)=> {\n                    return(<>\n                   \n                        \n                        {clicked.clicked4update === true ?\n                        <UpdateQ q={item.question} qd={item.question_data} qid={item.id} qslug={item.slug}/> : \n                        <>\n                        <div key={index} style={{textAlign:\"center\"}}>\n                        <h2>{item.question}</h2>\n                        {item.question !== undefined ? <>\n                            <EditorToolbar toolbarId={'t1'}/>\n                            <ReactQuill\n                            theme=\"bubble\"\n                            readOnly={true}\n                            value={item.question_data}\n                            modules={modules('t1')}\n                            formats={formats}/> </>\n                        \n                        :<></>\n                         } </div>\n                        </>\n                        }\n                        {item.question !== undefined && item.user === (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id)\n                          ? \n                            <button type='button' className='btn btn-success' onClick={()=> setclicked({clicked4update:true})}>Update</button> : \"\" }\n                        \n                        \n                         <p>{item.user}</p>\n                        \n                    </>)\n                })}\n            </h4>\n            \n            <hr/>\n            </div>\n            <h5>No answer :-( .You haven't answered it yet</h5>\n            <p>Can you answer it?</p>\n            <button className='btn btn-success' onClick={() => setclicked({clicked4ans : true})}>Answer it here</button>\n            {clicked.clicked4ans === true ? \n            <>\n            <CreateAns queid={question}/>\n            <button type='submit' className='btn btn-outline-danger' onClick={() => setclicked({clicked4ans : false})}>Cancel</button>\n           </>\n           : <></>}\n            \n\n        </>}\n        </>\n    )\n}\n\nexport default QnA\n\n\n/* */"]},"metadata":{},"sourceType":"module"}