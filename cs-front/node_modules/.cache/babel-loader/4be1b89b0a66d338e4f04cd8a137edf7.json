{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BaseUrl from './BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateQ = props => {\n  _s();\n\n  const history = useHistory();\n  const url = `${BaseUrl}${history.location.pathname}`; //Set up the update method in both question and answer. \n  // Login and logout of a user \n  //checking if current user is the one updating/ writing the stuffs :-)\n\n  const [prevData, setprevData] = useState({\n    question: ''\n  });\n  useEffect(() => {\n    fetch(url).then(data => data.json).then(Response => setprevData({\n      question: Response\n    }));\n  }, [setprevData]);\n  console.log(prevData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        id: \"Editor\",\n        style: {\n          width: \"75%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n          toolbarId: 't1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          placeholder: \"Write something awesome...\",\n          modules: modules('t1'),\n          formats: formats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateQ, \"SXSqMxKDnrRn4Y8iES/EM8BQQLQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateQ;\nexport default UpdateQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateQ\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js"],"names":["React","useEffect","useState","BaseUrl","ReactQuill","EditorToolbar","modules","formats","useHistory","UpdateQ","props","history","url","location","pathname","prevData","setprevData","question","fetch","then","data","json","Response","console","log","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,kBAAhD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACnB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAMI,GAAG,GAAI,GAAET,OAAQ,GAAEQ,OAAO,CAACE,QAAR,CAAiBC,QAAS,EAAnD,CAFmB,CAGnB;AACA;AACA;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC;AAACe,IAAAA,QAAQ,EAAG;AAAZ,GAAD,CAAxC;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,KAAK,CAAEN,GAAF,CAAL,CAAaO,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACC,IAAjC,EAAuCF,IAAvC,CAA6CG,QAAD,IAAcN,WAAW,CAAC;AAACC,MAAAA,QAAQ,EAAGK;AAAZ,KAAD,CAArE;AACH,GAFQ,EAEN,CAACN,WAAD,CAFM,CAAT;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AAIJ,sBACI;AAAA,2BACE;AAAA,6BAEN;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,EAAE,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAG;AAAT,SAA9C;AAAA,gCACI,QAAC,aAAD;AAAe,UAAA,SAAS,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,MADV;AAGI,UAAA,WAAW,EAAE,4BAHjB;AAII,UAAA,OAAO,EAAEnB,OAAO,CAAC,IAAD,CAJpB;AAKI,UAAA,OAAO,EAAEC;AALb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,yBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARR,eASQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM;AADF;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAjCD;;GAAME,O;UACkBD,U;;;KADlBC,O;AAmCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport BaseUrl from './BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport {useHistory} from 'react-router-dom'\n\nconst UpdateQ = (props) => {\n        const history = useHistory();\n        const url = `${BaseUrl}${history.location.pathname}`\n        //Set up the update method in both question and answer. \n        // Login and logout of a user \n        //checking if current user is the one updating/ writing the stuffs :-)\n        const [prevData, setprevData] = useState({question : ''})\n        useEffect(() => {\n            fetch((url)).then((data) => data.json).then((Response) => setprevData({question : Response}))\n        }, [setprevData])\n        console.log(prevData)\n        \n            \n    \n    return (\n        <div>\n          <>\n    \n    <div className='container' id=\"Editor\" style={{width : \"75%\"}}> \n        <EditorToolbar toolbarId={'t1'}/>\n        <ReactQuill\n            theme=\"snow\"\n      \n            placeholder={\"Write something awesome...\"}\n            modules={modules('t1')}\n            formats={formats}/>\n            <button type='button' className='btn btn-outline-success'>Submit</button>\n            <button type='submit' className='btn btn-outline-danger'>Cancel</button>\n            </div>\n\n        </>  \n        </div>\n    )\n}\n\nexport default UpdateQ\n\n"]},"metadata":{},"sourceType":"module"}