{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport BaseUrl from './BaseUrl';\nimport { useEffect, useState } from 'react';\nimport Footer from './Footer';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [questions, setquestions] = React.useState([]);\n  const [isNull, setNull] = useState(false);\n  useEffect(() => {\n    fetch(`${BaseUrl}questions`).then(data => data.json()).then(response => setquestions(response));\n  }, [setquestions]);\n  const [clicked, setClicked] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        \"width\": \"50%\",\n        \"height\": \"50%\",\n        \"overflow\": \"auto\",\n        \"margin\": \"auto\",\n        \"position\": \"absolute\",\n        \"top\": '0',\n        \"left\": '0',\n        \"bottom\": '0',\n        \"right\": '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Recently asked questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success\",\n        onClick: () => setClicked(true),\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), clicked === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          id: \"Editor\",\n          style: {\n            width: \"75%\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n            toolbarId: 't1'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            theme: \"snow\",\n            placeholder: \"Write something awesome...\",\n            modules: modules('t1'),\n            formats: formats\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-success\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-outline-danger\",\n            onClick: () => setClicked(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          \"height\": \"2px\",\n          \"width\": \"100%\",\n          \"borderWidth\": \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-md\",\n        style: {\n          width: \"50$\"\n        },\n        children: questions.length !== 0 ? questions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/question/${item.slug}/${item.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.question_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data not available right now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"u4uRGwpEwbOTWqTLAbz6KNSN0kg=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js"],"names":["React","Navbar","BaseUrl","useEffect","useState","Footer","Link","Questions","questions","setquestions","isNull","setNull","fetch","then","data","json","response","clicked","setClicked","textAlign","width","modules","formats","length","map","item","index","slug","id","question","question_date"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport BaseUrl from './BaseUrl'\nimport { useEffect, useState } from 'react'\nimport Footer from './Footer'\nimport { Link } from 'react-router-dom'\nconst Questions = () => {\n    const [questions, setquestions]  = React.useState([])\n    const [isNull, setNull] = useState(false)\n    useEffect(()=>{\n        fetch(`${BaseUrl}questions`)\n        .then((data) => data.json()).then((response)=> setquestions(response))}, [setquestions])\n        \n    const [clicked, setClicked] = useState(false);\n    return (\n        <>\n        <Navbar/>\n        <div className='container' style={{\"width\": \"50%\",\n            \"height\": \"50%\",\n            \"overflow\": \"auto\",\n            \"margin\": \"auto\",\n            \"position\": \"absolute\",\n            \"top\": '0',\"left\": '0', \"bottom\": '0', \"right\": '0'}}>\n            <h1 style={{textAlign:\"center\"}}>Recently asked questions</h1>\n            <button type='button' className='btn btn-outline-success' onClick={() => setClicked(true)}>Ask Question</button>\n            {clicked === true ? \n                <>\n                <div className='container' id=\"Editor\" style={{width : \"75%\"}}> \n                    <EditorToolbar toolbarId={'t1'}/>\n                    <ReactQuill theme=\"snow\"\n                        placeholder={\"Write something awesome...\"}\n                        modules={modules('t1')}\n                        formats={formats} />\n                    <button type='button' className='btn btn-outline-success'>Submit</button>\n                    <button type='submit' className='btn btn-outline-danger' onClick={() => setClicked(false)}>Cancel</button>\n                </div>\n\n            </>:\n            <></>\n         }\n            <hr style={{\"height\":\"2px\", \"width\":\"100%\", \"borderWidth\":\"0\"}} />\n\n            {/*style={{display: 'inline-block', width: \"calc((100% - 0.1em)/2), \"}}*/}\n            <div className='container-md' style={{width:\"50$\"}}>\n           {((questions.length) !== 0) ? questions.map((item, index)=> \n           {\n               return(\n                   <> \n                    <div key={index}>\n                        <Link to={`/question/${item.slug}/${item.id}`}><h3>{item.question}</h3></Link>\n                        <p>{item.question_date}</p>\n                    </div>\n                    </>\n                    )\n            })\n           : <h4>Data not available right now</h4>}\n           </div>\n\n        </div>\n        \n        \n        </>\n    )\n}\n\nexport default Questions\n"]},"metadata":{},"sourceType":"module"}