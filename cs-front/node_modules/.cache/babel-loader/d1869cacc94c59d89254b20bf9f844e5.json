{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewSNote.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../Navbar';\nimport { useHistory } from 'react-router-dom';\nimport { BaseUrl } from '../BaseUrl';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nimport UpdateN from './UpdateN';\nimport DeleteN from './DeleteN';\nimport Error from '../Error';\nimport UserDet from './UserDet';\nimport PrintN from './PrintN';\nimport { useRef } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport ReactToPrint from 'react-to-print';\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewSNote = /*#__PURE__*/_s( /*#__PURE__*/React.forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const history = useHistory();\n  const [notes, setnotes] = useState([]);\n  const [showupdate, setupdate] = useState({\n    update: false,\n    delete: false,\n    s: false\n  });\n\n  const getNotes = async () => {\n    const data = await fetch(`${BaseUrl}view-notes${history.location.pathname}`);\n    const note = await data.json();\n    setnotes(note);\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, [setnotes]); // const inputRef = useRef(null);\n  // const printNotes = () => {\n  //     htmlToImage.toPng(document.getElementById('printNote'), { quality: 0.95 })\n  //     .then(function (dataUrl) {\n  //       var link = document.createElement('a');\n  //       link.download = 'my-image-name.jpeg';\n  //       const pdf = new jsPDF();\n  //       const imgProps= pdf.getImageProperties(dataUrl);\n  //       const pdfWidth = pdf.internal.pageSize.getWidth();\n  //       const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n  //       pdf.addImage(dataUrl, 'PNG', 0, 0,pdfWidth, pdfHeight);\n  //       pdf.save(\"download.pdf\"); \n  //     });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row row-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6 offset-md-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-md\",\n            style: {\n              \"marginTop\": \"3rem\",\n              \"width\": \"100%\"\n            },\n            children: typeof notes !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"printNote\",\n              ref: ref,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  \"textAlign\": \"center\"\n                },\n                children: notes.notes_title\n              }, notes.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), notes.user === JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id ? /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  \"textAlign\": \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-primary\",\n                  style: {\n                    \"width\": \"20%\",\n                    \"marginRight\": \"10%\"\n                  },\n                  onClick: () => setupdate({\n                    update: true\n                  }),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-outline-danger\",\n                  style: {\n                    \"width\": \"20%\",\n                    \"margin\": \"auto\"\n                  },\n                  onClick: () => setupdate({\n                    delete: true\n                  }),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  \"textAlign\": \"center\"\n                },\n                children: [\"Posted On : \", Date(notes.created).substr(0, 16)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n                style: {\n                  \"width\": \"70%\",\n                  \"margin\": \"auto\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n                toolbarId: 't2'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n                theme: \"bubble\",\n                readOnly: true,\n                modules: modules('t2'),\n                formats: formats,\n                value: notes.notes_content,\n                style: {\n                  \"marginLeft\": \"auto\",\n                  \"marginRight\": \"auto\",\n                  \"marginTop\": \"2rem\",\n                  \"width\": \"100%\",\n                  \"fontFamily\": \"serif\",\n                  \"fontSize\": \"16px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 16\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          style: {\n            \"marginTop\": \"130px\"\n          },\n          children: typeof notes !== \"undefined\" ? /*#__PURE__*/_jsxDEV(UserDet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 45\n          }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \" No data available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, this), showupdate.update === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(UpdateN, {\n            note_t: notes.notes_title,\n            note_con: notes.notes_content,\n            show: true,\n            user_id: notes.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), showupdate.delete === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(DeleteN, {\n            del: true,\n            id: notes.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"e7mWOTcoCnEqRqLGrhM2DXZVQFA=\", false, function () {\n  return [useHistory];\n})), \"e7mWOTcoCnEqRqLGrhM2DXZVQFA=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = ViewSNote;\n\nconst Example = () => {\n  _s2();\n\n  const componentRef = useRef();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactToPrint, {\n      trigger: () => /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Print this out!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 26\n      }, this),\n      content: () => componentRef.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ViewSNote, {\n      ref: componentRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n\n_s2(Example, \"SC7b5B7892OPZKFrZwwSQVtw2PY=\");\n\n_c3 = Example;\nexport { ViewSNote, Example };\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ViewSNote$React.forwardRef\");\n$RefreshReg$(_c2, \"ViewSNote\");\n$RefreshReg$(_c3, \"Example\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/NotesCom/ViewSNote.js"],"names":["React","useEffect","useState","Navbar","useHistory","BaseUrl","ReactQuill","EditorToolbar","modules","formats","UpdateN","DeleteN","Error","UserDet","PrintN","useRef","jsPDF","ReactToPrint","htmlToImage","toPng","toJpeg","toBlob","toPixelData","toSvg","ViewSNote","forwardRef","props","ref","history","notes","setnotes","showupdate","setupdate","update","delete","s","getNotes","data","fetch","location","pathname","note","json","undefined","notes_title","id","user","JSON","parse","atob","localStorage","getItem","split","user_id","Date","created","substr","notes_content","Example","componentRef","current"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Navbar from '../Navbar'\nimport {useHistory} from 'react-router-dom'\nimport { BaseUrl } from '../BaseUrl'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from '../../EditorToolbar';\nimport UpdateN from './UpdateN';\nimport DeleteN from './DeleteN';\nimport Error from '../Error';\nimport UserDet from './UserDet';\nimport PrintN from './PrintN';\nimport { useRef } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport ReactToPrint from 'react-to-print';\n\nimport * as htmlToImage from 'html-to-image';\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\n\n\n\nconst ViewSNote = React.forwardRef((props, ref) => {\n   const  history = useHistory()\n    const [notes, setnotes] = useState([])\n    \n    const [showupdate, setupdate] = useState({update : false, delete : false, s : false})\n    const getNotes = async () => {\n        const data = await fetch(`${BaseUrl}view-notes${history.location.pathname}`)\n        const note = await data.json()\n        setnotes(note)\n       }\n    useEffect(() => {\n        getNotes();\n    }, [setnotes])\n    // const inputRef = useRef(null);\n    // const printNotes = () => {\n    //     htmlToImage.toPng(document.getElementById('printNote'), { quality: 0.95 })\n    //     .then(function (dataUrl) {\n    //       var link = document.createElement('a');\n    //       link.download = 'my-image-name.jpeg';\n    //       const pdf = new jsPDF();\n    //       const imgProps= pdf.getImageProperties(dataUrl);\n    //       const pdfWidth = pdf.internal.pageSize.getWidth();\n    //       const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;\n    //       pdf.addImage(dataUrl, 'PNG', 0, 0,pdfWidth, pdfHeight);\n    //       pdf.save(\"download.pdf\"); \n    //     });\n    // }\n  \n  \n    return (\n        <>\n        <Navbar/>\n        <div className='container'>\n        <div className='row row-fluid'>\n        \n        <div className='col-lg-6 offset-md-3' >\n        <div className='container-md' style={{\"marginTop\" : \"3rem\", \"width\" : \"100%\"}}>\n        \n        {typeof notes !== undefined ?\n            <div id=\"printNote\" ref={ref}>\n                <h1 key={notes.id} style={{\"textAlign\" : \"center\"}}>{notes.notes_title}</h1>\n                \n                <br/>\n                {notes.user === (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id) ?\n                <p style={{\"textAlign\" : \"center\"}}>\n                <button className='btn btn-outline-primary' style={{\"width\": \"20%\", \"marginRight\" : \"10%\"}} onClick={() => setupdate({update:true})}>Update</button>\n                <button className='btn btn-outline-danger' style={{\"width\": \"20%\", \"margin\" : \"auto\"}} onClick={() => setupdate({ delete : true})}>Delete</button>\n                \n                </p> : <></>}\n                <p style={{\"textAlign\":\"center\"}}>Posted On : {Date(notes.created).substr(0,16)}</p>\n                \n                <hr style={{\"width\" : \"70%\", \"margin\" : \"auto\"}}/>\n                \n                <EditorToolbar toolbarId={'t2'}/>\n                    <ReactQuill\n                        theme=\"bubble\"\n                        readOnly={true}\n                        modules={modules('t2')}\n                        formats={formats}\n                        value={notes.notes_content}\n                        style={{\"marginLeft\" : \"auto\", \"marginRight\" : \"auto\", \"marginTop\" : \"2rem\", \"width\" : \"100%\", \"fontFamily\" : \"serif\", \"fontSize\" : \"16px\"}}\n                    />\n                {/* <button className='btn btn-outline-success' onClick={printNotes} style={{\"width\" : \"100%\"}}>Print</button> */}\n            </div>\n         : <h5><Error/></h5>}\n        </div>\n        </div>\n        \n        <div className='col' style={{\"marginTop\" : \"130px\"}}>\n            {typeof notes !== \"undefined\" ? <UserDet/> : <h5> No data available</h5>}\n        </div>\n        {showupdate.update === true ?<>\n            <UpdateN note_t = {notes.notes_title} note_con={notes.notes_content} show={true} user_id={notes.user}/>\n        </> :<></> }\n        {showupdate.delete === true ?<>\n            <DeleteN del={true} id={notes.id}/>\n        </> :<></> }\n        </div>\n        </div>\n        </>\n    )\n}\n)\nconst Example = () => {\n    const componentRef = useRef();\n  \n    return (\n      <div>\n      <h1>Hm</h1>\n        <ReactToPrint\n          trigger={() => <button>Print this out!</button>}\n          content={() => componentRef.current}\n        />\n        <ViewSNote ref={componentRef} />\n      </div>\n    );\n  };\n\nexport {ViewSNote, Example}\n"]},"metadata":{},"sourceType":"module"}