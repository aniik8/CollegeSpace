{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Chatroom/Chat.js\";\n// import React, { useEffect, useState } from 'react'\n// import { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\n// import Button from '@material-ui/core/Button';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import TextField from '@material-ui/core/TextField';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\n// import Typography from '@material-ui/core/Typography';\n// import Container from '@material-ui/core/Container';\n// import Card from '@material-ui/core/Card';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import Paper from '@material-ui/core/Paper';\n// import Avatar from '@material-ui/core/Avatar';\n// import { useTheme } from '@material-ui/core/styles';\n// import { withStyles } from \"@material-ui/core/styles\";\n// const Chat = () => {\n//   const theme = useTheme();\n//     const [chatState, setChatstate] = useState({\n//         messages : [],\n//         value : '',\n//         name : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id),\n//         room : ''\n//     })\n//     const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + chatState.room + {chatState.room === '' ? ' ' : '/' });\n//     const [clicked, setclicked] = useState(false)\n//     const getData = () => {\n//         client.onmessage = (message) => {\n//             const datafromserver = JSON.parse(message.data);\n//             console.log(datafromserver);\n//             // if(datafromserver){\n//             //     setChatstate({\n//             //         messages : \n//             //         [...chatState.messages,\n//             //         {\n//             //             msg : datafromserver.message,\n//             //             name : datafromserver.name\n//             //         }\n//             //     ]})\n//             // }\n//         }\n//     }\n//     useEffect(() => {\n//         getData();\n//     }, [clicked])\n//     const onButtonClicked = (e) => {\n//         client.send(JSON.stringify({\n//             type : \"message\",\n//             message : chatState.messages,\n//             name : JSON.parse(atob(localStorage.getItem('access_token').split('.')[1]).user_id)\n//         }));\n//         chatState.value = ''\n//     }\n//     return (\n//         <>\n//           <Container component=\"main\" maxWidth=\"xs\">\n//               {clicked === true ?\n//               <div style={{ marginTop : 50}}>\n//                   Room name : {chatState.room}\n//                   <Paper style={{ height: 500, maxHeight: 500, overflow: 'auto', boxShadow: 'none', }}>\n//                   {/* {chatState.messages.map((item, index) => {\n//                     <Card style={{boxShadow: 'none'}}>\n//                   <CardHeader\n//                     avatar={\n//                       <Avatar style={{margin: theme.spacing(1), backgroundColor: theme.palette.secondary.main}}>\n//                         R\n//                   </Avatar>\n//                     }\n//                     title={chatState.messages.name}\n//                     subheader={chatState.messages.msg}\n//                   />\n//                 </Card>\n//                   } )} */}\n//                   </Paper> \n//                   <form style={{width: '100%', // Fix IE 11 issue.\n//       marginTop: theme.spacing(1)}} noValidate onSubmit={onButtonClicked}>\n//               <TextField\n//                 id=\"outlined-helperText\"\n//                 label=\"Make a comment\"\n//                 defaultValue=\"Default Value\"\n//                 variant=\"outlined\"\n//                 value={chatState.value}\n//                 fullWidth\n//                 onChange={e => {\n//                   setChatstate({ value : e.target.value})\n//                  }}\n//               />\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 className='Button'\n//               >\n//                 Start Chatting\n//                 </Button>\n//             </form>  \n//               </div> \n//               :<>\n//               <CssBaseline />\n//               <div style={{ marginTop: theme.spacing(8),display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n//               <Typography component=\"h1\" variant=\"h5\">\n//                 CollegeSpace Chatroom\n//                 </Typography>\n//                 <form noValidate onSubmit={() => setclicked(true)}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   margin=\"normal\"\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Chatroom Name\"\n//                   name=\"Chatroom Name\"\n//                   autoFocus\n//                   value={chatState.room}\n//                   onChange={e => {\n//                     setChatstate({ room: e.target.value });\n//                   }}\n//                 />\n//                 <Button\n//                   type=\"submit\"\n//                   fullWidth\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   className=\"Button\"\n//                 >\n//                   Start Chatting\n//                   </Button>\n//                 </form>\n//               </div>\n//               </>}\n//           </Container>  \n//         </>\n//     )\n// }\n// export default Chat\nimport React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  root: {\n    boxShadow: 'none'\n  }\n});\n\nclass Chat extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isLoggedIn: false,\n      messages: [],\n      value: '',\n      name: '',\n      room: 'vacad'\n    };\n    this.client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + this.state.room + '/');\n\n    this.onButtonClicked = e => {\n      this.client.send(JSON.stringify({\n        type: \"message\",\n        message: this.state.value,\n        name: this.state.name\n      }));\n      this.state.value = '';\n      e.preventDefault();\n    };\n  }\n\n  componentDidMount() {\n    this.client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    this.client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('got reply! ', dataFromServer.type);\n\n      if (dataFromServer) {\n        this.setState(state => ({\n          messages: [...state.messages, {\n            msg: dataFromServer.message,\n            name: dataFromServer.name\n          }]\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: this.state.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 50\n        },\n        children: [\"Room Name: \", this.state.room, /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: 500,\n            maxHeight: 500,\n            overflow: 'auto',\n            boxShadow: 'none'\n          },\n          children: this.state.messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              children: /*#__PURE__*/_jsxDEV(CardHeader, {\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  className: classes.avatar,\n                  children: \"R\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this),\n                title: message.name,\n                subheader: message.msg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          noValidate: true,\n          onSubmit: this.onButtonClicked,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-helperText\",\n            label: \"Make a comment\",\n            variant: \"outlined\",\n            value: this.state.value,\n            fullWidth: true,\n            onChange: e => {\n              this.setState({\n                value: e.target.value\n              });\n              this.value = this.state.value;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Start Chatting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.paper,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"ChattyRooms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            noValidate: true,\n            onSubmit: value => this.setState({\n              isLoggedIn: true\n            }),\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Chatroom Name\",\n              name: \"Chatroom Name\",\n              autoFocus: true,\n              value: this.state.room,\n              onChange: e => {\n                this.setState({\n                  room: e.target.value\n                });\n                this.value = this.state.room;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              fullWidth: true,\n              name: \"Username\",\n              label: \"Username\",\n              type: \"Username\",\n              id: \"Username\",\n              value: this.state.name,\n              onChange: e => {\n                this.setState({\n                  name: e.target.value\n                });\n                this.value = this.state.name;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.submit,\n              children: \"Start Chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"#\",\n                  variant: \"body2\",\n                  children: \"Forgot password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: \"#\",\n                  variant: \"body2\",\n                  children: \"Don't have an account? Sign Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Chat);","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Chatroom/Chat.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Button","CssBaseline","TextField","Link","Grid","Typography","Container","Card","CardHeader","Paper","Avatar","withStyles","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","root","boxShadow","Chat","state","isLoggedIn","messages","value","name","room","client","onButtonClicked","e","send","JSON","stringify","type","message","preventDefault","componentDidMount","onopen","console","log","onmessage","dataFromServer","parse","data","setState","msg","render","classes","props","height","maxHeight","overflow","map","target"],"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","sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import { client, w3cwebsocket as W3CWebSocket } from \"websocket\";\n// import Button from '@material-ui/core/Button';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import TextField from '@material-ui/core/TextField';\n// import Link from '@material-ui/core/Link';\n// import Grid from '@material-ui/core/Grid';\n// import Typography from '@material-ui/core/Typography';\n// import Container from '@material-ui/core/Container';\n// import Card from '@material-ui/core/Card';\n// import CardHeader from '@material-ui/core/CardHeader';\n// import Paper from '@material-ui/core/Paper';\n// import Avatar from '@material-ui/core/Avatar';\n// import { useTheme } from '@material-ui/core/styles';\n\n// import { withStyles } from \"@material-ui/core/styles\";\n\n\n// const Chat = () => {\n//   const theme = useTheme();\n    \n//     const [chatState, setChatstate] = useState({\n//         messages : [],\n//         value : '',\n//         name : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id),\n//         room : ''\n//     })\n//     const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + chatState.room + {chatState.room === '' ? ' ' : '/' });\n//     const [clicked, setclicked] = useState(false)\n    \n\n//     const getData = () => {\n//         client.onmessage = (message) => {\n//             const datafromserver = JSON.parse(message.data);\n//             console.log(datafromserver);\n//             // if(datafromserver){\n//             //     setChatstate({\n//             //         messages : \n//             //         [...chatState.messages,\n//             //         {\n//             //             msg : datafromserver.message,\n//             //             name : datafromserver.name\n//             //         }\n//             //     ]})\n//             // }\n//         }\n//     }\n//     useEffect(() => {\n//         getData();\n//     }, [clicked])\n//     const onButtonClicked = (e) => {\n//         client.send(JSON.stringify({\n//             type : \"message\",\n//             message : chatState.messages,\n//             name : JSON.parse(atob(localStorage.getItem('access_token').split('.')[1]).user_id)\n//         }));\n//         chatState.value = ''\n        \n//     }\n//     return (\n//         <>\n//           <Container component=\"main\" maxWidth=\"xs\">\n//               {clicked === true ?\n//               <div style={{ marginTop : 50}}>\n//                   Room name : {chatState.room}\n//                   <Paper style={{ height: 500, maxHeight: 500, overflow: 'auto', boxShadow: 'none', }}>\n//                   {/* {chatState.messages.map((item, index) => {\n//                     <Card style={{boxShadow: 'none'}}>\n//                   <CardHeader\n//                     avatar={\n//                       <Avatar style={{margin: theme.spacing(1), backgroundColor: theme.palette.secondary.main}}>\n//                         R\n//                   </Avatar>\n//                     }\n//                     title={chatState.messages.name}\n//                     subheader={chatState.messages.msg}\n//                   />\n//                 </Card>\n//                   } )} */}\n//                   </Paper> \n//                   <form style={{width: '100%', // Fix IE 11 issue.\n//       marginTop: theme.spacing(1)}} noValidate onSubmit={onButtonClicked}>\n//               <TextField\n//                 id=\"outlined-helperText\"\n//                 label=\"Make a comment\"\n//                 defaultValue=\"Default Value\"\n//                 variant=\"outlined\"\n//                 value={chatState.value}\n//                 fullWidth\n//                 onChange={e => {\n//                   setChatstate({ value : e.target.value})\n//                  }}\n//               />\n//               <Button\n//                 type=\"submit\"\n//                 fullWidth\n//                 variant=\"contained\"\n//                 color=\"primary\"\n//                 className='Button'\n//               >\n//                 Start Chatting\n//                 </Button>\n//             </form>  \n//               </div> \n//               :<>\n//               <CssBaseline />\n//               <div style={{ marginTop: theme.spacing(8),display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n//               <Typography component=\"h1\" variant=\"h5\">\n//                 CollegeSpace Chatroom\n//                 </Typography>\n//                 <form noValidate onSubmit={() => setclicked(true)}>\n//                 <TextField\n//                   variant=\"outlined\"\n//                   margin=\"normal\"\n//                   required\n//                   fullWidth\n//                   id=\"email\"\n//                   label=\"Chatroom Name\"\n//                   name=\"Chatroom Name\"\n//                   autoFocus\n//                   value={chatState.room}\n//                   onChange={e => {\n//                     setChatstate({ room: e.target.value });\n                    \n//                   }}\n//                 />\n//                 <Button\n//                   type=\"submit\"\n//                   fullWidth\n//                   variant=\"contained\"\n//                   color=\"primary\"\n//                   className=\"Button\"\n//                 >\n//                   Start Chatting\n//                   </Button>\n//                 </form>\n\n//               </div>\n//               </>}\n//           </Container>  \n//         </>\n//     )\n// }\n\n// export default Chat\n\nimport React, { Component } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  root: {\n    boxShadow: 'none',\n  }\n});\n\nclass Chat extends Component {\n\n  state = {\n    isLoggedIn: false,\n    messages: [],\n    value: '',\n    name: '',\n    room: 'vacad',\n  }\n\n  client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/' + this.state.room + '/');\n\n  onButtonClicked = (e) => {\n    this.client.send(JSON.stringify({\n      type: \"message\",\n      message: this.state.value,\n      name: this.state.name\n    }));\n    this.state.value = ''\n    e.preventDefault();\n  }\n\n  componentDidMount() {\n    this.client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n    this.client.onmessage = (message) => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('got reply! ', dataFromServer.type);\n      if (dataFromServer) {\n        this.setState((state) =>\n          ({\n            messages: [...state.messages,\n            {\n              msg: dataFromServer.message,\n              name: dataFromServer.name,\n            }]\n          })\n        );\n      }\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        {this.state.isLoggedIn ?\n          <div style={{ marginTop: 50, }}>\n            Room Name: {this.state.room}\n            <Paper style={{ height: 500, maxHeight: 500, overflow: 'auto', boxShadow: 'none', }}>\n              {this.state.messages.map(message => <>\n                <Card className={classes.root}>\n                  <CardHeader\n                    avatar={\n                      <Avatar className={classes.avatar}>\n                        R\n                  </Avatar>\n                    }\n                    title={message.name}\n                    subheader={message.msg}\n                  />\n                </Card>\n              </>)}\n            </Paper>\n\n            <form className={classes.form} noValidate onSubmit={this.onButtonClicked}>\n              <TextField\n                id=\"outlined-helperText\"\n                label=\"Make a comment\"\n               \n                variant=\"outlined\"\n                value={this.state.value}\n                fullWidth\n                onChange={e => {\n                  this.setState({ value: e.target.value });\n                  this.value = this.state.value;\n                }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Start Chatting\n                </Button>\n            </form>\n          </div>\n          :\n          <div>\n            <CssBaseline />\n            <div className={classes.paper}>\n              <Typography component=\"h1\" variant=\"h5\">\n                ChattyRooms\n                </Typography>\n              <form className={classes.form} noValidate onSubmit={value => this.setState({ isLoggedIn: true })}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Chatroom Name\"\n                  name=\"Chatroom Name\"\n                  autoFocus\n                  value={this.state.room}\n                  onChange={e => {\n                    this.setState({ room: e.target.value });\n                    this.value = this.state.room;\n                  }}\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"Username\"\n                  label=\"Username\"\n                  type=\"Username\"\n                  id=\"Username\"\n                  value={this.state.name}\n                  onChange={e => {\n                    this.setState({ name: e.target.value });\n                    this.value = this.state.name;\n                  }}\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  Start Chatting\n                  </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                      </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link href=\"#\" variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </div>\n          </div>}\n      </Container>\n    )\n\n  }\n}\n\nexport default withStyles(useStyles)(Chat)\n"]},"metadata":{},"sourceType":"module"}