{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport Modal from '@material-ui/core/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateQ = props => {\n  _s();\n\n  const [ques, setques] = useState(props.q);\n  const [open, setOpen] = React.useState(props.clickeed);\n\n  const handleClose = () => {\n    setOpen(false);\n    window.location.reload();\n  };\n\n  const [ques_dta, setques_dta] = useState(props.qd);\n\n  const sendData = () => {\n    axiosInstance.post(`update-question/${props.qslug}/${props.qid}`, {\n      question: ques,\n      question_data: ques_dta,\n      user: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n    }).then(res => {\n      alert(\"Updated\");\n      window.location.reload();\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.q !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'block',\n          padding: 30\n        },\n        className: \"shadow p-3 mb-5 bg-white rounded\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          onClose: handleClose,\n          open: open,\n          style: {\n            position: 'absolute',\n            border: \"1px solid\",\n            boxShadow: '3px #888888',\n            height: \"80%\",\n            width: \"70%\",\n            margin: 'auto',\n            backgroundColor: \"white\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container shadow p-3 mb-5 bg-white rounded\",\n            style: {\n              \"height\": \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                \"textAlign\": \"center\",\n                \"fontFamily\": \"serif\"\n              },\n              children: \"Update your Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => {\n                e.preventDefault();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group form-group-lg\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    \"fontSize\": \"10px\"\n                  },\n                  htmlFor: \"exampleInputPassword1\",\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"q_title\",\n                  style: {\n                    \"height\": \"30px\"\n                  },\n                  value: ques,\n                  onChange: e => setques(e.target.value),\n                  className: \"form-control input-lg\",\n                  id: \"exampleInputPassword1\",\n                  placeholder: \"Note Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Additional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n              className: \"Editor-1\",\n              toolbarId: 't9'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n              theme: \"snow\",\n              modules: modules('t9'),\n              formats: formats,\n              style: {\n                \"height\": \"40%\"\n              },\n              value: ques_dta,\n              onChange: event => setques_dta(event)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-primary\",\n              style: {\n                \"width\": \"48%\"\n              },\n              onClick: sendData,\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-outline-danger\",\n              style: {\n                \"marginLeft\": \"4%\",\n                \"width\": \"48%\"\n              },\n              onClick: handleClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Not available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UpdateQ, \"rCrVcd3RiuLdm6nB+D0cvs3t6Ow=\");\n\n_c = UpdateQ;\nexport default UpdateQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateQ\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js"],"names":["React","useState","ReactQuill","EditorToolbar","modules","formats","axiosInstance","Modal","UpdateQ","props","ques","setques","q","open","setOpen","clickeed","handleClose","window","location","reload","ques_dta","setques_dta","qd","sendData","post","qslug","qid","question","question_data","user","JSON","parse","atob","localStorage","getItem","split","user_id","then","res","alert","catch","err","console","log","undefined","display","padding","position","border","boxShadow","height","width","margin","backgroundColor","e","preventDefault","target","value","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,kBAAhD;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACQ,KAAK,CAACG,CAAP,CAAhC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACC,QAAN,CAAeQ,KAAK,CAACM,QAArB,CAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAG,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAHH;;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACQ,KAAK,CAACa,EAAP,CAAxC;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACnBjB,IAAAA,aAAa,CAACkB,IAAd,CAAoB,mBAAkBf,KAAK,CAACgB,KAAM,IAAGhB,KAAK,CAACiB,GAAI,EAA/D,EAAkE;AAC9DC,MAAAA,QAAQ,EAAGjB,IADmD;AAE9DkB,MAAAA,aAAa,EAAGR,QAF8C;AAG9DS,MAAAA,IAAI,EAAIC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAD,CAAf,EAAqEC;AAHf,KAAlE,EAIGC,IAJH,CAISC,GAAD,IAAQ;AAACC,MAAAA,KAAK,CAAC,SAAD,CAAL;AAAkBtB,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAAyB,KAJ5D,EAI8DqB,KAJ9D,CAIqEC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJ7E;AAKH,GAND;;AAOA,sBACA;AAAA,cACEhC,KAAK,CAACG,CAAN,KAAYgC,SAAZ,gBACF;AAAA,6BACA;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,OAAX;AAAoBC,UAAAA,OAAO,EAAE;AAA7B,SAAZ;AAA+C,QAAA,SAAS,EAAC,kCAAzD;AAAA,+BACQ,QAAC,KAAD;AACI,UAAA,OAAO,EAAE9B,WADb;AAEI,UAAA,IAAI,EAAEH,IAFV;AAGI,UAAA,KAAK,EAAE;AAAEkC,YAAAA,QAAQ,EAAE,UAAZ;AAAwBC,YAAAA,MAAM,EAAE,WAAhC;AAA6CC,YAAAA,SAAS,EAAE,aAAxD;AAAuEC,YAAAA,MAAM,EAAC,KAA9E;AAAqFC,YAAAA,KAAK,EAAE,KAA5F;AAAmGC,YAAAA,MAAM,EAAE,MAA3G;AAAkHC,YAAAA,eAAe,EAAG;AAApI,WAHX;AAAA,iCAII;AAAK,YAAA,SAAS,EAAC,4CAAf;AAA4D,YAAA,KAAK,EAAE;AAAC,wBAAW;AAAZ,aAAnE;AAAA,oCACA;AAAI,cAAA,KAAK,EAAE;AAAC,6BAAc,QAAf;AAAyB,8BAAe;AAAxC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGJ;AAAM,cAAA,QAAQ,EAAGC,CAAD,IAAO;AAACA,gBAAAA,CAAC,CAACC,cAAF;AAAqB,eAA7C;AAAA,qCAEI;AAAK,gBAAA,SAAS,EAAC,0BAAf;AAAA,wCACI;AAAO,kBAAA,KAAK,EAAE;AAAC,gCAAa;AAAd,mBAAd;AAAqC,kBAAA,OAAO,EAAC,uBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,SAAxB;AAAkC,kBAAA,KAAK,EAAE;AAAC,8BAAW;AAAZ,mBAAzC;AAA8D,kBAAA,KAAK,EAAE7C,IAArE;AAA2E,kBAAA,QAAQ,EAAG4C,CAAD,IAAO3C,OAAO,CAAC2C,CAAC,CAACE,MAAF,CAASC,KAAV,CAAnG;AACE,kBAAA,SAAS,EAAC,uBADZ;AAEC,kBAAA,EAAE,EAAC,uBAFJ;AAE4B,kBAAA,WAAW,EAAC;AAFxC;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,oBAHI,eAYA;AAAA;AAAA;AAAA;AAAA,oBAZA,eAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbA,eAeA,QAAC,aAAD;AAAe,cAAA,SAAS,EAAC,UAAzB;AAAoC,cAAA,SAAS,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAfA,eAgBI,QAAC,UAAD;AACA,cAAA,KAAK,EAAC,MADN;AAEA,cAAA,OAAO,EAAErD,OAAO,CAAC,IAAD,CAFhB;AAGA,cAAA,OAAO,EAAEC,OAHT;AAIA,cAAA,KAAK,EAAE;AAAC,0BAAW;AAAZ,eAJP;AAKA,cAAA,KAAK,EAAEe,QALP;AAKiB,cAAA,QAAQ,EAAGsC,KAAD,IAAWrC,WAAW,CAACqC,KAAD;AALjD;AAAA;AAAA;AAAA;AAAA,oBAhBJ,eAuBI;AAAA;AAAA;AAAA;AAAA,oBAvBJ,eAwBA;AAAQ,cAAA,SAAS,EAAC,yBAAlB;AAA4C,cAAA,KAAK,EAAE;AAAC,yBAAU;AAAX,eAAnD;AAAsE,cAAA,OAAO,EAAEnC,QAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBA,eAyBA;AAAQ,cAAA,SAAS,EAAC,wBAAlB;AAA2C,cAAA,KAAK,EAAE;AAAC,8BAAe,IAAhB;AAAsB,yBAAU;AAAhC,eAAlD;AAA0F,cAAA,OAAO,EAAEP,WAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA;AADA,qBADE,gBAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCF,mBADA;AA4CH,CA7DD;;GAAMR,O;;KAAAA,O;AAgEN,eAAeA,OAAf","sourcesContent":["import React, {useState } from 'react'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport Modal from '@material-ui/core/Modal';\n\nconst UpdateQ = (props) => {\n    const [ques, setques] = useState(props.q)\n    const [open, setOpen] = React.useState(props.clickeed);\n\n    const handleClose = () => {\n        setOpen(false);\n        window.location.reload();\n      };\n    const [ques_dta, setques_dta] = useState(props.qd)\n    \n    const sendData = () => {\n        axiosInstance.post(`update-question/${props.qslug}/${props.qid}`, {\n            question : ques,\n            question_data : ques_dta ,\n            user : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id)\n        }).then((res) =>{alert(\"Updated\"); window.location.reload()}).catch((err) => console.log(err))\n    }\n    return(\n    <>\n    { props.q !== undefined ? \n    <>\n    <div style={{ display: 'block', padding: 30 }} className='shadow p-3 mb-5 bg-white rounded'>\n            <Modal\n                onClose={handleClose}\n                open={open}\n                style={{ position: 'absolute', border: \"1px solid\", boxShadow: '3px #888888', height:\"80%\", width: \"70%\", margin: 'auto',backgroundColor : \"white\"}}>\n                <div className='container shadow p-3 mb-5 bg-white rounded' style={{\"height\" : \"100%\"}}>\n                <h2 style={{\"textAlign\" : \"center\", \"fontFamily\" : \"serif\"}}>Update your Question</h2>\n                <br/>\n            <form onSubmit={(e) => {e.preventDefault(); }}>\n                \n                <div className=\"form-group form-group-lg\">\n                    <label style={{\"fontSize\" : \"10px\"}} htmlFor=\"exampleInputPassword1\">Title</label>\n                    <input type=\"text\" name='q_title' style={{\"height\" : \"30px\"}} value={ques} onChange={(e) => setques(e.target.value)}\n                      className=\"form-control input-lg\"\n                     id=\"exampleInputPassword1\" placeholder=\"Note Title\"/>\n                </div>\n                </form>\n                <br/>\n                <h5>Additional</h5>\n{/* value={} onChange={} */}\n                <EditorToolbar className='Editor-1' toolbarId={'t9'}/>\n                    <ReactQuill \n                    theme=\"snow\"\n                    modules={modules('t9')}\n                    formats={formats}\n                    style={{\"height\" : \"40%\"}}\n                    value={ques_dta} onChange={(event) => setques_dta(event)} \n                    />\n                    <br/>\n                <button className='btn btn-outline-primary' style={{\"width\" : \"48%\"}} onClick={sendData}>Update</button>\n                <button className='btn btn-outline-danger' style={{\"marginLeft\" : \"4%\" ,\"width\" : \"48%\"}} onClick={handleClose}>Cancel</button>\n                </div>\n        \n            </Modal>\n    </div>\n    </>\n    : <h1>Data Not available</h1>}\n    \n    </>\n    )\n}\n\n\nexport default UpdateQ\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}