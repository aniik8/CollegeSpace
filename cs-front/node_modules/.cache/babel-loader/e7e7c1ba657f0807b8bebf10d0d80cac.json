{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance from '../AuthComp/AxiosInstance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UpdateQ = props => {\n  _s();\n\n  const history = useHistory();\n  const [ques, setques] = useState(props.q);\n  const [ques_dta, setques_dta] = useState(props.qd);\n  console.log(props.qid + props.qslug);\n\n  const sendData = () => {\n    axiosInstance.post(`update-question/${props.qslug}/${props.qid}`, {\n      question: ques,\n      question_data: ques_dta,\n      user: JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id\n    }).then(res => console.log(res));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.q !== undefined ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: ques,\n              onChange: e => {\n                setques(e.target.value);\n              },\n              className: \"form-control\",\n              id: \"exampleInputEmail1\",\n              \"aria-describedby\": \"emailHelp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(EditorToolbar, {\n          toolbarId: 't1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          value: ques_dta,\n          modules: modules('t1'),\n          formats: formats,\n          onChange: event => setques_dta(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary outline\",\n        onClick: sendData,\n        children: \"Update?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(UpdateQ, \"uzAF13713i+XFamaPWUP3rK4xRs=\", false, function () {\n  return [useHistory];\n});\n\n_c = UpdateQ;\nexport default UpdateQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateQ\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/UpdateQ.js"],"names":["React","useState","ReactQuill","EditorToolbar","modules","formats","useHistory","axiosInstance","UpdateQ","props","history","ques","setques","q","ques_dta","setques_dta","qd","console","log","qid","qslug","sendData","post","question","question_data","user","JSON","parse","atob","localStorage","getItem","split","user_id","then","res","undefined","e","preventDefault","target","value","event"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,iCAAP;AACA,OAAOC,aAAP,IAAwBC,OAAxB,EAAiCC,OAAjC,QAAgD,kBAAhD;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AAEvB,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACQ,KAAK,CAACI,CAAP,CAAhC;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAACQ,KAAK,CAACO,EAAP,CAAxC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,GAAN,GAAYV,KAAK,CAACW,KAA9B;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACnBd,IAAAA,aAAa,CAACe,IAAd,CAAoB,mBAAkBb,KAAK,CAACW,KAAM,IAAGX,KAAK,CAACU,GAAI,EAA/D,EAAkE;AAC9DI,MAAAA,QAAQ,EAAGZ,IADmD;AAE9Da,MAAAA,aAAa,EAAGV,QAF8C;AAG9DW,MAAAA,IAAI,EAAIC,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,KAArC,CAA2C,GAA3C,EAAgD,CAAhD,CAAD,CAAf,EAAqEC;AAHf,KAAlE,EAIGC,IAJH,CAISC,GAAD,IAASjB,OAAO,CAACC,GAAR,CAAYgB,GAAZ,CAJjB;AAKH,GAND;;AAOA,sBACA;AAAA,cACEzB,KAAK,CAACI,CAAN,KAAYsB,SAAZ,gBACF;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACA;AAAM,UAAA,QAAQ,EAAGC,CAAD,IAAOA,CAAC,CAACC,cAAF,EAAvB;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACA;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,KAAK,EAAE1B,IAA1B;AAAgC,cAAA,QAAQ,EAAGyB,CAAD,IAAO;AAACxB,gBAAAA,OAAO,CAACwB,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AAAwB,eAA1E;AAA4E,cAAA,SAAS,EAAC,cAAtF;AAAqG,cAAA,EAAE,EAAC,oBAAxG;AAA6H,kCAAiB;AAA9I;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAOA,QAAC,aAAD;AAAe,UAAA,SAAS,EAAE;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAPA,eAQA,QAAC,UAAD;AACA,UAAA,KAAK,EAAC,MADN;AAEA,UAAA,KAAK,EAAEzB,QAFP;AAGA,UAAA,OAAO,EAAEV,OAAO,CAAC,IAAD,CAHhB;AAIA,UAAA,OAAO,EAAEC,OAJT;AAKA,UAAA,QAAQ,EAAGmC,KAAD,IAAWzB,WAAW,CAACyB,KAAD;AALhC;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAmBA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAA0D,QAAA,OAAO,EAAEnB,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBA;AAAA,oBADE,gBAwBA;AAzBF,mBADA;AA8BH,CA5CD;;GAAMb,O;UAEcF,U;;;KAFdE,O;AA8CN,eAAeA,OAAf","sourcesContent":["import React, {useState } from 'react'\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport {useHistory} from 'react-router-dom'\nimport axiosInstance from '../AuthComp/AxiosInstance';\n\nconst UpdateQ = (props) => {\n    \n    const history = useHistory();\n    const [ques, setques] = useState(props.q)\n    \n    const [ques_dta, setques_dta] = useState(props.qd)\n    console.log(props.qid + props.qslug);\n    const sendData = () => {\n        axiosInstance.post(`update-question/${props.qslug}/${props.qid}`, {\n            question : ques,\n            question_data : ques_dta ,\n            user : (JSON.parse(atob(localStorage.getItem('access_token').split('.')[1])).user_id)\n        }).then((res) => console.log(res))\n    }\n    return(\n    <>\n    { props.q !== undefined ? \n    <>\n    <div className='container'>\n    <form onSubmit={(e) => e.preventDefault()}>\n        <div className=\"form-group\">\n        <input type=\"text\" value={ques} onChange={(e) => {setques(e.target.value)}} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n        <br/>\n        </div>\n        </form>    \n    <EditorToolbar toolbarId={'t1'}/>\n    <ReactQuill\n    theme=\"snow\"\n    value={ques_dta}\n    modules={modules('t1')}\n    formats={formats}\n    onChange={(event) => setques_dta(event)\n    }\n    />\n    \n    </div>   \n    <button type='button' className='btn btn-primary outline' onClick={sendData}>Update?</button>\n    \n    </>\n    \n    : <></>}\n    \n    </>\n    )\n}\n\nexport default UpdateQ\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}