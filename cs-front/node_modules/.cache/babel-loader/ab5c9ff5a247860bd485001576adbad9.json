{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport BaseUrl from './BaseUrl';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [questions, setquestions] = React.useState([]);\n  const [isNull, setNull] = useState(false);\n  useEffect(() => {\n    fetch(`${BaseUrl}questions`).then(data => data.json()).then(response => setquestions(response));\n  }, [setquestions]);\n  console.log(questions.length);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), questions.length !== 0 ? questions.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: item.question\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 21\n          }, this)\n        }, void 0, false);\n      }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Data not available right now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"dbKnHbT8Thy9vl+3FsH6gNRYvdc=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js"],"names":["React","Navbar","BaseUrl","useEffect","useState","Questions","questions","setquestions","isNull","setNull","fetch","then","data","json","response","console","log","length","map","item","index","question"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BP,KAAK,CAACI,QAAN,CAAe,EAAf,CAAnC;AACA,QAAM,CAACI,MAAD,EAASC,OAAT,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,KAAK,CAAE,GAAER,OAAQ,WAAZ,CAAL,CACCS,IADD,CACOC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADhB,EAC6BF,IAD7B,CACmCG,QAAD,IAAaP,YAAY,CAACO,QAAD,CAD3D;AACuE,GAFlE,EAEoE,CAACP,YAAD,CAFpE,CAAT;AAGIQ,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAS,CAACW,MAAtB;AACJ,sBACI;AAAA,4BACA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMX,SAAS,CAACW,MAAX,KAAuB,CAAxB,GAA6BX,SAAS,CAACY,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KAC5C;AACI,4BACI;AAAA,iCACC;AAAA,mCACI;AAAA,wBAAiBD,IAAI,CAACE;AAAtB,eAASD,KAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADD,yBADJ;AAOF,OAT4B,CAA7B,gBAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZL;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAmBH,CA1BD;;GAAMf,S;;KAAAA,S;AA4BN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport BaseUrl from './BaseUrl'\nimport { useEffect, useState } from 'react'\nconst Questions = () => {\n    const [questions, setquestions]  = React.useState([])\n    const [isNull, setNull] = useState(false)\n    useEffect(()=>{\n        fetch(`${BaseUrl}questions`)\n        .then((data) => data.json()).then((response)=> setquestions(response))}, [setquestions])\n        console.log(questions.length)\n    return (\n        <>\n        <Navbar/>\n        <div>\n            <h1>Hello</h1>\n           {((questions.length) !== 0) ? questions.map((item, index)=> \n           {\n               return(\n                   <> \n                    <div>\n                        <h1 key={index}>{item.question}</h1>\n                    </div>\n                    </>\n                    )\n            })\n           : <h4>Data not available right now</h4>}\n        </div>\n        </>\n    )\n}\n\nexport default Questions\n"]},"metadata":{},"sourceType":"module"}