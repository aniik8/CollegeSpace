{"ast":null,"code":"var _jsxFileName = \"/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Navbar from './Navbar';\nimport { BaseUrl } from './BaseUrl';\nimport { user } from './BaseUrl';\nimport { useEffect, useState } from 'react';\nimport Footer from './Footer';\nimport { Link } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [questions, setquestions] = React.useState([]);\n  const [isNull, setNull] = useState(false);\n  useEffect(() => {\n    fetch(`${BaseUrl}questions`).then(data => data.json()).then(response => setquestions(response));\n  }, [setquestions]);\n  const [clicked, setClicked] = useState(false);\n  {\n    user ? console.log(\"Yes\") : console.log(\"Np\");\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        \"width\": \"50%\",\n        \"height\": \"50%\",\n        \"margin\": \"auto\",\n        \"position\": \"absolute\",\n        \"top\": '0',\n        \"left\": '0',\n        \"bottom\": '0',\n        \"right\": '0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Recently asked questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success\",\n        onClick: () => setClicked(true) // axiosInstance.post(``, {\n        // })\n        ,\n        children: \"Ask Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), clicked === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(EditorToolbar, {\n          toolbarId: 't1'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n          theme: \"snow\",\n          placeholder: \"Write something awesome...\",\n          modules: modules('t1'),\n          formats: formats\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-success\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          onClick: () => setClicked(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          \"height\": \"2px\",\n          \"width\": \"100%\",\n          \"borderWidth\": \"0\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-md\",\n        style: {\n          width: \"50$\"\n        },\n        children: questions.length !== 0 ? questions.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/question/${item.slug}/${item.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: item.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.question_date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this)\n          }, void 0, false);\n        }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Data not available right now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Questions, \"u4uRGwpEwbOTWqTLAbz6KNSN0kg=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"sources":["/Users/jaibhole/Documents/CS/cs-front/src/Component/Questions.js"],"names":["React","Navbar","BaseUrl","user","useEffect","useState","Footer","Link","ReactQuill","EditorToolbar","modules","formats","Questions","questions","setquestions","isNull","setNull","fetch","then","data","json","response","clicked","setClicked","console","log","textAlign","width","length","map","item","index","slug","id","question","question_date"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Navbar from './Navbar'\nimport {BaseUrl} from './BaseUrl'\nimport {user} from './BaseUrl'\nimport { useEffect, useState } from 'react';\nimport Footer from './Footer';\nimport { Link } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport EditorToolbar, { modules, formats } from \"../EditorToolbar\";\nconst Questions = () => {\n    const [questions, setquestions]  = React.useState([])\n    const [isNull, setNull] = useState(false)\n    useEffect(()=>{\n        fetch(`${BaseUrl}questions`)\n        .then((data) => data.json()).then((response)=> setquestions(response))}, [setquestions])\n        \n    const [clicked, setClicked] = useState(false);\n    {user ? console.log(\"Yes\") : console.log(\"Np\")}\n    return (\n        <>\n        <Navbar/>\n        <div className='container' style={{\"width\": \"50%\",\n            \"height\": \"50%\",\n            \"margin\": \"auto\",\n            \"position\": \"absolute\",\n            \"top\": '0',\"left\": '0', \"bottom\": '0', \"right\": '0'}}>\n            <h1 style={{textAlign:\"center\"}}>Recently asked questions</h1>\n            <button type='button' className='btn btn-outline-success' onClick={() => \n                (setClicked(true))\n                // axiosInstance.post(``, {\n\n                // })\n            }>Ask Question</button>\n            {clicked === true ? \n                <>\n                \n                    <EditorToolbar toolbarId={'t1'}/>\n                    <ReactQuill theme=\"snow\"\n                        placeholder={\"Write something awesome...\"}\n                        modules={modules('t1')}\n                        formats={formats} />\n                    <button type='button' className='btn btn-outline-success'>Submit</button>\n                    <button type='submit' className='btn btn-outline-danger' onClick={() => setClicked(false)}>Cancel</button>\n                \n\n            </>:\n            <></>\n         }\n            <hr style={{\"height\":\"2px\", \"width\":\"100%\", \"borderWidth\":\"0\"}} />\n\n            {/*style={{display: 'inline-block', width: \"calc((100% - 0.1em)/2), \"}}*/}\n            <div className='container-md' style={{width:\"50$\"}}>\n           {((questions.length) !== 0) ? questions.map((item, index)=> \n           {\n               return(\n                   <> \n                    <div key={index}>\n                        <Link to={`/question/${item.slug}/${item.id}`}><h3>{item.question}</h3></Link>\n                        <p>{item.question_date}</p>\n                    </div>\n                    </>\n                    )\n            })\n           : <h4>Data not available right now</h4>}\n           </div>\n\n        </div>\n        \n        \n        </>\n    )\n}\n\nexport default Questions\n"]},"metadata":{},"sourceType":"module"}